{"version":3,"file":"src_app_pages_host_host_module_ts.js","mappings":"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","sources":["./src/app/pages/host/host.component.ts","./src/app/pages/host/host.module.ts","./src/app/pages/host/host.component.html"],"sourcesContent":["import { Component, Inject, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { MatCalendarCellCssClasses } from '@angular/material/datepicker';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute } from '@angular/router';\nimport { Property } from 'src/app/app.models';\nimport { AppService } from 'src/app/app.service';\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\nimport { NearbyService } from 'src/app/services/nearby.service';\nimport { ReservationsService } from 'src/app/services/reservations.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.scss']\n})\nexport class HostComponent implements OnInit {\n  /*public sub ;\n   public propertyId: any;\n    constructor(\n      @Inject(PLATFORM_ID) private platformId: Object,\n      private activatedRoute: ActivatedRoute,\n    ) { }\n  \n    ngOnInit(): void {\n      this.sub = this.activatedRoute.params.subscribe(params => {   \n        this.propertyId = params['id'];\n      });\n    }*/\n  public sub;\n  public propertyId: any;\n  public submitForm:FormGroup; \n  public messages  = [];\n  public count = 0;\n  todayDate: Date = new Date();\n  displayedColumns: string[] = ['Arrive', 'Departure', 'name', 'actions'];\n  displayedColumns2: string[] = ['Arrive', 'Departure', 'name', 'Status'];\n  satuts: string[] = ['En attente','Refusé', 'Validé'];\n  public start = [];\n  public datamessages =[];\n  public end = [];\n  public parameters: any = null;\n  dataSource: MatTableDataSource<any>;\n  dataSource2: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator2: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort2: MatSort;\n  datesToHighlight = [\"2022-04-22T18:30:00.000Z\", \"2019-01-22T18:30:00.000Z\", \"2019-01-24T18:30:00.000Z\", \"2019-01-28T18:30:00.000Z\", \"2019-01-24T18:30:00.000Z\", \"2019-01-23T18:30:00.000Z\", \"2019-01-22T18:30:00.000Z\", \"2019-01-25T18:30:00.000Z\"];\n  data: any[];\n  constructor(public appService: AppService, public accomodationservice: AccommodationsService, private activatedRoute: ActivatedRoute,\n    public reservationservice: ReservationsService,private fb: FormBuilder,public nearbyservice:NearbyService,public snackBar:MatSnackBar\n  ) { }\n\n  async ngOnInit() {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.propertyId = params['id'];\n    });\n    const data = await this.accomodationservice.getAccommodationHost(this.propertyId).toPromise();\n    \n    data['unavailableSlots'].forEach(element => {\n      this.start.push({ start: new Date(element.start), end: new Date(element.end) });\n    });\n    this.datamessages = await this.accomodationservice.getAccommodation(this.propertyId).toPromise();\n    console.log(this.datamessages['nearby']);\n    this.datamessages['nearby'].forEach(element => {\n      this.messages.push({ id:element.id,name: element.name, message: element.description ,date : new Date(element['address'].city)});\n    });\n    this.count = 0;\n    //  var event ;\n    //  event.pageIndex = 0;\n    this.data = this.appService.getPropertyStatuses();\n    this.loaddata();\n    this.loaddata2();\n    this.getparameters();\n    const parameters = await this.accomodationservice.getAccommodationBookingsParameters(this.propertyId).toPromise();\n    this.parameters = parameters;\n    console.log('hna:',this.parameters);\n    this.submitForm = this.fb.group({\n      additional: this.fb.group({\n      \n        parameters: this.buildParameters(),\n\n      })\n   \n    }); \n\n\n  }\n  public buildParameters() {\n\n    const arr = this.parameters.map(parameter  => { \n      \n       return this.fb.group({\n        valuertext:null,\n        valeurbool:null,\n        valeurnumber:null,\n        id : parameter.id\n      });\n    })   \n    return this.fb.array(arr);\n  }\n  propertyType(data) {\n    return this.data[parseInt(data)].name;\n  }\n  myFilter = (d: Date): boolean => {\n\n    for (let index = 0; index < this.start.length; index++) {\n      const start = this.start[index].start;\n      const end = this.start[index].end;\n      if (d >= start && d <= end) return false;\n    }\n\n    return true;\n\n  }\nsubmitparameters(){\n  var data = [];\n  var arrayControl = this.submitForm.get(['additional','parameters']).value;\n  arrayControl.forEach(element => {\n\n          if(element.valuertext != null && element.valuertext != ''){\n              data.push({valueText:element.valuertext,customFieldId:element.id});\n          }\n          else if(element.valeurbool != null && element.valeurbool != ''){\n            data.push({valueBoolean:JSON.parse(element.valeurbool),customFieldId:element.id});\n          }\n\n        else if(element.valuernumber != null && element.valuernumber != ''){\n          data.push({valueNumber:element.valuertext,customFieldId:element.id});\n           }\n        else data.push({customFieldId:element.id});   \n  });\n  this.accomodationservice.putAcommodation(this.propertyId,{accommodationFieldValues:data}).subscribe(res =>\n    {\n      if (res) {\n        this.snackBar.open(\"Champ ajouter !\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \n      }\n      else\n      this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    }\n  )\n}\nget formRow() {\n  return this.submitForm.get(['additional','parameters']) as FormArray;\n}\n  list: any[] = [];\n  loaddata() {\n    this.accomodationservice.getAccommodationBookingsToValidate(this.propertyId).subscribe(res => {\n      if (!res) {\n        return;\n      }\n\n      this.dataSource = new MatTableDataSource<any>(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  loaddata2() {\n    this.accomodationservice.getAccommodationBookings(this.propertyId, { page: 0, order: 'desc' }).subscribe(res => {\n      if (!res) {\n        return;\n      }\n\n      this.dataSource2 = new MatTableDataSource<any>(res['items']);\n      this.dataSource2.paginator = this.paginator2;\n      this.dataSource2.sort = this.sort2;\n    });\n  }\n\n  getstatut() {\n\n  }\n\n  public initDataSource(data: any) {\n\n\n    this.dataSource = new MatTableDataSource<Property>(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  validatereservation(id) {\n    this.reservationservice.putReservations(id, { bookingStatus: 2 }).subscribe(res => {\n      if (res) {\n        this.snackBar.open(\"Réservation valider !\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \n      }\n      else\n      this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      this.ngOnInit();\n    })\n  }\n\n  cancelreservation(id) {\n    this.reservationservice.putReservations(id, { bookingStatus: 1 }).subscribe(res => {\n      if (res) {\n        this.snackBar.open(\"Reservation annuler !\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \n      }\n      else\n      this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n\n      this.ngOnInit();\n\n    })\n  }\n\n  getstatuts(a: any) {\n    return this.satuts[a];\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  selectedDate: any;\n  onSelect(event) {\n    \n    this.selectedDate = event;\n  }\n\n  dateClass() {\n\n    return (date: Date): MatCalendarCellCssClasses => {\n\n      for (let index = 0; index < this.end.length; index++) {\n        const start = this.end[index].start;\n        const end = this.end[index].end;\n        if (date >= start && date <= end) return 'special-date';\n      }\n\n      return '';\n\n    }\n  }\n  push(dateRangeStart: HTMLInputElement, dateRangeEnd: HTMLInputElement){\n        this.end.push({start:new Date (dateRangeStart.value),end:new Date (dateRangeEnd.value)});\n        this.dateClass();\n  }\n  clear(){\n    this.end = [];\n    this.dateClass();\n  }\n  submitslots(){\n    if(this.end.length>0){\n\n      this.end.forEach(element => {\n        this.start.push({start:element.start,end:element.end})\n      });  \n      this.accomodationservice.putAcommodation(this.propertyId,{unavailableSlots:this.start}).subscribe( res =>{\n        if (res) {\n          this.snackBar.open(\"Planning Modifier !\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \n        }\n        else\n        this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n\n        this.ngOnInit()\n        this.end = [];\n      }\n       \n      );\n    }else alert('aucun element a ajouter !');\n \n \n  }\n\n  async getparameters(){\n   // this.parameters = await this.accomodationservice.getAccommodationBookingsParameters(this.propertyId).toPromise();\n  }\n  remove(ids){\n    \n      this.datamessages['nearby'] = this.datamessages['nearby'].filter(({ id }) => id !== ids);\n      this.accomodationservice.putAcommodation(this.propertyId,{nearby:this.datamessages['nearby']}).subscribe();          \n      this.nearbyservice.deleteNearby(ids).subscribe();;\n      console.log(this.datamessages['nearby']);\n      this.messages =[];\n      this.ngOnInit();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { AgmCoreModule } from '@agm/core';  \r\nimport { HostComponent } from './host.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\nexport const routes = [\r\n  { \r\n    path: '', \r\n    component: HostComponent, children: [\r\n      { path: '', redirectTo: 'profile', pathMatch: 'full' }, \r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HostComponent\r\n  ],\r\n  exports: [\r\n    HostComponent, \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    InputFileModule,\r\n    AgmCoreModule,\r\n    MatTabsModule,\r\n    \r\n  ]\r\n})\r\nexport class HostModule { }\r\n","export default \"<div class=\\\"px-3\\\">\\r\\n\\r\\n    <div class=\\\"theme-container\\\">\\r\\n        <mat-card class=\\\"main-content-header mb-5\\\">\\r\\n            <mat-tab-group>\\r\\n                <mat-tab label=\\\"Réservation en attente\\\">\\r\\n\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\"\\r\\n                            autocomplete=\\\"off\\\">\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"table-wrapper\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"Arrive\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date d'arrivée </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.dateArrival | date: 'dd/MM/yyyy'}}</a></td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"Departure\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date de départ </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.dateDeparture | date: 'dd/MM/yyyy'}}</a></td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"name\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>voyageur</th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.user.firstName}} {{element.user.lastName}}</a>\\r\\n                                </td>\\r\\n                            </ng-container>\\r\\n\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"actions\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"validatereservation(element.id)\\\"\\r\\n                                        matTooltip=\\\"Valider\\\" class=\\\"remove\\\">\\r\\n                                        <mat-icon>event_available</mat-icon>\\r\\n                                    </button>\\r\\n                                    <button mat-icon-button color=\\\"primary\\\" (click)=\\\"cancelreservation(element.id)\\\"\\r\\n                                        matTooltip=\\\"Annuler\\\" class=\\\"remove\\\">\\r\\n                                        <mat-icon>event_busy</mat-icon>\\r\\n                                    </button>\\r\\n\\r\\n\\r\\n                                </td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                            <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">No data available</p>\\r\\n                    </div>\\r\\n                    <mat-paginator [pageSizeOptions]=\\\"[20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n\\r\\n                </mat-tab>\\r\\n                <mat-tab label=\\\"Historique des réservations\\\">\\r\\n\\r\\n\\r\\n\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\"\\r\\n                            autocomplete=\\\"off\\\">\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"table-wrapper\\\">\\r\\n                        <table mat-table [dataSource]=\\\"dataSource2\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"Arrive\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date d'arrivée </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.dateArrival | date: 'dd/MM/yyyy'}}</a></td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"Departure\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Date de départ </th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.dateDeparture | date: 'dd/MM/yyyy'}}</a></td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"name\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>voyageur</th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{element.user.firstName}} {{element.user.lastName}}</a>\\r\\n                                </td>\\r\\n                            </ng-container>\\r\\n\\r\\n                            <ng-container matColumnDef=\\\"Status\\\">\\r\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Statut de la réservation</th>\\r\\n                                <td mat-cell *matCellDef=\\\"let element \\\"><a\\r\\n                                        [routerLink]=\\\"['/properties', element.accommodationId ]\\\"\\r\\n                                        class=\\\"property-name\\\">{{getstatuts(element.bookingStatus)}}</a>\\r\\n                                </td>\\r\\n                            </ng-container>\\r\\n\\r\\n\\r\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\r\\n                            <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns2;\\\">\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                        <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p>\\r\\n                    </div>\\r\\n                    <mat-paginator [pageSizeOptions]=\\\"[20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n                </mat-tab>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <mat-tab label=\\\"Gérer les disponibilités\\\" >\\r\\n\\r\\n                    <h2 style=\\\"margin: 2%;color:white;\\\"> Gérer les disponibilités</h2>\\r\\n\\r\\n                    <mat-form-field appearance=\\\"fill\\\" style=\\\"margin-left: 2%;\\\">\\r\\n                        <mat-label>Enter une date</mat-label>\\r\\n                        <mat-date-range-input [rangePicker]=\\\"picker\\\" [dateFilter]=\\\"myFilter\\\">\\r\\n                            <input matStartDate #dateRangeStart placeholder=\\\"Start date\\\">\\r\\n                            <input matEndDate #dateRangeEnd placeholder=\\\"End date\\\">\\r\\n                        </mat-date-range-input>\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-date-range-picker #picker [dateClass]=\\\"dateClass()\\\" (selectedChange)=\\\"onSelect($event)\\\">\\r\\n                            <mat-date-range-picker-actions>\\r\\n                                <button mat-button matDateRangePickerCancel (click)=\\\"clear()\\\">Annuler</button>\\r\\n                                <button mat-raised-button color=\\\"primary\\\" matDateRangePickerApply\\r\\n                                    (click)=\\\"push(dateRangeStart, dateRangeEnd)\\\">Appliquer</button>\\r\\n                            </mat-date-range-picker-actions>\\r\\n                        </mat-date-range-picker>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <button style=\\\"margin-left: 2%;\\\" mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\"\\r\\n                        (click)=\\\"submitslots()\\\">Sauvgarder</button>\\r\\n\\r\\n                </mat-tab>\\r\\n                <mat-tab label=\\\"Informations supplémentaires\\\">\\r\\n\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\" [formGroup]=\\\"submitForm\\\" (ngSubmit)=\\\"submitparameters()\\\"\\r\\n                        *ngIf=\\\"submitForm\\\">\\r\\n                        <p class=\\\"uppercase m-2 fw-500\\\">Informations supplémentaires</p>\\r\\n                        <form formGroupName=\\\"additional\\\"  style=\\\"display: table-caption !important;\\\">\\r\\n                            <div class=\\\"pl-lg-4\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-lg-6\\\">\\r\\n                                        <div formArrayName=\\\"parameters\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                            <div [formGroupName]=\\\"i\\\"\\r\\n                                                *ngFor=\\\"let control of submitForm.get('additional')['controls'].parameters['controls']; index as i\\\"\\r\\n                                                class=\\\"p-2\\\">\\r\\n                                                <!-- <mat-checkbox formControlName=\\\"selected\\\" (change)=\\\"onChange($event)\\\"  [value]=\\\"parameters[i].id \\\">{{parameters[i].name }}</mat-checkbox>-->\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <mat-radio-group *ngIf=\\\"parameters[i].value == 0\\\"\\r\\n                                                        aria-label=\\\"Select an option\\\" id=\\\"parameters[i].id\\\"\\r\\n                                                        formControlName=\\\"valeurbool\\\" class=\\\"w-100\\\">\\r\\n                                                        <mat-label>{{parameters[i].label}}</mat-label><br>\\r\\n                                                        <mat-radio-button value=true>Oui</mat-radio-button>\\r\\n                                                        <mat-radio-button style=\\\"margin-left: 5%;\\\" value=false>Non\\r\\n                                                        </mat-radio-button>\\r\\n                                                    </mat-radio-group>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n                                                    <mat-form-field *ngIf=\\\"parameters[i].value == 1\\\"\\r\\n                                                        appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                                        <mat-label>{{parameters[i].label}}</mat-label>\\r\\n                                                        <input matInput id=\\\"parameters[i].id\\\"\\r\\n                                                            formControlName=\\\"valuertext\\\" type=\\\"text\\\" autocomplete=\\\"off\\\">\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"form-group\\\">\\r\\n\\r\\n                                                    <mat-form-field *ngIf=\\\"parameters[i].value == 2\\\"\\r\\n                                                        appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                                        <mat-label>{{parameters[i].label}}</mat-label>\\r\\n                                                        <input matInput id=\\\"parameters[i].id\\\"\\r\\n                                                            formControlName=\\\"valuernumber\\\" type=\\\"tel\\\"\\r\\n                                                            autocomplete=\\\"off\\\">\\r\\n                                                    </mat-form-field>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <button mat-raised-button  class=\\\"col-12 text-right\\\" type=\\\"submit\\\" color=\\\"primary\\\">Sauvgarder</button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n                </mat-tab>\\r\\n                <mat-tab label =\\\"Messages\\\">\\r\\n                    <mat-card class=\\\"p-5 mt-5\\\">\\r\\n                        <mat-card-header fxLayoutAlign=\\\"center center\\\">\\r\\n                            <mat-card-title class=\\\"uppercase\\\">Messages</mat-card-title>\\r\\n                        </mat-card-header>\\r\\n                        <div class=\\\"divider\\\"></div>\\r\\n                        <div>\\r\\n                            <mat-list class=\\\"reviews mt-3\\\">\\r\\n                                <mat-list-item *ngFor=\\\"let message of messages\\\" class=\\\"h-100\\\">\\r\\n                                    <!--   <img matListAvatar [src]=\\\"review.avatar\\\" alt=\\\"image\\\" class=\\\"review-author\\\"> -->\\r\\n                                    <p matLine fxLayoutAlign=\\\"start center\\\">\\r\\n                                        <span class=\\\"fw-500\\\">{{message.name}}</span> <span\\r\\n                                            style=\\\"margin-left: 1%;\\\">\\r\\n                                        </span>\\r\\n                                        <mat-icon class=\\\"text-muted px-1\\\"  matTooltipPosition=\\\"after\\\">\\r\\n                                            message</mat-icon>\\r\\n                                    </p>\\r\\n                                    <p matLine class=\\\"text-muted\\\"><small>{{message.date | date: 'dd/MM/yyyy'}}</small></p>\\r\\n                                    <p matLine class=\\\"text\\\">{{message.message}}</p>\\r\\n                                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(message.id)\\\"\\r\\n                                    matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                                    <mat-icon>done</mat-icon>\\r\\n                                </button>\\r\\n                                </mat-list-item>\\r\\n                            </mat-list>\\r\\n                        </div>\\r\\n                    </mat-card>    \\r\\n                </mat-tab>\\r\\n            </mat-tab-group>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}