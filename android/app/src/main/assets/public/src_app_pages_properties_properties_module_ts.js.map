{"version":3,"file":"src_app_pages_properties_properties_module_ts.js","mappings":"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","sources":["./src/app/pages/properties/contact-host/contact-host.component.ts","./src/app/pages/properties/payment/payment.component.ts","./src/app/pages/properties/properties.component.ts","./src/app/pages/properties/properties.module.ts","./src/app/pages/properties/property/property.component.ts","./src/app/pages/properties/contact-host/contact-host.component.html","./src/app/pages/properties/payment/payment.component.html","./src/app/pages/properties/properties.component.html","./src/app/pages/properties/property/property.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { NearbyService } from 'src/app/services/nearby.service';\nimport { OptionsService } from 'src/app/services/options.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\n\n@Component({\n  selector: 'app-contact-host',\n  templateUrl: './contact-host.component.html',\n  styleUrls: ['./contact-host.component.scss']\n})\nexport class ContactHostComponent implements OnInit {\n  public contactForm: FormGroup;\n  public lat: number = 48.844101;\n  public lng: number = 2.431290;\n  public zoom: number = 12; \n  public propertyId:any;\n  public sub:any;\n  constructor( @Inject(MAT_DIALOG_DATA) public data: any,public formBuilder: FormBuilder,public snearbyservice : NearbyService,\n  private activatedRoute: ActivatedRoute,public UserService:UsersService,public dialogRef: MatDialogRef<ContactHostComponent>) { }\n\n  ngOnInit() {\n    this.contactForm = this.formBuilder.group({\n      message: ['', Validators.required]\n    });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  public async onContactFormSubmit(values:Object){\n    if (this.contactForm.valid) {\n      this.sub = this.activatedRoute.params.subscribe(params => {   \n        this.propertyId = params['id'];\n      });\n      var data = await this.UserService.getUsersprofile().toPromise();\n      const values = {description: this.contactForm.value.message,name:data['firstName']+\" \"+data['lastName'],price:0,url:\"\",distance:0,address:{addressComplement: \"\",city:new Date(),cityCode:\"\",postalCode:\"\",street:\"\",x:null,y:null},photos:[], accommodationId:parseInt(this.data.accommodationId)};\n      console.log(values);\n      this.snearbyservice.postNearby(values).subscribe();\n      this.onNoClick();\n    }\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AppService } from 'src/app/app.service';\nimport { ReservationsService } from 'src/app/services/reservations.service';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.scss']\n})\nexport class PaymentComponent implements OnInit {\n\n  form: FormGroup;\n  public propertyStatuses = [];\n  constructor(  @Inject(MAT_DIALOG_DATA) public data: any,public dialogRef: MatDialogRef<PaymentComponent>,public reservationservice:ReservationsService,private formBuilder: FormBuilder,public appService:AppService,\n   public snackBar: MatSnackBar ) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      creditCard: ['',Validators.required],\n      expirationDate:['',Validators.required],\n      cvc:['',Validators.required]\n    }); \n    this.propertyStatuses = this.appService.getPropertyStatuses();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  } \n  submit(){\n    var dateconcat = '01/'+this.form.value.expirationDate;\n    var exp = formatDate(new Date(dateconcat), 'yyyy/dd/MM', 'en');\n    var last = new Date(exp);\n    const values = {accommodationId: this.data.accommodationId, cardNumber: this.form.value.creditCard,cvc : this.form.value.cvc , \n                     dateArrival :this.data.datestart,dateDeparture:this.data.dateend,expiration:last,travelers:this.data.numberprs,\n                     month:last.getMonth()+1,year:last.getFullYear()\n    };\n    console.log('Ajouter :',values);\n    var start=[];\n    start.push({start :this.data.datestart,end:this.data.dateend});\n    this.reservationservice.postReservations(values).subscribe(res => {\n      console.log('Ajouter : ', res);\n      if (res) {\n        this.snackBar.open(\"Success la reservation est en attente d'approvement !\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \n      }\n      else\n      this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      this.onNoClick();\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\nfunction MD_DIALOG_DATA(MD_DIALOG_DATA: any) {\n  throw new Error('Function not implemented.');\n}\n\n","import { Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MediaChange, MediaObserver } from '@angular/flex-layout';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { Settings, AppSettings } from '../../app.settings';\r\nimport { AppService } from '../../app.service';\r\nimport { Property, Pagination } from '../../app.models';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DevicesService } from 'src/app/services/devices.service';\r\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-properties',\r\n  templateUrl: './properties.component.html',\r\n  styleUrls: ['./properties.component.scss']\r\n})\r\nexport class PropertiesComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen: boolean = true;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation: true\r\n  };\r\n  \r\n  @Input() variant: number = 1;\r\n  @Input() vertical: boolean = true;\r\n  public properties: any[] = [];\r\n  public viewType: string = 'grid';\r\n  public viewCol: number = 33.3;\r\n  public variable: string = \"La maison est l'endroit d'où l'on part...  –T.S. Eliot\";\r\n  public count: number = 12;\r\n  public datestart = new Date();\r\n  public dateend = new Date();\r\n  public feature = [];\r\n  public datestring1 = '';\r\n  public datestring2 = '';\r\n  public sort: string;\r\n  public searchFields: any;\r\n  public removedSearchField: string;\r\n  public pagination: Pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n  public message: string;\r\n  public watcher: Subscription;\r\n  public form: FormGroup;\r\n  public propertyTypes = [];\r\n  public propertyStatuses = [];\r\n  public cities = [];\r\n  public neighborhoods = [];\r\n  public streets = [];\r\n  public features = [];\r\n\r\n\r\n  public settings: Settings\r\n  constructor(public appSettings: AppSettings,\r\n    public appService: AppService,\r\n    public mediaObserver: MediaObserver, public accomodationservice: AccommodationsService,\r\n    @Inject(PLATFORM_ID) private platformId: Object, public fb: FormBuilder, public devicesservice: DevicesService) {\r\n    this.settings = this.appSettings.settings;\r\n    this.watcher = mediaObserver.asObservable()\r\n      .pipe(filter((changes: MediaChange[]) => changes.length > 0), map((changes: MediaChange[]) => changes[0]))\r\n      .subscribe((change: MediaChange) => {\r\n        if (change.mqAlias == 'xs') {\r\n          this.sidenavOpen = false;\r\n          this.viewCol = 100;\r\n        }\r\n        else if (change.mqAlias == 'sm') {\r\n          this.sidenavOpen = false;\r\n          this.viewCol = 50;\r\n        }\r\n        else if (change.mqAlias == 'md') {\r\n          this.viewCol = 50;\r\n          this.sidenavOpen = true;\r\n        }\r\n        else {\r\n          this.viewCol = 33.3;\r\n          this.sidenavOpen = true;\r\n        }\r\n      });\r\n\r\n  }\r\n  onChange(event) {\r\n    // this.feature = <any>this.submitForm.get('additional.features').value as any;\r\n\r\n    if (event.checked) {\r\n      this.feature.push( event.source.value   )\r\n    } else {\r\n      const i = this.feature.findIndex(x => x.value === event.source.value);\r\n      this.feature.splice(i);\r\n    }\r\n  }\r\n  \r\n   Count(){\r\n    return this.properties.length;\r\n  }\r\n  dateRangeChange(dateRangeStart: HTMLInputElement, dateRangeEnd: HTMLInputElement) {\r\n    console.log(dateRangeStart.value);\r\n    console.log(dateRangeEnd.value);\r\n\r\n    this.datestart = new Date(dateRangeStart.value);\r\n    console.log(this.datestart.getFullYear() + '-' + this.datestart.getMonth() + '-' + this.datestart.getDay())\r\n    this.datestring1 = this.datestart.getFullYear() + '-' + this.datestart.getMonth() + '-' + this.datestart.getDay();\r\n    this.dateend = new Date(dateRangeEnd.value);\r\n    this.datestring2 = this.dateend.getFullYear() + '-' + this.dateend.getMonth() + '-' + this.dateend.getDay();\r\n\r\n  }\r\n  public async loaddata() {\r\n    const data = await this.devicesservice.getDevices().toPromise();\r\n    this.features = data;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.getProperties();\r\n    await this.loaddata();\r\n    this.variable = \"La maison est l'endroit d'où l'on part...  –T.S. Eliot\";\r\n    this.propertyTypes = this.appService.getPropertyTypes();\r\n    this.propertyStatuses = this.appService.getPropertyStatuses();\r\n    this.cities = this.appService.getCities();\r\n    this.neighborhoods = this.appService.getNeighborhoods();\r\n    this.streets = this.appService.getStreets();\r\n    this.form = this.fb.group({\r\n      propertyType: 0,\r\n      propertyStatus: 0,\r\n      price: this.fb.group({\r\n        from: 0,\r\n        to: 9999999\r\n      }),\r\n      city: null,\r\n      zipCode: 0,\r\n      neighborhood: null,\r\n      street: null,\r\n      bedrooms: this.fb.group({\r\n        from: 0,\r\n        to: 100\r\n      }),\r\n      bathrooms: this.fb.group({\r\n        from: 0,\r\n        to: 100\r\n      }),\r\n      garages: this.fb.group({\r\n        from: 0,\r\n        to: 1100\r\n      }),\r\n      area: this.fb.group({\r\n        from: 0,\r\n        to: 100\r\n      }),\r\n      yearBuilt: this.fb.group({\r\n        from: 0,\r\n        to: 100\r\n      }),\r\n      features: this.buildFeatures(),\r\n      datedepart:null,\r\n      datearrive:null\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.watcher.unsubscribe();\r\n  }\r\n  vider(){\r\n    this.form.reset();\r\n    this.feature = [];\r\n    this.ngOnInit();\r\n   }\r\n  search() {\r\n    //console.log('get properties by : ', this.searchFields);  \r\n    this.properties = [];\r\n    this.appService.getProperties().subscribe(data => {\r\n      let result = this.filterData(data);\r\n      const values = {\r\n        page: 0, dateArrival: this.datestring1,\r\n        dateDeparture: this.datestring2,\r\n        travelers: this.form.get('zipCode').value, city: this.form.get('city').value,\r\n        size:this.form.value.propertyType,kind:this.form.get('propertyStatus').value,\r\n        devices:this.feature,beds:this.form.get('garages.from').value,bedrooms:this.form.get('bedrooms.from').value,\r\n        bathrooms:this.form.get('bathrooms.from').value,priceMin:this.form.get('price.from').value,priceMax:this.form.get('price.to').value\r\n      };\r\n      console.log(values);\r\n      this.accomodationservice.getAccommodations(values).subscribe(res => {\r\n        if (res['accommodations'].length == 0) {\r\n          console.log('aucun');\r\n          this.properties.length = 0;\r\n          this.pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n          this.message = 'Aucun resultat trouvé';\r\n          return false;\r\n        }\r\n        console.log(res);\r\n        res['accommodations'].forEach(element => {\r\n          console.log(element.title);\r\n          var photos = [];\r\n          element.photos.forEach(photo => {\r\n            photos.push({ small: photo.name, big: photo.name, medium: photo.name });\r\n          });\r\n          const values = {\r\n            title: element.title, bathrooms: element.bathrooms, bedrooms: element.bedrooms, city: element.address.city,\r\n            additionalFeatures: [],\r\n            area: { value: element.travelers, unit: \"voyageur\" },\r\n            desc: element.description,\r\n            featured: false,\r\n            features: [\"Climatisation\", \"Barbeque\", \"Séchoir\", \"Micro-ondes\", \"Réfrigérateur\", \"Cheminée\", \"Piscine\"],\r\n            formattedAddress: element.address.street + ', ' + element.address.city + ', ' + element.address.postalCode,\r\n            gallery: photos,\r\n            garages: element.beds,\r\n            id: element.id,\r\n            lastUpdate: \"2019-05-20 14:20:00\",\r\n            location: { lat: 40.84915, lng: -73.9351 },\r\n            neighborhood: [\"Astoria\", \"Midtown\"],\r\n            plans: [{ name: \"First floor\" }, { name: \"Second floor\" }],\r\n            priceDollar: { sale: element.price, rent: null },\r\n            priceEuro: { sale: element.price, rent: null },\r\n            propertyStatus: ['Diponible'],\r\n            propertyType: element.kind,\r\n            published: element.user.dateRegistration,\r\n            ratingsCount: 1,\r\n            ratingsValue: element.environmentalAverage,\r\n            street: [element.address.street],\r\n            videos: [],\r\n            views: 322,\r\n            yearBuilt: 2007,\r\n            zipCode: element.address.postalCode,\r\n          }\r\n          this.properties.push(values);\r\n        });\r\n      })\r\n      // this.properties = result.data;  \r\n\r\n      this.pagination = result.pagination;\r\n      this.message = null;\r\n\r\n\r\n    })\r\n\r\n  }\r\n\r\n  public getProperties() {\r\n    //console.log('get properties by : ', this.searchFields);  \r\n    this.appService.getProperties().subscribe(data => {\r\n      let result = this.filterData(data);\r\n      if (result.data.length == 0) {\r\n        this.properties.length = 0;\r\n        this.pagination = new Pagination(1, this.count, null, 2, 0, 0);\r\n        this.message = 'Aucun resultat trouvé';\r\n        return false;\r\n      }\r\n      else {\r\n        this.accomodationservice.getAccommodations({ page: 0 }).subscribe(res => {\r\n          console.log(res);\r\n          res['accommodations'].forEach(element => {\r\n            console.log(element.title);\r\n            var photos = [];\r\n            element.photos.forEach(photo => {\r\n              photos.push({ small: photo.name, big: photo.name, medium: photo.name });\r\n            });\r\n            const values = {\r\n              title: element.title, bathrooms: element.bathrooms, bedrooms: element.bedrooms, city: element.address.city,\r\n              additionalFeatures: [],\r\n              area: { value: element.travelers, unit: \"voyageur\" },\r\n              desc: element.description,\r\n              featured: false,\r\n              features: [\"Climatisation\", \"Barbeque\", \"Séchoir\", \"Micro-ondes\", \"Réfrigérateur\", \"Cheminée\", \"Piscine\"],\r\n              formattedAddress: element.address.street + ', ' + element.address.city + ', ' + element.address.postalCode,\r\n              gallery: photos,\r\n              garages: element.beds,\r\n              id: element.id,\r\n              lastUpdate: \"2019-05-20 14:20:00\",\r\n              location: { lat: 40.84915, lng: -73.9351 },\r\n              neighborhood: [\"Astoria\", \"Midtown\"],\r\n              plans: [{ name: \"First floor\" }, { name: \"Second floor\" }],\r\n              priceDollar: { sale: element.price, rent: null },\r\n              priceEuro: { sale: element.price, rent: null },\r\n              propertyStatus: ['Diponible'],\r\n              propertyType: element.kind,\r\n              published: element.user.dateRegistration,\r\n              ratingsCount: 1,\r\n              ratingsValue: element.environmentalAverage,\r\n              street: [element.address.street],\r\n              videos: [],\r\n              views: 322,\r\n              yearBuilt: 2007,\r\n              zipCode: element.address.postalCode,\r\n            }\r\n            this.properties.push(values);\r\n          });\r\n        })\r\n        // this.properties = result.data;  \r\n      }\r\n      this.pagination = result.pagination;\r\n      this.message = null;\r\n    })\r\n  }\r\n\r\n  public resetPagination() {\r\n    if (this.paginator) {\r\n      this.paginator.pageIndex = 0;\r\n    }\r\n    this.pagination = new Pagination(1, this.count, null, null, this.pagination.total, this.pagination.totalPages);\r\n  }\r\n  public buildFeatures() {\r\n\r\n    const arr = this.features.map(feature => {\r\n\r\n      return this.fb.group({\r\n        id: feature.id,\r\n        name: feature.name,\r\n      });\r\n    })\r\n    return this.fb.array(arr);\r\n  }\r\n\r\n  public filterData(data) {\r\n    return this.appService.filterData(data, this.searchFields, this.sort, this.pagination.page, this.pagination.perPage);\r\n  }\r\n\r\n  public searchClicked() {\r\n    this.properties.length = 0;\r\n    this.getProperties();\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n  public searchChanged(event) {\r\n    event.valueChanges.subscribe(() => {\r\n      this.resetPagination();\r\n      this.searchFields = event.value;\r\n      setTimeout(() => {\r\n        this.removedSearchField = null;\r\n      });\r\n      if (!this.settings.searchOnBtnClick) {\r\n        this.properties.length = 0;\r\n      }\r\n    });\r\n    event.valueChanges.pipe(debounceTime(500), distinctUntilChanged()).subscribe(() => {\r\n      if (!this.settings.searchOnBtnClick) {\r\n        this.getProperties();\r\n      }\r\n    });\r\n  }\r\n  public removeSearchField(field) {\r\n    this.message = null;\r\n    this.removedSearchField = field;\r\n  }\r\n\r\n\r\n  public changeCount(count) {\r\n    this.count = count;\r\n    this.properties.length = 0;\r\n    this.resetPagination();\r\n    this.getProperties();\r\n  }\r\n  public changeSorting(sort) {\r\n    this.sort = sort;\r\n    this.properties.length = 0;\r\n    this.getProperties();\r\n  }\r\n  public changeViewType(obj) {\r\n    this.viewType = obj.viewType;\r\n    this.viewCol = obj.viewCol;\r\n  }\r\n\r\n\r\n  public onPageChange(e) {\r\n    this.pagination.page = e.pageIndex + 1;\r\n    this.getProperties();\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgmCoreModule } from '@agm/core';  \r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PropertiesComponent } from './properties.component';\r\nimport { PropertyComponent } from './property/property.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\n//import { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\nimport { ContactHostComponent } from './contact-host/contact-host.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: PropertiesComponent, pathMatch: 'full' },\r\n  { path: ':id', component: PropertyComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PropertiesComponent, \r\n    PropertyComponent, PaymentComponent, ContactHostComponent,\r\n    \r\n  ],\r\n  exports: [\r\n    PropertiesComponent, \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    AgmCoreModule,\r\n    SharedModule,\r\n    CreditCardDirectivesModule\r\n  ],\r\n  providers: [\r\n\r\n   // { provide: MAT_DATE_LOCALE, useValue: 'es-ES' }\r\n    \r\n  ],\r\n})\r\nexport class PropertiesModule { }\r\n","import { Component, OnInit, ViewChild, HostListener, ViewChildren, QueryList, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property } from 'src/app/app.models';\r\nimport { SwiperConfigInterface, SwiperDirective } from 'ngx-swiper-wrapper';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { AppSettings, Settings } from 'src/app/app.settings';\r\nimport { CompareOverviewComponent } from 'src/app/shared/compare-overview/compare-overview.component';\r\nimport { EmbedVideoService } from 'ngx-embed-video'; \r\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\r\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { PaymentComponent } from '../payment/payment.component';\r\nimport { ContactHostComponent } from '../contact-host/contact-host.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-property',\r\n  templateUrl: './property.component.html',\r\n  styleUrls: ['./property.component.scss']\r\n})\r\nexport class PropertyComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;  \r\n  @ViewChildren(SwiperDirective) swipers: QueryList<SwiperDirective>;\r\n  @ViewChild('fondovalor') fondovalor:ElementRef;\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation:true\r\n  };\r\n  public sidenavOpen:boolean = true;\r\n  public config: SwiperConfigInterface = {}; \r\n  public config2: SwiperConfigInterface = {}; \r\n  todayDate:Date = new Date();\r\n  private sub: any;\r\n  public property:Property; \r\n  public settings: Settings;  \r\n  public embedVideo: any;\r\n  public relatedProperties: Property[];\r\n  public featuredProperties: Property[];\r\n  public agent:any;\r\n  public propertyId:any;\r\n  public mortgageForm: FormGroup;\r\n  public data:any;\r\n  data2: any[];\r\n  public start = [];\r\n  public end = [];\r\n  public days = 0;\r\n  public name = '';\r\n  public total = 0;\r\n  public datestart = new Date();\r\n  public dateend = new Date();\r\n  public monthlyPayment:any;\r\n  public contactForm: FormGroup;\r\n  constructor(public appSettings:AppSettings, \r\n              public appService:AppService, \r\n              private activatedRoute: ActivatedRoute, \r\n              private embedService: EmbedVideoService,\r\n              public fb: FormBuilder,\r\n              public dialog: MatDialog,\r\n              public accomodationservice:AccommodationsService) {\r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  dateRangeChange(dateRangeStart: HTMLInputElement, dateRangeEnd: HTMLInputElement) {\r\n    console.log(dateRangeStart.value);\r\n    console.log(dateRangeEnd.value);\r\n    console.log(this.calculateDiff(dateRangeStart.value,dateRangeEnd.value));\r\n   this.datestart = new Date (dateRangeStart.value);\r\n   this.dateend = new Date (dateRangeEnd.value); \r\n    this.days = this.calculateDiff(dateRangeStart.value,dateRangeEnd.value);\r\n  }\r\n  getdays(){\r\n    return this.days;\r\n  }\r\n\r\n  myFilter = (d: Date): boolean => {\r\n\r\n    for (let index = 0; index < this.start.length; index++) {\r\n      const start = this.start[index].start;\r\n      const end = this.start[index].end;\r\n      if (d >= start && d <= end) return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n  gettva(){\r\n   var a = this.days*this.data.price;\r\n    a = a*1.1;\r\n    return a- (this.days*this.data.price) ;\r\n  }\r\n\r\n  gettotal(){\r\n    this.total = this.days*this.data.price;\r\n    return this.total + this.gettva();\r\n  }\r\n  openDialog(): void {\r\n    console.log(this.getFotoFondo());\r\n    const dialogRef = this.dialog.open(PaymentComponent, {\r\n      width: '800px',\r\n      data: {\r\n        accommodationId:this.propertyId,\r\n        datestart: this.datestart,\r\n        dateend : this.dateend,\r\n        numberprs : this.getFotoFondo()\r\n      }\r\n    });\r\n    \r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      //this.libelle = result;\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n  openDialog2(): void {\r\n    console.log(this.getFotoFondo());\r\n    const dialogRef = this.dialog.open(ContactHostComponent, {\r\n      width: '800px',\r\n      data: {\r\n        accommodationId:this.propertyId,\r\n      }\r\n    });\r\n  }\r\n  getFotoFondo(){ \r\n     return this.fondovalor.nativeElement.value\r\n}\r\n  calculateDiff(dateSent,dateback){\r\n    dateSent = new Date(dateSent);\r\n    dateback = new Date(dateback);\r\n    return Math.floor((Date.UTC(dateback.getFullYear(), dateback.getMonth(), dateback.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\r\n}\r\n\r\n  public async ngOnInit() {\r\n    this.sub = this.activatedRoute.params.subscribe(params => {   \r\n      this.getPropertyById(params['id']); \r\n      this.propertyId = params['id'];\r\n    });\r\n    console.log(this.propertyId);\r\n\r\n    const data2 = await this.accomodationservice.getAccommodation(this.propertyId).toPromise();\r\n    data2['unavailableSlots'].forEach(element => {\r\n      this.start.push({ start: new Date(element.start), end: new Date(element.end) });\r\n    });\r\n    \r\n\r\n    const data = await this.accomodationservice.getAccommodation(this.propertyId).toPromise();\r\n    this.data =data;\r\n    console.log(this.data.price);\r\n\r\n    this.getRelatedProperties();\r\n    this.getFeaturedProperties();\r\n    this.getAgent(1);\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n      if(this.sidenav){\r\n        this.sidenav.close();\r\n      } \r\n    };\r\n    this.mortgageForm = this.fb.group({\r\n      principalAmount: ['', Validators.required],\r\n      downPayment: ['', Validators.required], \r\n      interestRate: ['', Validators.required],\r\n      period: ['', Validators.required]\r\n    });\r\n    this.contactForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', Validators.compose([Validators.required, emailValidator])],\r\n      phone: ['', Validators.required],\r\n      message: ['', Validators.required]\r\n    });\r\n  } \r\n\r\n  onKey(event) {this.name = event.target.value;}\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }  \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true; \r\n  }\r\n\r\n  public getPropertyById(id){\r\n    this.appService.getPropertyById(id).subscribe(data=>{\r\n      this.property = data;  \r\n      this.embedVideo = this.embedService.embed(this.property.videos[1].link);\r\n      setTimeout(() => { \r\n        this.config.observer = true;\r\n        this.config2.observer = true; \r\n        this.swipers.forEach(swiper => { \r\n          if(swiper){\r\n            swiper.setIndex(0);\r\n          } \r\n        }); \r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.config = {\r\n      observer: false,\r\n      slidesPerView: 1,\r\n      spaceBetween: 0,       \r\n      keyboard: true,\r\n      navigation: true,\r\n      pagination: false,\r\n      grabCursor: true,        \r\n      loop: false,\r\n      preloadImages: false,\r\n      lazy: true,\r\n      autoplay: {\r\n        delay: 5000,\r\n        disableOnInteraction: false\r\n      }\r\n    };\r\n\r\n    \r\n    this.config2 = {\r\n      observer: false,\r\n      slidesPerView: 4,\r\n      spaceBetween: 16,      \r\n      keyboard: true,\r\n      navigation: false,\r\n      pagination: false, \r\n      grabCursor: true,       \r\n      loop: false, \r\n      preloadImages: false,\r\n      lazy: true,  \r\n      breakpoints: {\r\n        200: {\r\n          slidesPerView: 2\r\n        },\r\n        480: {\r\n          slidesPerView: 3\r\n        },\r\n        600: {\r\n          slidesPerView: 4\r\n        } \r\n      }\r\n    } \r\n\r\n  }\r\n  \r\n\r\n  public onOpenedChange(){ \r\n    this.swipers.forEach(swiper => { \r\n      if(swiper){\r\n        swiper.update();\r\n      } \r\n    });     \r\n  }\r\n\r\n  public selectImage(index:number){ \r\n    this.swipers.forEach(swiper => {\r\n      if(swiper['elementRef'].nativeElement.id == 'main-carousel'){\r\n        swiper.setIndex(index);\r\n      }      \r\n    }); \r\n  }\r\n\r\n  public onIndexChange(index: number) {  \r\n    this.swipers.forEach(swiper => { \r\n      let elem = swiper['elementRef'].nativeElement;\r\n      if(elem.id == 'small-carousel'){\r\n        swiper.setIndex(index);  \r\n        for (let i = 0; i < elem.children[0].children.length; i++) {\r\n          const element = elem.children[0].children[i]; \r\n          if(element.classList.contains('thumb-'+index)){\r\n            element.classList.add('active-thumb'); \r\n          }\r\n          else{\r\n            element.classList.remove('active-thumb'); \r\n          }\r\n        }\r\n      } \r\n    });     \r\n  }\r\n\r\n  public addToCompare(){\r\n    this.appService.addToCompare(this.property, CompareOverviewComponent, (this.settings.rtl) ? 'rtl':'ltr'); \r\n  }\r\n\r\n  public onCompare(){\r\n    return this.appService.Data.compareList.filter(item=>item.id == this.property.id)[0];\r\n  }\r\n\r\n  public addToFavorites(){\r\n    this.appService.addToFavorites(this.property, (this.settings.rtl) ? 'rtl':'ltr');\r\n  }\r\n\r\n  public onFavorites(){\r\n    return this.appService.Data.favorites.filter(item=>item.id == this.property.id)[0];\r\n  }\r\n\r\n  public getRelatedProperties(){\r\n    this.appService.getRelatedProperties().subscribe(properties=>{\r\n      this.relatedProperties = properties;\r\n    })\r\n  }\r\n\r\n  public getFeaturedProperties(){\r\n    this.appService.getFeaturedProperties().subscribe(properties=>{\r\n      this.featuredProperties = properties.slice(0,3); \r\n    })\r\n  } \r\n\r\n  public getAgent(agentId:number = 1){\r\n    var ids = [1,2,3,4,5]; //agent ids \r\n    agentId = ids[Math.floor(Math.random()*ids.length)]; //random agent id\r\n    this.agent = this.appService.getAgents().filter(agent=> agent.id == agentId)[0]; \r\n  }\r\n\r\n  public onContactFormSubmit(values:Object){\r\n    if (this.contactForm.valid) { \r\n      console.log(values);\r\n    } \r\n  }\r\n\r\n  public onMortgageFormSubmit(values:Object){ \r\n    if (this.mortgageForm.valid) { \r\n      var principalAmount = values['principalAmount']\r\n      var down = values['downPayment']\r\n      var interest = values['interestRate']\r\n      var term = values['period']\r\n      this.monthlyPayment = this.calculateMortgage(principalAmount, down, interest / 100 / 12, term * 12).toFixed(2);\r\n    }     \r\n  }\r\n  public calculateMortgage(principalAmount:any, downPayment:any, interestRate:any, period:any){    \r\n    return ((principalAmount-downPayment) * interestRate) / (1 - Math.pow(1 + interestRate, -period));\r\n  } \r\n\r\n}","export default \"<h3 class=\\\"mb-0\\\">Contacter l'hote</h3>\\n<br>\\n<form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"onContactFormSubmit(contactForm.value)\\\" fxLayout=\\\"row wrap\\\">\\n\\n    <div fxFlex=\\\"100\\\" class=\\\"px-1 mt-1\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n            <mat-label>Message</mat-label>\\n            <textarea matInput placeholder=\\\"Message\\\" formControlName=\\\"message\\\" name=\\\"message\\\" required\\n                rows=\\\"7\\\"></textarea>\\n            <mat-error *ngIf=\\\"contactForm.controls.message.errors?.required\\\">Un message est requis</mat-error>\\n        </mat-form-field>\\n    </div>\\n    <div fxFlex=\\\"100\\\">\\n        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: grey;\\\" (click)=\\\"onNoClick()\\\"\\n                fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                <mat-icon>cancel</mat-icon>\\n                <span class=\\\"mx-1 uppercase\\\">Annuler</span>\\n            </button>\\n            <div class=\\\"w-100 py-2 text-center\\\">\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\" style=\\\"float: right;\\\">Envoyer</button>\\n            </div>\\n        </div>\\n    </div>\\n</form>\";","export default \"<div class=\\\"col-xl-12 order-xl-1\\\">\\r\\n    <div class=\\\"card bg-secondary shadow\\\">\\r\\n      <div class=\\\"card-header bg-white border-0\\\">\\r\\n        <div class=\\\"row align-items-center\\\">\\r\\n          <div class=\\\"col-8\\\">\\r\\n            <h3 class=\\\"mb-0\\\">Paiement</h3>\\r\\n          </div>\\r\\n          <br>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n            <div class=\\\"pl-lg-4\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Numéro de la carte de credit</mat-label>\\r\\n                            <input matInput placeholder=\\\" Enter le numéro de la carte de credit\\\" formControlName=\\\"creditCard\\\" autocomplete=\\\"cc-number\\\" ccNumber> \\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Date d'éxpiration</mat-label>\\r\\n                            <input matInput id=\\\"cc-exp-date\\\" formControlName=\\\"expirationDate\\\" type=\\\"tel\\\" autocomplete=\\\"cc-exp\\\" ccExp>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Cvc</mat-label>\\r\\n                            <input matInput id=\\\"cc-cvc\\\" formControlName=\\\"cvc\\\" type=\\\"tel\\\" autocomplete=\\\"off\\\" ccCvc>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-12 text-right\\\">\\r\\n                        <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: grey;\\\" (click)=\\\"onNoClick()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                            <mat-icon>cancel</mat-icon>\\r\\n                            <span class=\\\"mx-1 uppercase\\\">Annuler</span>  \\r\\n                          </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"submit()\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                            <span class=\\\"mx-1 uppercase\\\">Payer </span>                    \\r\\n                          </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n           </form>\\r\\n        </div>\\r\\n     </div>\\r\\n  </div>\";","export default \"<app-header-image [backgroundImage]=\\\"'assets/images/carousel/slide-3.jpg'\\\" \\r\\n                  [bgImageAnimate]=\\\"false\\\" \\r\\n                  [contentOffsetToTop]=\\\"false\\\" \\r\\n                  [desc]=\\\"'Proprietés'\\\"\\r\\n                  [contentMinHeight]=\\\"200\\\">\\r\\n</app-header-image>\\r\\n \\r\\n<div class=\\\"px-3\\\"> \\r\\n    \\r\\n  <div class=\\\"theme-container\\\">  \\r\\n    <mat-sidenav-container class=\\\"all-properties mt-3\\\"> \\r\\n      <mat-sidenav #sidenav [autoFocus]=\\\"false\\\" [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"search-sidenav\\\">         \\r\\n        <mat-card [perfectScrollbar]=\\\"psConfig\\\"> \\r\\n          <button fxHide=\\\"false\\\" fxHide.gt-xs mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n              <mat-icon color=\\\"accent\\\">close</mat-icon>\\r\\n          </button>\\r\\n        <!--  <app-properties-search \\r\\n              [variant]=\\\"settings.searchPanelVariant\\\"\\r\\n              [vertical]=\\\"true\\\"\\r\\n              [searchOnBtnClick]=\\\"settings.searchOnBtnClick\\\"              \\r\\n              [removedSearchField]=\\\"removedSearchField\\\" \\r\\n              (onSearchChange)=\\\"searchChanged($event)\\\"\\r\\n              (onSearchClick)=\\\"searchClicked()\\\">\\r\\n          </app-properties-search>-->\\r\\n          <form [formGroup]=\\\"form\\\" class=\\\"search-wrapper\\\" [ngClass]=\\\"'variant-'+variant\\\" (ngSubmit)=\\\"search()\\\" *ngIf=\\\"form\\\" >\\r\\n\\r\\n            <div [fxLayout]=\\\"(vertical) ? 'column' : 'row wrap'\\\"> \\r\\n        \\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" >\\r\\n                        <mat-label>Catégorie du bien</mat-label> \\r\\n                        <mat-select placeholder=\\\"Selectioner la catégorie\\\" formControlName=\\\"propertyType\\\"  multiple >\\r\\n                            <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType.id\\\" >\\r\\n                                {{propertyType.name}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n        \\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>Type du bien</mat-label>\\r\\n                        <mat-select placeholder=\\\"Selectionner le type \\\" formControlName=\\\"propertyStatus\\\"  multiple >\\r\\n                            <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus.id\\\">\\r\\n                                {{propertyStatus.name}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>        \\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" >\\r\\n                        <mat-label>Enter la date </mat-label>\\r\\n                        <mat-date-range-input [rangePicker]=\\\"picker\\\">\\r\\n                            <input matStartDate placeholder=\\\"Date d'arriver\\\" #dateRangeStart formControlName=\\\"datedepart\\\">\\r\\n                            <input matEndDate placeholder=\\\"Date de depart\\\" #dateRangeEnd formControlName=\\\"datearrive\\\"\\r\\n                                (dateChange)=\\\"dateRangeChange(dateRangeStart, dateRangeEnd)\\\">\\r\\n                        </mat-date-range-input>\\r\\n                        \\r\\n                        <mat-datepicker-toggle style=\\\"margin-left: 40%;\\\" matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-date-range-picker #picker></mat-date-range-picker>\\r\\n                    </mat-form-field>\\r\\n                    </div>\\r\\n\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\" formGroupName=\\\"price\\\">\\r\\n        \\r\\n                    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <div fxFlex=\\\"45\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{(variant == 1) ? 'Budget Min' : 'Budget Min'}}</mat-label>\\r\\n                                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"From\\\" formControlName=\\\"from\\\" type=\\\"text\\\" onlyNumber>                  \\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"10\\\" class=\\\"text-center\\\" [class.pt-2]=\\\"variant == 2\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">remove</mat-icon>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"45\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\">\\r\\n                                <mat-label>{{(variant == 1) ? 'Budget Max' : 'Budget Max'}}</mat-label>\\r\\n                                <input matInput autocomplete=\\\"off\\\" placeholder=\\\"To\\\" formControlName=\\\"to\\\" type=\\\"text\\\" onlyNumber>                  \\r\\n                            </mat-form-field>\\r\\n                        </div>\\r\\n                    </div> \\r\\n        \\r\\n                </div>          \\r\\n        \\r\\n                \\r\\n                <div  [fxLayout]=\\\"(vertical) ? 'column' : 'row wrap'\\\" class=\\\"w-100\\\">\\r\\n        \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\">                         \\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Ville</mat-label>\\r\\n                            <mat-select placeholder=\\\"Selectionner une ville\\\" formControlName=\\\"city\\\" >\\r\\n                                <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">\\r\\n                                    {{city.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select> \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\">\\r\\n                            <mat-label>Nombre de personnes</mat-label>\\r\\n                            <input matInput placeholder=\\\"Nombre de personnes\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n        \\r\\n\\r\\n            \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\" formGroupName=\\\"bedrooms\\\">\\r\\n            \\r\\n                        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            \\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{(variant == 1) ? 'Chambres' : 'Chambres'}}</mat-label>\\r\\n                                    <mat-select placeholder=\\\"Nombre de chambres\\\" formControlName=\\\"from\\\">\\r\\n                                        <mat-option *ngFor=\\\"let number of [1,2,3,4,5,6,7,8,9,10]\\\" [value]=\\\"number\\\">\\r\\n                                            {{number}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                           \\r\\n                     \\r\\n                        </div> \\r\\n            \\r\\n                    </div> \\r\\n            \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\" formGroupName=\\\"bathrooms\\\">\\r\\n            \\r\\n                        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            <div fxFlex=\\\"100\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{(variant == 1) ? 'Douches' : 'Douches'}}</mat-label>\\r\\n                                    <mat-select placeholder=\\\"Nombre de Douches\\\" formControlName=\\\"from\\\">\\r\\n                                        <mat-option *ngFor=\\\"let number of [1,2,3,4,5,6,7,8,9,10]\\\" [value]=\\\"number\\\">\\r\\n                                            {{number}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div> \\r\\n            \\r\\n                    </div> \\r\\n        \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33.3\\\" fxFlex.sm=\\\"50\\\" class=\\\"p-2\\\" formGroupName=\\\"garages\\\">\\r\\n            \\r\\n                        <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                            <div fxFlex=\\\"100\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\">\\r\\n                                    <mat-label>{{(variant == 1) ? 'Lits' : 'Lits'}}</mat-label>\\r\\n                                    <mat-select placeholder=\\\"Nombre de lits\\\" formControlName=\\\"from\\\">\\r\\n                                        <mat-option *ngFor=\\\"let number of [1,2,3,4,5,6,7,8,9,10]\\\" [value]=\\\"number\\\">\\r\\n                                            {{number}}\\r\\n                                        </mat-option>\\r\\n                                    </mat-select>\\r\\n                                </mat-form-field>\\r\\n                            </div>\\r\\n                        </div> \\r\\n            \\r\\n                    </div> \\r\\n                   \\r\\n        \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\r\\n                        <p class=\\\"uppercase m-2 fw-500\\\">Caractéristiques</p> \\r\\n                        <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\r\\n                            <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of form.get('features')['controls']; index as i\\\"   class=\\\"p-2\\\">\\r\\n                                <mat-checkbox formControlName=\\\"selected\\\" (change)=\\\"onChange($event)\\\"  [value]=\\\"features[i].id \\\">{{features[i].name }}</mat-checkbox>                         \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        \\r\\n                </div>\\r\\n        \\r\\n        \\r\\n            </div>\\r\\n          \\r\\n        \\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-2\\\" >\\r\\n                <button type=\\\"submit\\\"  mat-raised-button color=\\\"primary\\\" class=\\\"search-btn mx-1\\\" ><mat-icon>search</mat-icon> Chercher</button>       \\r\\n              <button mat-raised-button color=\\\"warn\\\" class=\\\"uppercase mx-1\\\" style=\\\"margin :3%\\\" (click)=\\\"vider()\\\">Vider</button>\\r\\n\\r\\n            </div>\\r\\n            \\r\\n        \\r\\n        </form>\\r\\n        \\r\\n        </mat-card> \\r\\n      </mat-sidenav>\\r\\n\\r\\n      <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\"> \\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"properties-wrapper mt-0\\\">            \\r\\n           \\r\\n            <div fxFlex=\\\"100\\\" class=\\\"px-2 pb-2 pt-0\\\">                \\r\\n                <app-properties-toolbar [showSidenavToggle]=\\\"!sidenavOpen\\\"\\r\\n                                        (onSidenavToggle)=\\\"sidenav.toggle()\\\"\\r\\n                                        (onChangeCount)=\\\"changeCount($event)\\\"\\r\\n                                        (onChangeSorting)=\\\"changeSorting($event)\\\"\\r\\n                                        (onChangeViewType)=\\\"changeViewType($event)\\\">\\r\\n                </app-properties-toolbar>\\r\\n            </div>\\r\\n           \\r\\n            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"p-2\\\"> \\r\\n                <mat-chip-list [ngClass]=\\\"(settings.rtl) ? 'ml-2' : 'mr-2'\\\">\\r\\n                    <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                        {{ Count() }} Trouvées\\r\\n                    </mat-chip> \\r\\n                </mat-chip-list>\\r\\n                <app-properties-search-results-filters \\r\\n                    [searchFields]=\\\"searchFields\\\" \\r\\n                    (onRemoveSearchField)=\\\"removeSearchField($event)\\\">\\r\\n                </app-properties-search-results-filters>                 \\r\\n            </div>\\r\\n\\r\\n            <div *ngFor=\\\"let property of properties\\\" [fxFlex]=\\\"(viewType=='grid') ? viewCol : 100\\\"  class=\\\"item\\\">                         \\r\\n                <app-property-item [property]=\\\"property\\\" [viewType]=\\\"viewType\\\" [viewColChanged]=\\\"viewCol\\\" [fullWidthPage]=\\\"false\\\"></app-property-item>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"properties?.length == 0\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\" [style.min-height.px]=\\\"200\\\">                \\r\\n                <mat-spinner *ngIf=\\\"!message\\\"></mat-spinner>\\r\\n                <mat-chip-list *ngIf=\\\"message\\\">\\r\\n                    <mat-chip selected disableRipple=\\\"true\\\" color=\\\"warn\\\" class=\\\"uppercase ws-nowrap\\\">\\r\\n                        {{message}}\\r\\n                    </mat-chip> \\r\\n                </mat-chip-list> \\r\\n            </div>            \\r\\n\\r\\n            <div *ngIf=\\\"properties?.length > 0\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-2\\\">\\r\\n                <mat-paginator [length]=\\\"pagination?.total\\\"\\r\\n                              [pageSize]=\\\"pagination?.perPage\\\"\\r\\n                              (page)=\\\"onPageChange($event)\\\"\\r\\n                              class=\\\"w-100 mat-elevation-z1\\\">\\r\\n                </mat-paginator>\\r\\n            </div>          \\r\\n         \\r\\n        </div>\\r\\n\\r\\n        \\r\\n\\r\\n      </mat-sidenav-content>\\r\\n    </mat-sidenav-container>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<app-clients></app-clients>\\r\\n\\r\\n<app-get-in-touch></app-get-in-touch>\";","export default \"<div class=\\\"px-3\\\">     \\r\\n    <div class=\\\"theme-container\\\"> \\r\\n    \\r\\n        <mat-sidenav-container class=\\\"single-property mt-3\\\">\\r\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" position=\\\"end\\\" autoFocus=\\\"false\\\" (openedChange)=\\\"onOpenedChange()\\\">\\r\\n                <button fxHide=\\\"false\\\" fxHide.gt-sm=\\\"true\\\" mat-mini-fab color=\\\"warn\\\" class=\\\"close\\\" (click)=\\\"sidenav.close()\\\">\\r\\n                    <mat-icon>close</mat-icon>\\r\\n                </button>\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\"> \\r\\n\\r\\n                  <!--  <div class=\\\"widget\\\"> \\r\\n                        <mat-card *ngIf=\\\"agent\\\">\\r\\n                            <img mat-card-image [src]=\\\"agent.image\\\" [alt]=\\\"agent.fullName\\\"> \\r\\n                            <mat-card-content>\\r\\n                                <h2 class=\\\"fw-600\\\">Agent {{agent.fullName}}</h2>\\r\\n                                <app-rating [ratingsCount]=\\\"agent.ratingsCount\\\" [ratingsValue]=\\\"agent.ratingsValue\\\"></app-rating>\\r\\n                                <p class=\\\"mt-3\\\">{{agent.desc}}</p>                                    \\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\" matTooltip=\\\"Organization\\\" matTooltipPosition=\\\"above\\\">business</mat-icon><span class=\\\"mx-2\\\">{{agent.organization}}</span></p>\\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\">email</mat-icon><span class=\\\"mx-2\\\">{{agent.email}}</span></p>\\r\\n                                <p fxLayoutAlign=\\\"start center\\\"><mat-icon color=\\\"primary\\\">call</mat-icon><span class=\\\"mx-2\\\">{{agent.phone}}</span></p>\\r\\n                            </mat-card-content>\\r\\n                            <mat-divider></mat-divider>\\r\\n                            <mat-card-actions fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"text-muted\\\">\\r\\n                                    <a [href]=\\\"'https://www.facebook.com/'+agent.social.facebook\\\" target=\\\"blank\\\" class=\\\"social-icon\\\">\\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://twitter.com/'+agent.social.twitter\\\" target=\\\"blank\\\" class=\\\"social-icon\\\">\\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\\" />\\r\\n                                        </svg> \\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://www.linkedin.com/'+agent.social.linkedin\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                        <path d=\\\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H19M18.5,18.5V13.2A3.26,3.26 0 0,0 15.24,9.94C14.39,9.94 13.4,10.46 12.92,11.24V10.13H10.13V18.5H12.92V13.57C12.92,12.8 13.54,12.17 14.31,12.17A1.4,1.4 0 0,1 15.71,13.57V18.5H18.5M6.88,8.56A1.68,1.68 0 0,0 8.56,6.88C8.56,5.95 7.81,5.19 6.88,5.19A1.69,1.69 0 0,0 5.19,6.88C5.19,7.81 5.95,8.56 6.88,8.56M8.27,18.5V10.13H5.5V18.5H8.27Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>\\r\\n                                    <a [href]=\\\"'https://instagram.com/'+agent.social.instagram\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M7.8,2H16.2C19.4,2 22,4.6 22,7.8V16.2A5.8,5.8 0 0,1 16.2,22H7.8C4.6,22 2,19.4 2,16.2V7.8A5.8,5.8 0 0,1 7.8,2M7.6,4A3.6,3.6 0 0,0 4,7.6V16.4C4,18.39 5.61,20 7.6,20H16.4A3.6,3.6 0 0,0 20,16.4V7.6C20,5.61 18.39,4 16.4,4H7.6M17.25,5.5A1.25,1.25 0 0,1 18.5,6.75A1.25,1.25 0 0,1 17.25,8A1.25,1.25 0 0,1 16,6.75A1.25,1.25 0 0,1 17.25,5.5M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a> \\r\\n                                    <a [href]=\\\"agent.social.website\\\" target=\\\"blank\\\" class=\\\"social-icon\\\"> \\r\\n                                        <svg class=\\\"mat-icon\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n                                            <path d=\\\"M10.59,13.41C11,13.8 11,14.44 10.59,14.83C10.2,15.22 9.56,15.22 9.17,14.83C7.22,12.88 7.22,9.71 9.17,7.76V7.76L12.71,4.22C14.66,2.27 17.83,2.27 19.78,4.22C21.73,6.17 21.73,9.34 19.78,11.29L18.29,12.78C18.3,11.96 18.17,11.14 17.89,10.36L18.36,9.88C19.54,8.71 19.54,6.81 18.36,5.64C17.19,4.46 15.29,4.46 14.12,5.64L10.59,9.17C9.41,10.34 9.41,12.24 10.59,13.41M13.41,9.17C13.8,8.78 14.44,8.78 14.83,9.17C16.78,11.12 16.78,14.29 14.83,16.24V16.24L11.29,19.78C9.34,21.73 6.17,21.73 4.22,19.78C2.27,17.83 2.27,14.66 4.22,12.71L5.71,11.22C5.7,12.04 5.83,12.86 6.11,13.65L5.64,14.12C4.46,15.29 4.46,17.19 5.64,18.36C6.81,19.54 8.71,19.54 9.88,18.36L13.41,14.83C14.59,13.66 14.59,11.76 13.41,10.59C13,10.2 13,9.56 13.41,9.17Z\\\" />\\r\\n                                        </svg>\\r\\n                                    </a>  \\r\\n                                </div>\\r\\n                                <div>\\r\\n                                    <a [routerLink]=\\\"['/agents', agent.id]\\\" mat-button color=\\\"primary\\\" class=\\\"uppercase\\\">View Profile</a>\\r\\n                                </div> \\r\\n                            </mat-card-actions>                              \\r\\n                        </mat-card>\\r\\n                    </div> -->\\r\\n                    \\r\\n                    <div class=\\\"widget\\\" >\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Réservation</h3>\\r\\n                        <form style=\\\"margin-top: 10%;\\\" [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"openDialog()\\\">\\r\\n                            \\r\\n\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Enter la date </mat-label>\\r\\n                                <mat-date-range-input [rangePicker]=\\\"picker\\\" [min]=\\\"todayDate\\\" [dateFilter]=\\\"myFilter\\\">\\r\\n                                    <input matStartDate\\r\\n                            placeholder=\\\"Start date\\\" [min]=\\\"todayDate\\\"\\r\\n                             #dateRangeStart>\\r\\n                            <input matEndDate\\r\\n                             placeholder=\\\"End date\\\" [min]=\\\"todayDate\\\"\\r\\n                             #dateRangeEnd\\r\\n                             (dateChange)=\\\"dateRangeChange(dateRangeStart, dateRangeEnd)\\\">\\r\\n                                </mat-date-range-input>\\r\\n                                <mat-hint>\\r\\n                                    MM/DD/YYYY – MM/DD/YYYY</mat-hint>\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                <mat-date-range-picker #picker></mat-date-range-picker>\\r\\n                            </mat-form-field>\\r\\n                              \\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Nombre de personnes</mat-label>\\r\\n                                <input matInput placeholder=\\\"Entrer le Nombre des personnes \\\" autocomplete=\\\"off\\\" #fondovalor formControlName=\\\"name\\\" onlyNumber>\\r\\n                                <mat-error *ngIf=\\\"contactForm.controls.name.errors?.required\\\">Le nombre de personnes est obligatoire</mat-error>                   \\r\\n                            </mat-form-field>   \\r\\n                             \\r\\n                            <p>{{data.price  | currency : 'EUR' : 'symbol' : '1.0'}} x {{getdays()}} Nuits</p>\\r\\n                            <hr class=\\\"solid\\\">\\r\\n                            <p style=\\\"margin-top: 2%;\\\"> TVA : {{gettva()}}</p>\\r\\n                            <hr class=\\\"solid\\\">\\r\\n                            <p style=\\\"font-weight: bold;margin-top: 2%;\\\"> TOTAL : {{gettotal()}}</p>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" (click)=\\\"openDialog()\\\">Réserver</button>\\r\\n                                <button mat-raised-button style=\\\"margin-left: 2%;\\\" color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"openDialog2()\\\">Contacter l'hote</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div> \\r\\n                   \\r\\n                  <!--  <div class=\\\"widget\\\">\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Mortgage Calculator</h3>\\r\\n                        <form [formGroup]=\\\"mortgageForm\\\" (ngSubmit)=\\\"onMortgageFormSubmit(mortgageForm.value)\\\">\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Principal Amount</mat-label>\\r\\n                                <input matInput placeholder=\\\"$\\\" autocomplete=\\\"off\\\" formControlName=\\\"principalAmount\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Down Payment</mat-label>\\r\\n                                <input matInput placeholder=\\\"$\\\" autocomplete=\\\"off\\\" formControlName=\\\"downPayment\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Interest Rate</mat-label>\\r\\n                                <input matInput placeholder=\\\"%\\\" autocomplete=\\\"off\\\" formControlName=\\\"interestRate\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                                <mat-label>Period</mat-label>\\r\\n                                <input matInput placeholder=\\\"Number of Years\\\" autocomplete=\\\"off\\\" formControlName=\\\"period\\\" type=\\\"number\\\">                  \\r\\n                            </mat-form-field>\\r\\n                            <p *ngIf=\\\"monthlyPayment\\\">Monthly Payment: <span class=\\\"mx-2 fw-500\\\">${{monthlyPayment}}</span></p>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Calculate Mortgage</button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div> -->\\r\\n\\r\\n                   <!-- <div fxLayout=\\\"column\\\" class=\\\"widget\\\">\\r\\n                        <h3 class=\\\"widget-title bg-primary\\\">Featured Properties</h3>\\r\\n                        <div *ngFor=\\\"let prop of featuredProperties\\\" class=\\\"mb-3\\\">\\r\\n                            <app-property-item [property]=\\\"prop\\\" [viewType]=\\\"'grid'\\\"></app-property-item> \\r\\n                        </div> \\r\\n                    </div> -->\\r\\n                   \\r\\n                </mat-card>\\r\\n            </mat-sidenav>\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n                <mat-card fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\">             \\r\\n                    <div>\\r\\n                        <h2 class=\\\"uppercase\\\" ngClass.xs=\\\"text-center\\\">{{data.title}}</h2>\\r\\n                        <p fxLayout=\\\"row\\\" fxLayoutAlign.xs=\\\"center\\\" class=\\\"address mb-0\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">location_on</mat-icon>\\r\\n                            <span>{{data.address.street}}, {{data.address.city}}, {{data.address.postalCode}}</span>\\r\\n                        </p>\\r\\n                    </div>\\r\\n                    <div fxLayout=\\\"column\\\" fxLayoutAlign.xs=\\\"center center\\\" class=\\\"mx-3\\\">                      \\r\\n                        <h2 *ngIf=\\\"settings.currency == 'USD'\\\" class=\\\"primary-color price\\\">\\r\\n                            <span *ngIf=\\\"data?.price.sale\\\">{{property?.priceDollar.sale | currency : 'USD' : 'symbol' : '1.0'}}</span>\\r\\n                            <span *ngIf=\\\"property?.priceDollar.rent\\\">{{property?.priceDollar.rent | currency : 'USD' : 'symbol' : '1.0'}} /mois</span>\\r\\n                        </h2>\\r\\n                        <h2 *ngIf=\\\"settings.currency == 'EUR'\\\" class=\\\"primary-color price\\\">\\r\\n                            <span *ngIf=\\\"property?.price\\\">{{this.data?.price | currency : 'EUR' : 'symbol' : '1.0'}}</span>\\r\\n                            <span *ngIf=\\\"property?.price\\\">{{this.data?.price | currency : 'EUR' : 'symbol' : '1.0'}} /mois</span>\\r\\n                        </h2>\\r\\n                        <h2 *ngIf=\\\"settings.currency == 'EUR'\\\" class=\\\"primary-color price\\\">\\r\\n                            <span *ngIf=\\\"data.price\\\">{{data.price | currency : 'EUR' : 'symbol' : '1.0'}}</span>\\r\\n                        </h2>\\r\\n                        <app-rating [ratingsCount]=\\\"1\\\" [ratingsValue]=\\\"data.environmentalAverage\\\"></app-rating> \\r\\n                    </div>\\r\\n                    <button *ngIf=\\\"!sidenavOpen\\\" mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>more_vert</mat-icon>\\r\\n                    </button>                                  \\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\">\\r\\n                    <div class=\\\"main-carousel mb-3\\\"> \\r\\n                        <div *ngIf=\\\"property\\\" class=\\\"control-icons\\\">\\r\\n                           <!-- <button mat-button [disabled]=\\\"onFavorites()\\\" (click)=\\\"addToFavorites()\\\" matTooltip=\\\"Add To Favorite\\\">\\r\\n                                <mat-icon class=\\\"\\\">favorite_border</mat-icon>\\r\\n                            </button>-->\\r\\n                            <button mat-button [disabled]=\\\"onCompare()\\\" (click)=\\\"addToCompare()\\\" matTooltip=\\\"Add To Compare\\\">\\r\\n                                <mat-icon class=\\\"\\\">compare_arrows</mat-icon>\\r\\n                            </button>  \\r\\n                        </div>   \\r\\n                        <div id=\\\"main-carousel\\\" class=\\\"swiper-container\\\" [swiper]=\\\"config\\\" (indexChange)=\\\"onIndexChange($event)\\\"> \\r\\n                            <div class=\\\"swiper-wrapper\\\">      \\r\\n                                <div *ngFor=\\\"let image of data.photos\\\" class=\\\"swiper-slide\\\">\\r\\n                                    <img [attr.data-src]=\\\"image.name\\\" class=\\\"swiper-lazy\\\">\\r\\n                                    <div class=\\\"swiper-lazy-preloader\\\"></div>          \\r\\n                                </div>\\r\\n                            </div>                      \\r\\n                            <button mat-mini-fab color=\\\"primary\\\" class=\\\"swiper-button-prev swipe-arrow\\\"><mat-icon>keyboard_arrow_left</mat-icon></button>\\r\\n                            <button mat-mini-fab color=\\\"primary\\\" class=\\\"swiper-button-next swipe-arrow\\\"><mat-icon>keyboard_arrow_right</mat-icon></button> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"small-carousel\\\">   \\r\\n                        <div id=\\\"small-carousel\\\" class=\\\"swiper-container\\\" [swiper]=\\\"config2\\\"> \\r\\n                            <div class=\\\"swiper-wrapper\\\">      \\r\\n                                <div *ngFor=\\\"let image of data.photos; let i=index;\\\" class=\\\"swiper-slide\\\" [ngClass]=\\\"'thumb-'+i\\\" [class.active-thumb]=\\\"i == 0\\\">\\r\\n                                    <img [attr.data-src]=\\\"image.name\\\" class=\\\"swiper-lazy mw-100\\\" (click)=\\\"selectImage(i)\\\">\\r\\n                                    <div class=\\\"swiper-lazy-preloader\\\"></div>          \\r\\n                                </div>\\r\\n                            </div>  \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </mat-card> \\r\\n                \\r\\n                \\r\\n                <mat-card *ngIf=\\\"property\\\" class=\\\"mt-3\\\">\\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Détails</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <div fxLayout=\\\"row wrap\\\" class=\\\"details\\\">\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Type du bien :</span>\\r\\n                            <span>{{property.propertyType}}</span>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Status du bien :</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let status of property.propertyStatus; let last=last\\\" [class.list-item]=\\\"property.propertyStatus.length > 1\\\" [class.last]=\\\"last\\\">{{status}}</span>\\r\\n                            </div>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Ville:</span>\\r\\n                            <span>{{property.city}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Code postale :</span>\\r\\n                            <span>{{property.zipCode}}</span>\\r\\n                        </div> \\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Quartier :</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let neighborhood of property.neighborhood; let last=last\\\" [class.list-item]=\\\"property.neighborhood.length > 1\\\" [class.last]=\\\"last\\\">{{neighborhood}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Rue:</span>\\r\\n                            <div fxLayout=\\\"row wrap\\\" class=\\\"list\\\">\\r\\n                                <span *ngFor=\\\"let street of property.street; let last=last\\\" [class.list-item]=\\\"property.street.length > 1\\\" [class.last]=\\\"last\\\">{{street}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Chambres :</span>\\r\\n                            <span>{{property.bedrooms}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Salles de bain :</span>\\r\\n                            <span>{{property.bathrooms}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Garages :</span>\\r\\n                            <span>{{property.garages}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Supéficie du bien :</span>\\r\\n                            <span>{{property.area.value}} {{property.area.unit}}</span>\\r\\n                        </div>\\r\\n                        <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" fxLayout=\\\"row\\\" class=\\\"item\\\">\\r\\n                            <span>Année de construction :</span>\\r\\n                            <span>{{property.yearBuilt}}</span>\\r\\n                        </div>\\r\\n                    </div>   \\r\\n                </mat-card>\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Équipements</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div *ngFor=\\\"let equipment of data.equipments\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\">\\r\\n                                <mat-icon class=\\\"mat-icon-sm\\\" color=\\\"primary\\\">check</mat-icon>                              \\r\\n                                <span class=\\\"mx-2\\\">{{equipment.device.name}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>\\r\\n\\r\\n               <!-- <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Additional features</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <div fxLayout=\\\"row wrap\\\" class=\\\"details\\\">\\r\\n                            <div *ngFor=\\\"let feature of property?.additionalFeatures\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"item\\\">\\r\\n                                <span>{{feature.name}}:</span>\\r\\n                                <span>{{feature.value}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card-content>\\r\\n                </mat-card>-->\\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Description</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <p>{{data.description}}</p>\\r\\n                    </mat-card-content>\\r\\n                </mat-card> \\r\\n\\r\\n                <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">À savoir</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <div fxLayout=\\\"row wrap\\\">\\r\\n                            <div *ngFor=\\\"let property of data.accommodationFieldValues\\\" fxFlex=\\\"100\\\">\\r\\n                                <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"100\\\" *ngIf=\\\"property.valueBoolean == true\\\">\\r\\n                                <mat-icon class=\\\"mat-icon-sm\\\" color=\\\"primary\\\" *ngIf=\\\"property.valueBoolean == true\\\">check</mat-icon>                              \\r\\n                                <span class=\\\"mx-2\\\" *ngIf=\\\"property.valueBoolean == true\\\">{{property.customField.label}}</span>\\r\\n                                 </div>\\r\\n                                 <div  fxFlex.gt-xs=\\\"500\\\" *ngIf=\\\"property.valueText != null\\\"   >\\r\\n                                <mat-icon class=\\\"mat-icon-sm\\\" color=\\\"primary\\\" *ngIf=\\\"property.valueText != null\\\">check</mat-icon>  \\r\\n                                <span class=\\\"mx-2\\\" *ngIf=\\\"property.valueText != null\\\">{{property.customField.label}} : {{property.valueText}} </span>\\r\\n                            </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </mat-card-content>\\r\\n                </mat-card> \\r\\n\\r\\n               <!-- <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Location</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <agm-map [latitude]=\\\"property?.location.lat\\\" [longitude]=\\\"property?.location.lng\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\">\\r\\n                            <agm-marker [latitude]=\\\"property?.location.lat\\\" [longitude]=\\\"property?.location.lng\\\" [markerDraggable]=\\\"false\\\"></agm-marker>\\r\\n                        </agm-map>\\r\\n                    </mat-card-content>                   \\r\\n                </mat-card> -->\\r\\n\\r\\n               <!---- <mat-card class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Plans</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <mat-accordion>\\r\\n                            <mat-expansion-panel *ngFor=\\\"let plan of property?.plans; let i = index;\\\" [expanded]=\\\"i === 0\\\">\\r\\n                                <mat-expansion-panel-header>  \\r\\n                                    <mat-panel-title fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                                        <div class=\\\"fw-500\\\">{{plan.name}}</div>\\r\\n                                        <div fxShow=\\\"false\\\" fxShow.gt-xs=\\\"true\\\" class=\\\"text-muted\\\">\\r\\n                                            <span>Area: <span class=\\\"fw-500\\\">{{plan.area.value}} {{plan.area.unit}}</span></span>\\r\\n                                            <span class=\\\"mx-3\\\">Rooms: <span class=\\\"fw-500\\\">{{plan.rooms}}</span></span>\\r\\n                                            <span>Baths: <span class=\\\"fw-500\\\">{{plan.baths}}</span></span>   \\r\\n                                        </div>\\r\\n                                    </mat-panel-title> \\r\\n                                </mat-expansion-panel-header>                                  \\r\\n                                <img [src]=\\\"plan.image\\\" [alt]=\\\"plan.name\\\" class=\\\"mw-100\\\">\\r\\n                                <p>{{plan.desc}}</p>\\r\\n                            </mat-expansion-panel> \\r\\n                        </mat-accordion>                         \\r\\n                    </mat-card-content>\\r\\n                </mat-card> -->\\r\\n\\r\\n              <!--  <mat-card *ngIf=\\\"property\\\" class=\\\"mt-3\\\"> \\r\\n                    <mat-card-header fxLayoutAlign=\\\"center center\\\"> \\r\\n                        <mat-card-title class=\\\"uppercase\\\">Videos</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <mat-card-content>\\r\\n                        <video controls class=\\\"mw-100\\\">\\r\\n                            <source [src]=\\\"property.videos[0].link\\\" type=\\\"video/mp4\\\"> \\r\\n                            Your browser does not support the video tag.\\r\\n                        </video> \\r\\n                        <div class=\\\"mt-5\\\">\\r\\n                            <h3 class=\\\"text-center fw-500\\\">{{property.videos[1].name}}</h3>\\r\\n                            <div [innerHtml]=\\\"embedVideo\\\" class=\\\"videoWrapper\\\"></div>                                    \\r\\n                        </div>                             \\r\\n                    </mat-card-content>\\r\\n                </mat-card>      -->          \\r\\n\\r\\n                <app-comments *ngIf=\\\"data\\\" [propertyId]=\\\"data.id\\\"></app-comments>  \\r\\n\\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n \\r\\n<!--<div class=\\\"section mt-3\\\">\\r\\n    <div class=\\\"px-3\\\">\\r\\n        <div class=\\\"theme-container\\\"> \\r\\n            <h1 class=\\\"section-title\\\">Related properties</h1>            \\r\\n            <app-properties-carousel [properties]=\\\"relatedProperties\\\"></app-properties-carousel>                        \\r\\n        </div>\\r\\n    </div>   \\r\\n</div> -->\\r\\n\\r\\n<app-get-in-touch></app-get-in-touch>\";"],"names":[],"sourceRoot":"webpack:///"}