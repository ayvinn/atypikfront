{"version":3,"file":"src_app_pages_submit-property_submit-property_module_ts.js","mappings":"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","sources":["./src/app/pages/submit-property/submit-property.component.ts","./src/app/pages/submit-property/submit-property.module.ts","./src/app/pages/submit-property/submit-property.component.html"],"sourcesContent":["/// <reference types=\"@types/googlemaps\" />\r\nimport { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { FormGroup, FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\r\nimport { AccommodationCreate } from 'src/app/models/Accommodation/accommodation-create';\r\nimport { Adress } from 'src/app/models/adress';\r\nimport { filter } from 'rxjs/operators';\r\nimport { UploadService } from 'src/app/services/upload.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CustomFieldsService } from 'src/app/services/custom-fields.service';\r\nimport { DevicesService } from 'src/app/services/devices.service';\r\n\r\n@Component({\r\n  selector: 'app-submit-property',\r\n  templateUrl: './submit-property.component.html',\r\n  styleUrls: ['./submit-property.component.scss']\r\n})\r\nexport class SubmitPropertyComponent implements OnInit {\r\n\r\n  @ViewChild('horizontalStepper') horizontalStepper: MatStepper; \r\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef;\r\n  dataSource: MatTableDataSource<any>;\r\n  public submitForm:FormGroup; \r\n  public features = [];\r\n  public propertyTypes = [];\r\n  public propertyStatuses = [];\r\n  public cities = [];\r\n  public options = this.features;\r\n  public neighborhoods = [];\r\n  public streets = [];\r\n  public feature =[];\r\n  public data =[];\r\n  public lat: number = 40.678178;\r\n  public lng: number = -73.944158;\r\n  public zoom: number = 12;  \r\n  public id :number=0;\r\n  fileData: File = null;\r\n  previewUrl: any = null;\r\n  files: File[] = [];\r\n  public acomodationcreate :AccommodationCreate = new AccommodationCreate();\r\n  public adress :Adress = new Adress();\r\n  constructor(public appService:AppService, \r\n              private fb: FormBuilder, \r\n              private mapsAPILoader: MapsAPILoader, \r\n              private ngZone: NgZone,\r\n              private globalservice : UploadService,\r\n              public accomodationservice: AccommodationsService,\r\n              public devicesservice:DevicesService) { }\r\n  \r\n              onChange(event) {\r\n               // this.feature = <any>this.submitForm.get('additional.features').value as any;\r\n            \r\n                if(event.checked) {\r\n                  this.feature.push({deviceId:event.source.value})\r\n                } else {\r\n                  const i = this.feature.findIndex(x => x.value === event.source.value);\r\n                  this.feature.splice(i);\r\n                }\r\n              }          \r\n   submitstep1(){\r\n    console.log(this.submitForm.get('basic.propertyType').value);\r\n   \r\n      this.acomodationcreate.kind = this.submitForm.get('basic.propertyType').value;\r\n      this.acomodationcreate.size = this.submitForm.get('basic.propertyStatus').value;\r\n      this.acomodationcreate.step = 2;\r\n       this.accomodationservice.postAccommodation(this.acomodationcreate).subscribe(res => {\r\n        this.id=(<any>res).id;\r\n        this.submitstep6();  \r\n        \r\n      });  \r\n     \r\n  }  \r\n  submitstep2(){\r\n      console.log(this.submitForm.get('address.city').value);   \r\n      this.adress.city =  this.submitForm.get('address.city').value;\r\n      this.adress.postalCode = this.submitForm.get('address.zipCode').value;\r\n      this.adress.street = this.submitForm.get('address.street').value;\r\n      this.adress.addressComplement = this.submitForm.get('address.neighborhood').value;\r\n      this.adress.step = 3;\r\n      this.accomodationservice.putAcommodation(this.id,{address :this.adress,step : 3}).subscribe(res => {\r\n      });\r\n  }   \r\n  submitstep3(){\r\n\r\n    this.accomodationservice.putAcommodation(this.id,{bathrooms :Number(this.submitForm.get('additional.bathrooms').value),\r\n    bedrooms :Number(this.submitForm.get('additional.bathrooms').value),\r\n    beds : Number(this.submitForm.get('additional.area').value),\r\n    travelers:Number(this.submitForm.get('additional.garages').value),\r\n    step : 4\r\n  }).subscribe(res => {\r\n    });\r\n    this.submitstep4();\r\n    \r\n \r\n}     \r\nsubmitstep4(){\r\n  this.accomodationservice.putAcommodation(this.id,{equipments :this.feature,\r\n  step : 5\r\n}).subscribe(res => {\r\n\r\n  });\r\n  this.globalservice.clear();\r\n}   \r\nsubmitstep5(){\r\n; \r\n  this.accomodationservice.putAcommodation(this.id,{photos :this.globalservice.getMyGV(),step : 6}).subscribe(res => {\r\n    this.submitstep8();\r\n  });\r\n  this.globalservice.clear();\r\n}\r\npublic upload(event: any): void {\r\n  this.fileData = event.addedFiles[0];\r\n  this.files.push(...event.addedFiles);\r\n  console.log('Event: ', event.addedFiles);\r\n  console.log('FileName: ', this.fileData.name);\r\n  this.preview();\r\n} \r\nsubmitstep6(){\r\n  \r\n  this.accomodationservice.putAcommodation(this.id,{title:this.submitForm.get('basic.title').value,\r\n  description:this.submitForm.get('basic.desc').value,\r\n  step :7\r\n  },\r\n  ).subscribe(res => {\r\n    this.submitstep7();\r\n  });    \r\n  } \r\n  submitstep7(){\r\n    \r\n    this.accomodationservice.putAcommodation(this.id,{price:this.submitForm.get('basic.priceEuro').value,\r\n    step :8\r\n    },\r\n    ).subscribe(res => {\r\n    });    \r\n    }\r\n    submitstep8(){\r\n    \r\n      this.accomodationservice.putAcommodation(this.id,{stauts:1,\r\n      step :9\r\n      },\r\n      ).subscribe(res => {\r\n      });    \r\n      }\r\n    \r\npreview() {\r\n  const mimeType = this.fileData.type;\r\n  if (mimeType.match(/image\\/*/) == null) {\r\n    return;\r\n  }\r\n   const reader = new FileReader();\r\n  reader.readAsDataURL(this.fileData);\r\n  reader.onload = (event) => {\r\n    this.previewUrl=reader.result;\r\n    console.log('Result: ', reader.result);\r\n    console.log('Reader: ', this.previewUrl);\r\n  };\r\n} \r\n\r\nonRemove(event) {\r\n  console.log(event);\r\n  this.files.splice(this.files.indexOf(event), 1);\r\n  this.previewUrl=null;\r\n}\r\npublic  formArray: FormArray;\r\nonCheckChange(event) {\r\n   this.formArray = this.submitForm.get('additional.features') as FormArray;\r\n  /* Selected */\r\n  if(event.target.checked){\r\n    // Add a new control in the arrayForm\r\n    this.formArray.push(new FormControl(event.target.i.value));\r\n  }\r\n  /* unselected */\r\n  else{\r\n    // find the unselected element\r\n    let i: number = 0;\r\n\r\n    this.formArray.controls.forEach((ctrl: FormControl) => {\r\n      if(ctrl.value == event.target.value) {\r\n        // Remove the unselected element from the arrayForm\r\n        this.formArray.removeAt(i);\r\n        return;\r\n      }\r\n\r\n      i++;\r\n    });\r\n  }\r\n}\r\n\r\n public async  loaddata(){\r\n   \r\n /*  this.devicesservice.getDevices().subscribe(res => {\r\n    if(!res){\r\n      return;\r\n    }   \r\n    this.dataSource = new MatTableDataSource<any>(res);\r\n  this.data=res;\r\n  for(let data of this.data) {\r\n  //  this.features.push({id:data.id}, {name:data.name})\r\n    this.setfeatures(data.id,data.name);\r\n  }\r\n //this.features =  res as any[];\r\n // console.log('hna',this.features);\r\n  });*/\r\n  const data = await this.devicesservice.getDevices().toPromise();\r\n  this.features = data;\r\n}\r\npublic async setfeatures(id,name){\r\n   this.features.push({id:id,name:name})\r\n}\r\n   public async ngOnInit() {\r\n\r\n   // this.features = JSON.a; \r\n    await this.loaddata();\r\n    console.log('hna:',this.features);\r\n    this.propertyTypes = this.appService.getPropertyTypes();\r\n    this.propertyStatuses = this.appService.getPropertyStatuses();\r\n    this.cities = this.appService.getCities();\r\n    this.neighborhoods = this.appService.getNeighborhoods();\r\n    this.streets = this.appService.getStreets();  \r\n    this.submitForm = this.fb.group({\r\n      basic: this.fb.group({\r\n        propertyType: [null, Validators.required],\r\n        propertyStatus: null ,\r\n        title: [null, Validators.required],\r\n        desc: null,\r\n        priceEuro: null,\r\n    //    gallery: null\r\n      }),\r\n      address: this.fb.group({\r\n        location: ['', Validators.required],\r\n        city: ['', Validators.required],\r\n        zipCode: '',\r\n        neighborhood: '',\r\n        street: ''\r\n      }),\r\n      additional: this.fb.group({\r\n        bedrooms: '',\r\n        bathrooms: '',\r\n        garages: '',\r\n        area: '',\r\n        yearBuilt: '',\r\n        features: this.buildFeatures()\r\n      }),\r\n      media: this.fb.group({\r\n        videos: this.fb.array([ this.createVideo() ]),\r\n        plans: this.fb.array([ this.createPlan() ]), \r\n        additionalFeatures: this.fb.array([ this.createFeature() ]),\r\n        featured: false\r\n      })\r\n    }); \r\n    \r\n \r\n    this.setCurrentPosition();\r\n    this.placesAutocomplete();\r\n  }\r\n\r\n\r\n  public onSelectionChange(e:any){ \r\n    if(e.selectedIndex == 4){   \r\n      this.horizontalStepper._steps.forEach(step => step.editable = false);\r\n      console.log(this.submitForm.value);      \r\n    }\r\n  }\r\n  public reset(){\r\n    this.horizontalStepper.reset(); \r\n\r\n    const videos = <FormArray>this.submitForm.controls.media.get('videos');\r\n    while (videos.length > 1) {\r\n      videos.removeAt(0)\r\n    }\r\n    const plans = <FormArray>this.submitForm.controls.media.get('plans');\r\n    while (plans.length > 1) {\r\n      plans.removeAt(0)\r\n    }\r\n    const additionalFeatures = <FormArray>this.submitForm.controls.media.get('additionalFeatures');\r\n    while (additionalFeatures.length > 1) {\r\n      additionalFeatures.removeAt(0)\r\n    }\r\n    \r\n    this.submitForm.reset({\r\n      additional: {\r\n        features: this.features\r\n      },\r\n      media:{ \r\n        featured: false\r\n      }\r\n    });   \r\n     \r\n  }\r\n\r\n  \r\n\r\n  // -------------------- Address ---------------------------  \r\n  public onSelectCity(){\r\n    this.submitForm.controls.address.get('neighborhood').setValue(null, {emitEvent: false});\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false});\r\n  }\r\n  public onSelectNeighborhood(){\r\n    this.submitForm.controls.address.get('street').setValue(null, {emitEvent: false}); \r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    if(\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => { \r\n        this.lat = position.coords.latitude;\r\n        this.lng = position.coords.longitude; \r\n      });\r\n    }\r\n  }\r\n  private placesAutocomplete(){  \r\n    this.mapsAPILoader.load().then(() => { \r\n      let autocomplete = new google.maps.places.Autocomplete(this.addressAutocomplete.nativeElement, {\r\n        types: [\"address\"]\r\n      });  \r\n      autocomplete.addListener(\"place_changed\", () => { \r\n        this.ngZone.run(() => { \r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace(); \r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return;\r\n          };\r\n          this.lat = place.geometry.location.lat();\r\n          this.lng = place.geometry.location.lng(); \r\n          this.getAddress();\r\n        });\r\n      });\r\n    });\r\n  } \r\n  \r\n  // public getAddress(){    \r\n  //   this.mapsAPILoader.load().then(() => {\r\n  //     let geocoder = new google.maps.Geocoder();\r\n  //     let latlng = new google.maps.LatLng(this.lat, this.lng); \r\n  //     geocoder.geocode({'location': latlng}, (results, status) => {\r\n  //       if(status === google.maps.GeocoderStatus.OK) {\r\n  //         console.log(results); \r\n  //         //this.addresstext.nativeElement.focus();  \r\n  //         let address = results[0].formatted_address; \r\n  //         this.submitForm.controls.location.setValue(address); \r\n  //         this.setAddresses(results[0]);          \r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n  public getAddress(){    \r\n    this.appService.getAddress(this.lat, this.lng).subscribe(response => {  \r\n      console.log(response);\r\n      if(response['results'].length){\r\n        let address = response['results'][0].formatted_address; \r\n        this.submitForm.controls.address.get('location').setValue(address); \r\n        this.setAddresses(response['results'][0]); \r\n      } \r\n    })\r\n  }\r\n  public onMapClick(e:any){\r\n    this.lat = e.coords.lat;\r\n    this.lng = e.coords.lng; \r\n    this.getAddress();\r\n  }\r\n  public onMarkerClick(e:any){\r\n    console.log(e);\r\n  }\r\n  \r\n  public setAddresses(result){\r\n    this.submitForm.controls.address.get('city').setValue(null);\r\n    this.submitForm.controls.address.get('zipCode').setValue(null);\r\n    this.submitForm.controls.address.get('street').setValue(null); \r\n\r\n    var newCity, newStreet, newNeighborhood;\r\n    \r\n    result.address_components.forEach(item =>{\r\n      if(item.types.indexOf('locality') > -1){  \r\n        if(this.cities.filter(city => city.name == item.long_name)[0]){\r\n          newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n        }\r\n        else{\r\n          newCity = { id: this.cities.length+1, name: item.long_name };\r\n          this.cities.push(newCity); \r\n        }\r\n        this.submitForm.controls.address.get('city').setValue(newCity);    \r\n      }\r\n      if(item.types.indexOf('postal_code') > -1){ \r\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name);\r\n      }\r\n    });\r\n\r\n    if(!newCity){\r\n      result.address_components.forEach(item =>{\r\n        if(item.types.indexOf('administrative_area_level_1') > -1){  \r\n          if(this.cities.filter(city => city.name == item.long_name)[0]){\r\n            newCity = this.cities.filter(city => city.name == item.long_name)[0];\r\n          }\r\n          else{\r\n            newCity = { \r\n              id: this.cities.length+1, \r\n              name: item.long_name \r\n            };\r\n            this.cities.push(newCity); \r\n          }\r\n          this.submitForm.controls.address.get('city').setValue(newCity);    \r\n        } \r\n      });\r\n    }\r\n\r\n    if(newCity){\r\n      result.address_components.forEach(item =>{ \r\n        if(item.types.indexOf('neighborhood') > -1){ \r\n          let neighborhood = this.neighborhoods.filter(n => n.name == item.long_name && n.cityId == newCity.id)[0];\r\n          if(neighborhood){\r\n            newNeighborhood = neighborhood;\r\n          }\r\n          else{\r\n            newNeighborhood = { \r\n              id: this.neighborhoods.length+1, \r\n              name: item.long_name, \r\n              cityId: newCity.id \r\n            };\r\n            this.neighborhoods.push(newNeighborhood);\r\n          }\r\n          this.neighborhoods = [...this.neighborhoods];\r\n          this.submitForm.controls.address.get('neighborhood').setValue([newNeighborhood]); \r\n        }  \r\n      })\r\n    }\r\n\r\n    if(newCity){\r\n      result.address_components.forEach(item =>{            \r\n        if(item.types.indexOf('route') > -1){ \r\n          if(this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0]){\r\n            newStreet = this.streets.filter(street => street.name == item.long_name && street.cityId == newCity.id)[0];\r\n          }\r\n          else{\r\n            newStreet = { \r\n              id: this.streets.length+1, \r\n              name: item.long_name, \r\n              cityId: newCity.id, \r\n              neighborhoodId: (newNeighborhood) ? newNeighborhood.id : null \r\n            };\r\n            this.streets.push(newStreet);\r\n          }          \r\n          this.streets = [...this.streets];\r\n          this.submitForm.controls.address.get('street').setValue([newStreet]); \r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n   \r\n  // -------------------- Additional ---------------------------  \r\n  public buildFeatures() {\r\n\r\n    const arr = this.features.map(feature => { \r\n      \r\n      return this.fb.group({\r\n        id: feature.id,\r\n        name: feature.name,\r\n      });\r\n    })   \r\n    return this.fb.array(arr);\r\n  }\r\n  \r\n\r\n  \r\n  // -------------------- Media --------------------------- \r\n  public createVideo(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      link: null \r\n    });\r\n  }\r\n  public addVideo(): void {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.push(this.createVideo());\r\n  }\r\n  public deleteVideo(index) {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray;\r\n    videos.removeAt(index);\r\n  }\r\n  \r\n  public createPlan(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      desc: null,\r\n      area: null,\r\n      rooms: null,\r\n      baths: null,\r\n      image: null\r\n    });\r\n  }\r\n  public addPlan(): void {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.push(this.createPlan());\r\n  }\r\n  public deletePlan(index) {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray;\r\n    plans.removeAt(index);\r\n  } \r\n\r\n\r\n  public createFeature(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null, \r\n      value: null \r\n    });\r\n  }\r\n  public addFeature(): void {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.push(this.createFeature());\r\n  }\r\n  public deleteFeature(index) {\r\n    const features = this.submitForm.controls.media.get('additionalFeatures') as FormArray;\r\n    features.removeAt(index);\r\n  } \r\n\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AgmCoreModule } from '@agm/core';  \r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { SubmitPropertyComponent } from './submit-property.component';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { UploadManagerComponent } from 'src/app/shared/upload-manager/upload-manager/upload-manager.component';\r\nimport { UploadTaskComponent } from 'src/app/shared/upload-manager/upload-task/upload-task.component';\r\nexport const routes = [\r\n  { path: '', component: SubmitPropertyComponent, pathMatch: 'full'  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SubmitPropertyComponent,UploadManagerComponent,UploadTaskComponent],\r\n  imports: [\r\n    CommonModule,\r\n    \r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    AgmCoreModule, \r\n    InputFileModule,\r\n    NgxDropzoneModule\r\n  ]\r\n})\r\nexport class SubmitPropertyModule { }\r\n","export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n  \\r\\n      <mat-card ngClass.lt-lg=\\\"p-0\\\" [formGroup]=\\\"submitForm\\\">\\r\\n  \\r\\n        <mat-horizontal-stepper #horizontalStepper linear=\\\"false\\\" class=\\\"submit-property\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('basic')\\\" label=\\\"Basique\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"basic\\\" fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Basique</h1>\\r\\n                      </div>\\r\\n                              \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Titre</mat-label>\\r\\n                            <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" required autocomplete=\\\"off\\\">\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].title.errors?.required\\\">Le titre est requis</mat-error>\\r\\n                        </mat-form-field>\\r\\n                      </div>  \\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Description</mat-label> \\r\\n                            <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" rows=\\\"7\\\"></textarea> \\r\\n                        </mat-form-field> \\r\\n                      </div> \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Prix (€)</mat-label>\\r\\n                            <input matInput placeholder=\\\"Enter sale or rent price\\\" formControlName=\\\"priceEuro\\\" autocomplete=\\\"off\\\"> \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Catégorie de logement</mat-label> \\r\\n                            <mat-select placeholder=\\\"Select Property Type\\\" formControlName=\\\"propertyType\\\" required>\\r\\n                                <mat-option *ngFor=\\\"let propertyType of propertyTypes\\\" [value]=\\\"propertyType.id\\\">\\r\\n                                    {{propertyType.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('basic')['controls'].propertyType.errors?.required\\\">Champ obligatoire</mat-error>                               \\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Type de logement</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select Property Status\\\" formControlName=\\\"propertyStatus\\\" >\\r\\n                                <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus.id\\\">\\r\\n                                    {{propertyStatus.name}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>                             \\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"end center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)= \\\"submitstep1()\\\" matStepperNext fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Suivant </span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div> \\r\\n                  \\r\\n                  </form>\\r\\n               \\r\\n              </div>\\r\\n            </mat-step>\\r\\n            \\r\\n            <mat-step [stepControl]=\\\"submitForm.get('address')\\\" label=\\\"Addresse\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\r\\n            \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Addresse</h1>\\r\\n                      </div>\\r\\n                                \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\r\\n                            <mat-label>Location</mat-label>\\r\\n                            <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\r\\n                            <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\r\\n                              <mat-icon>Fermer</mat-icon>\\r\\n                            </button>\\r\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">La localisation est obligatoire</mat-error>   \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\r\\n                          <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\r\\n                              <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\r\\n                          </agm-map>\\r\\n                      </div>\\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Ville</mat-label>\\r\\n                            <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\r\\n                              <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">\\r\\n                                {{city.name}}\\r\\n                              </mat-option>\\r\\n                            </mat-select> \\r\\n                            <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Code postale</mat-label>\\r\\n                            <input matInput placeholder=\\\"exp. 98104\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Quatier</mat-label>\\r\\n                          <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\"  (selectionChange)=\\\"onSelectNeighborhood()\\\">\\r\\n                            <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood.name\\\">\\r\\n                              {{neighborhood.name}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>   \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Rue</mat-label>\\r\\n                          <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" > \\r\\n                            <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street.name\\\">\\r\\n                              {{street.name}}\\r\\n                            </mat-option>\\r\\n                          </mat-select>  \\r\\n                        </mat-form-field>\\r\\n                      </div> \\r\\n                    \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <mat-icon>navigate_before</mat-icon>\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                        </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext (click)= \\\"submitstep2()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Suivant</span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div>  \\r\\n                    \\r\\n                  </form>\\r\\n                \\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('additional')\\\" label=\\\"Supplémentaire\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n                  <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Supplémentaire</h1>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Chambres</mat-label>\\r\\n                            <input matInput placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Salles de bains</mat-label>\\r\\n                            <input matInput placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                  \\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Nombre de voyageur</mat-label>\\r\\n                            <input matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Nombre de lits</mat-label>\\r\\n                            <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber>                  \\r\\n                          </mat-form-field>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\r\\n                          <p class=\\\"uppercase m-2 fw-500\\\">Caractéristiques</p> \\r\\n                          <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\r\\n                              <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\"   class=\\\"p-2\\\">\\r\\n                                  <mat-checkbox formControlName=\\\"selected\\\" (change)=\\\"onChange($event)\\\"  [value]=\\\"features[i].id \\\">{{features[i].name }}</mat-checkbox>                         \\r\\n                              </div>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <mat-icon>navigate_before</mat-icon>\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                        </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperNext (click)= \\\"submitstep3()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                          <span class=\\\"mx-1 uppercase\\\">Suivant</span>                    \\r\\n                          <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                      </div>        \\r\\n                  </form>\\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step [stepControl]=\\\"submitForm.get('media')\\\" label=\\\"Media\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n\\r\\n                  <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\r\\n                   \\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                        <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\r\\n                      </div>\\r\\n               <div style=\\\"text-align: center; margin: auto;\\r\\n               width: 50%;\\r\\n               padding: 10px;\\\"> <app-upload-manager></app-upload-manager> </div>\\r\\n                      <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                          <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                              <mat-icon>navigate_before</mat-icon>\\r\\n                              <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                          </button>\\r\\n                          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submitstep5()\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                              <span class=\\\"mx-1 uppercase\\\">Soumettre</span>                    \\r\\n                              <mat-icon>navigate_next</mat-icon>\\r\\n                          </button> \\r\\n                      </div> \\r\\n                  </form>\\r\\n              </div> \\r\\n            </mat-step>\\r\\n\\r\\n            <mat-step label=\\\"Confirmation\\\">\\r\\n              <div class=\\\"step-content\\\">\\r\\n                \\r\\n                  <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-5 text-center\\\"> \\r\\n                    <button mat-fab color=\\\"primary\\\"><mat-icon>check</mat-icon></button>\\r\\n                    <h2 class=\\\"mt-3 uppercase\\\">Félicitation!</h2>\\r\\n                <!--    <h2 class=\\\"my-3\\\">Votre bien <span class=\\\"primary-color\\\">\\\"{{submitForm.get('basic')['controls'].title.value}}\\\"</span> has been submitted</h2>-->\\r\\n                    <p class=\\\"text-muted\\\">Votre logement a bien été ajouté et est en attente de validation.</p>\\r\\n                  </div>\\r\\n                  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\r\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reset()\\\" type=\\\"button\\\">Retourner pour soumettre une nouvelle propriété</button>       \\r\\n                  </div>\\r\\n              </div> \\r\\n            </mat-step>\\r\\n        </mat-horizontal-stepper>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}