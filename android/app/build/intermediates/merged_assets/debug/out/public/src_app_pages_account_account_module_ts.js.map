{"version":3,"file":"src_app_pages_account_account_module_ts.js","mappings":";;;;;;;;;;;;;AAEO,MAAM,WAAW;CASvB;;;;;;;;;;;;;;;;;;;;;;;;ACX0E;AACnB;AAEM;IAOjD,gBAAgB,SAAhB,gBAAgB;IAO3B,YAAmB,MAAa,EAAQ,WAAwB;QAA7C,WAAM,GAAN,MAAM,CAAO;QAAQ,gBAAW,GAAX,WAAW,CAAa;QANzD,aAAQ,GAAoC;YACjD,gBAAgB,EAAC,IAAI;SACtB,CAAC;QAEK,gBAAW,GAAW,IAAI,CAAC;QAC3B,UAAK,GAAG,EAAI,CAAC;QAEb,SAAI,GAAG,EAAE,CAAC;IADmD,CAAC;IAE/D,QAAQ;;YACZ,IAAG,MAAM,CAAC,UAAU,GAAG,GAAG,EAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;YAAA,CAAC;YAEF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YAC/E,IAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;YACtH,IAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;YACvH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;YACrF,IAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;YACpI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;YAC/F,IAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,MAAM;gBAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;YAC1H,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC,CAAC;YACvF,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;YAChE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC;KAAA;IAIM,cAAc;QACnB,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACjF,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACnC,IAAI,KAAK,YAAY,0DAAa,EAAE;gBAClC,IAAG,MAAM,CAAC,UAAU,GAAG,GAAG,EAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;iBACtB;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAGF;;YArDQ,mDAAM;YAEN,wEAAY;;;sBAWlB,oDAAS,SAAC,SAAS;6BAwBnB,uDAAY,SAAC,eAAe;;AA5BlB,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,4KAAuC;;KAExC,CAAC;GACW,gBAAgB,CA4C5B;AA5C4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVY;AACM;AACA;AACW;AACT;AACP;AACa;AACc;AACW;AACX;AACN;AACiB;AACX;AACW;AACsB;AAC9B;AACmB;AACzB;AACiB;AAC1B;AACoB;AACyB;AACS;AAExG,MAAM,MAAM,GAAG;IACpB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAgB,EAAE,QAAQ,EAAE;YACrC,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;YACtD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,yFAAqB,EAAE;YAC3D,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,yFAAqB,EAAE;YAC/D,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wEAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8EAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAmB,EAAE;YACrD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yFAAqB,EAAE;YACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,4EAAiB,EAAE;YAClD,EAAE,IAAI,EAAG,OAAO,EAAG,SAAS,EAAE,mEAAc,EAAC;SAE9C;KACF;CACF,CAAC;IAmBW,aAAa,SAAb,aAAa;CAAI;AAAjB,aAAa;IAjBzB,wDAAQ,CAAC;QACR,YAAY,EAAE;YACZ,8EAAkB,EAAC,0HAAsB;YACzC,gEAAgB;YAChB,yFAAqB;YACrB,8EAAkB;YAClB,wEAAgB;YAChB,yFAAqB,EAAC,iHAAmB,EAAE,8EAAkB,EAAE,yFAAqB,EAAE,+GAAuB,EAAE,kFAAmB,EAAE,qGAAqB,EAAE,4EAAiB,EAAE,6FAAmB,EAAE,mEAAc,EAAE,uFAAkB;SACtO;QACD,OAAO,EAAE;YACP,0DAAY;YACZ,mEAAqB,CAAC,MAAM,CAAC;YAC7B,+DAAY;YACZ,4DAAe;YACf,qDAAa;SACd;KACF,CAAC;GACW,aAAa,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AC3DgC;AACC;IAO9C,mBAAmB,SAAnB,mBAAmB;IAE9B,YAA4C,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;QAChD,OAAE,GAAE,CAAC,CAAC;IAD8C,CAAC;IAE1D,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;QACvB,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;IAC5D,CAAC;CAEF;;4CAPc,iDAAM,SAAC,qEAAe;;AAFxB,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,gLAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAS/B;AAT+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR6B;AACR;AACM;AACV;AACY;AAEZ;AAEa;AACY;IAM7D,iBAAiB,SAAjB,iBAAiB;IAQ5B,YAAmB,UAAqB,EAAQ,YAAyB,EAAQ,MAAiB;QAA/E,eAAU,GAAV,UAAU,CAAW;QAAQ,iBAAY,GAAZ,YAAY,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAW;QANlG,qBAAgB,GAAa,CAAC,QAAQ,EAAC,WAAW,EAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,CAAC,CAAC;QAC/E,WAAM,GAAa,CAAC,YAAY,EAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC;QAmBpD,SAAI,GAAU,EAAE,CAAC;IAdqF,CAAC;IAEvG,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAC,IAAI,EAAC,GAAG,EAAC,KAAK,EAAC,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1E,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YAED,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAID,UAAU,CAAC,CAAM;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE;IACzB,CAAC;IAEM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;IACD,UAAU,CAAC,EAAE;QACX,YAAY,CAAC,OAAO,CAAC,YAAY,EAAC,EAAE,CAAC;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE;gBACF,EAAE,EAAC,EAAE;aACR;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,wBAAwB;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,OAAO,CAAC,IAAI;QACV,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAG,KAAK,IAAI,IAAI,IAAI,EAAE,EAAC;YACrB,OAAO,IAAI;SACZ;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;;YA3FQ,2DAAU;YAEV,wEAAY;YAPZ,+DAAS;;;wBAmBf,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AANvB,iBAAiB;IAL7B,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,6KAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAkF7B;AAlF6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACfoB;AACkB;AACZ;AACP;AAC4B;IAOhE,uBAAuB,SAAvB,uBAAuB;IAGlC,YAAmB,SAAgD,EAAQ,mBAAuC,EAAS,WAAwB,EAAQ,UAAqB;QAA7J,cAAS,GAAT,SAAS,CAAuC;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAQ,eAAU,GAAV,UAAU,CAAW;QADzK,qBAAgB,GAAG,EAAE,CAAC;IACwJ,CAAC;IAEtL,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,CAAC,EAAE,EAAC,+DAAmB,CAAC;YAC9B,GAAG,EAAE,CAAC,EAAE,EAAC,+DAAmB,CAAC;YAC7B,MAAM,EAAG,CAAC,EAAE,EAAC,+DAAmB,CAAC;YACjC,IAAI,EAAG,CAAC,EAAE,EAAC,+DAAmB,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;IAChE,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,MAAM;QACJ,IAAI,KAAK,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC;QACvC,MAAM,MAAM,GAAG,EAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,gBAAgB,EAAG,KAAK,EAAC,WAAW,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACvI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACC,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAvCQ,kEAAY;YAEZ,uFAAmB;YAHnB,uDAAW;YAEX,2DAAU;;AAQN,uBAAuB;IALnC,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,qLAAgD;;KAEjD,CAAC;GACW,uBAAuB,CA8BnC;AA9BmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXyB;AACZ;AAEU;AACV;AACY;AAEgB;AACxB;AACmC;IAO3E,qBAAqB,SAArB,qBAAqB;IAOhC,YAAmB,UAAqB,EAAQ,mBAAuC,EAAQ,MAAiB;QAA7F,eAAU,GAAV,UAAU,CAAW;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAoB;QAAQ,WAAM,GAAN,MAAM,CAAW;QALhH,qBAAgB,GAAa,CAAC,OAAO,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAIzD,SAAI,GAAW,CAAC,SAAS,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAe5C,SAAI,GAAU,EAAE,CAAC;IAdmG,CAAC;IAErH,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QAEtB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzD,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAM,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QAER,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iGAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,wBAAwB;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IAEL,CAAC;IACM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAW;QAExB,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,iBAAiB,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAChD,IAAG,YAAY,EAAC;oBACX,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAClE,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACN;YACF,CAAC,CAAC,CAAC;SACD;IACH,CAAC;IAGM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;CACF;;YApGQ,2DAAU;YAMV,uFAAmB;YACnB,+DAAS;;;wBAYf,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AALvB,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAqFjC;AArFiC;;;;;;;;;;;;;;;;;;;;;;AChBgB;IAOrC,kBAAkB,SAAlB,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8KAAyC;;KAE1C,CAAC;GACW,kBAAkB,CAO9B;AAP8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiD;AAChC;AACA;AAOzB;AACkB;AAK8C;AACzC;AACiC;AACd;AACF;IAOlD,qBAAqB,SAArB,qBAAqB;IAyBhC,YACS,UAAsB,EACrB,EAAe,EACf,aAA4B,EAC5B,MAAc,EACd,aAA4B,EAC7B,mBAA0C,EACzC,cAA8B,EAC/B,cAA8B;QAP9B,eAAU,GAAV,UAAU,CAAY;QACrB,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC7B,wBAAmB,GAAnB,mBAAmB,CAAuB;QACzC,mBAAc,GAAd,cAAc,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAgB;QA5BhC,aAAQ,GAAG,EAAE;QACb,UAAK,GAAG,EAAE;QACV,kBAAa,GAAG,EAAE;QAClB,qBAAgB,GAAG,EAAE;QACrB,WAAM,GAAG,EAAE;QACX,YAAO,GAAG,IAAI,CAAC,QAAQ;QACvB,kBAAa,GAAG,EAAE;QAClB,YAAO,GAAG,EAAE;QACZ,YAAO,GAAG,EAAE;QACZ,SAAI,GAAG,EAAE;QACT,QAAG,GAAW,SAAS;QACvB,QAAG,GAAW,CAAC,SAAS;QACxB,SAAI,GAAW,EAAE;QACjB,OAAE,GAAW,CAAC;QAErB,aAAQ,GAAS,IAAI;QACrB,eAAU,GAAQ,IAAI;QACtB,UAAK,GAAW,EAAE;QACX,sBAAiB,GAAwB,IAAI,kGAAmB,EAAE;QAClE,WAAM,GAAW,IAAI,yDAAM,EAAE;IAUjC,CAAC;IAEJ,QAAQ,CAAC,KAAK;QACZ,+EAA+E;QAE/E,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;SACpD;aAAM;YACL,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;SACvB;IACH,CAAC;IACD,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;QAE5D,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAC/C,oBAAoB,CACrB,CAAC,KAAK;QACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAC/C,sBAAsB,CACvB,CAAC,KAAK;QACP,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACzD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IACD,WAAW;QACT,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK;QAC5D,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;QACrE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK;QAChE,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CACjD,sBAAsB,CACvB,CAAC,KAAK;QACP,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;QACpB,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;aAC3D,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;IAC3B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE;YACxB,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC;YACpE,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC;YACnE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YAC1D,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC;YAClE,IAAI,EAAE,CAAC;SACR,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IACD,WAAW;QACT,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;QAE1C,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;aAC/D,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;IAC5B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE;YACxB,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YACpC,IAAI,EAAE,CAAC;SACR,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,WAAW,EAAE;QACpB,CAAC,CAAC;QACJ,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;IAC5B,CAAC;IACM,MAAM,CAAC,KAAU;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC7C,IAAI,CAAC,OAAO,EAAE;IAChB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE;YACxB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YAC/C,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;YACpD,IAAI,EAAE,CAAC;SACR,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACjB,IAAI,CAAC,WAAW,EAAE;QACpB,CAAC,CAAC;IACN,CAAC;IACD,WAAW;QACT,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE;YACxB,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK;YACnD,IAAI,EAAE,CAAC;SACR,CAAC;aACD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;IAC3B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,mBAAmB;aACrB,eAAe,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;aAChD,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,GAAE,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO;QACL,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;QACnC,IAAI,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE;YACtC,OAAM;SACP;QACD,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE;QAC/B,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM;YAC/B,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC;QAC1C,CAAC;IACH,CAAC;IAED,QAAQ,CAAC,KAAK;QACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,UAAU,GAAG,IAAI;IACxB,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,CAAc;QACxE,cAAc;QACd,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YACxB,qCAAqC;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,uDAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC3D;aAAM;YACP,gBAAgB;YACd,8BAA8B;YAC9B,IAAI,CAAC,GAAW,CAAC;YAEjB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAiB,EAAE,EAAE;gBACpD,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;oBACpC,mDAAmD;oBACnD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC1B,OAAM;iBACP;gBAED,CAAC,EAAE;YACL,CAAC,CAAC;SACH;IACH,CAAC;IAEY,QAAQ;;YACnB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE;YAC/D,IAAI,CAAC,QAAQ,GAAG,IAAI;QACtB,CAAC;KAAA;IACY,WAAW,CAAC,EAAE,EAAE,IAAI;;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC5C,CAAC;KAAA;IAEY,IAAI;;YACf,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;YACjF,IAAI,CAAC,KAAK,GAAG,IAAI;YACjB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;QAClC,CAAC;KAAA;IACY,QAAQ;;YACnB,0BAA0B;YAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACvD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YACH,MAAM,IAAI,CAAC,QAAQ,EAAE;YACrB,MAAM,IAAI,CAAC,IAAI,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;YAElC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACvD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE;YAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAE3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC9B,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACnB,YAAY,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;oBACzC,cAAc,EAAE,IAAI;oBACpB,KAAK,EAAE,CAAC,IAAI,EAAE,+DAAmB,CAAC;oBAClC,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,IAAI;oBACf,mBAAmB;iBACpB,CAAC;gBACF,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACrB,QAAQ,EAAE,CAAC,EAAE,EAAE,+DAAmB,CAAC;oBACnC,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,+DAAmB,CAAC;oBACvD,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,UAAU;oBACzC,YAAY,EAAE,EAAE;oBAChB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM;iBACrC,CAAC;gBACF,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACxB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;oBAChC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBAClC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBAChC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACxB,SAAS,EAAE,EAAE;oBACb,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE;iBAC/B,CAAC;gBACF,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;oBACnB,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;oBAC3C,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;oBACzC,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;oBACzD,QAAQ,EAAE,KAAK;iBAChB,CAAC;aACH,CAAC;YAEF,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,CAAC,kBAAkB,EAAE;QAC3B,CAAC;KAAA;IAEM,iBAAiB,CAAC,CAAM;QAC7B,IAAI,CAAC,CAAC,aAAa,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;SACnC;IACH,CAAC;IACM,KAAK;QACV,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;QAE9B,MAAM,MAAM,GAAc,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;QACtE,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnB;QACD,MAAM,KAAK,GAAc,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;QACpE,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClB;QACD,MAAM,kBAAkB,GAAc,CACpC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAoB,CAAC,CACzD;QACD,OAAO,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;YACpC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YACpB,UAAU,EAAE;gBACV,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;YACD,KAAK,EAAE;gBACL,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC;IACJ,CAAC;IAED,2DAA2D;IACpD,YAAY;QACjB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO;aAC7B,GAAG,CAAC,cAAc,CAAC;aACnB,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO;aAC7B,GAAG,CAAC,QAAQ,CAAC;aACb,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;IACzC,CAAC;IACM,oBAAoB;QACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO;aAC7B,GAAG,CAAC,QAAQ,CAAC;aACb,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;IACzC,CAAC;IAEO,kBAAkB;QACxB,IAAI,aAAa,IAAI,SAAS,EAAE;YAC9B,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpD,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ;gBACnC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS;YACtC,CAAC,CAAC;SACH;IACH,CAAC;IACO,kBAAkB;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAClC,IAAI,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CACpD,IAAI,CAAC,mBAAmB,CAAC,aAAa,EACtC;gBACE,KAAK,EAAE,CAAC,SAAS,CAAC;aACnB,CACF;YACD,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE,GAAG,EAAE;gBAC7C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;oBACnB,IAAI,KAAK,GAAmC,YAAY,CAAC,QAAQ,EAAE;oBACnE,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE;wBAC3D,OAAM;qBACP;oBACD,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;oBACxC,IAAI,CAAC,UAAU,EAAE;gBACnB,CAAC,CAAC;YACJ,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB;IACvB,2CAA2C;IAC3C,iDAAiD;IACjD,+DAA+D;IAC/D,oEAAoE;IACpE,uDAAuD;IACvD,gCAAgC;IAChC,oDAAoD;IACpD,sDAAsD;IACtD,+DAA+D;IAC/D,yCAAyC;IACzC,UAAU;IACV,UAAU;IACV,QAAQ;IACR,IAAI;IACG,UAAU;QACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACpE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;YACrB,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;gBAC9B,IAAI,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB;gBACtD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAClE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC;IACJ,CAAC;IACM,UAAU,CAAC,CAAM;QACtB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG;QACvB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG;QACvB,IAAI,CAAC,UAAU,EAAE;IACnB,CAAC;IACM,aAAa,CAAC,CAAM;QACzB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAChB,CAAC;IAEM,YAAY,CAAC,MAAM;QACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;QAE7D,IAAI,OAAO,EAAE,SAAS,EAAE,eAAe;QAEvC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;gBACvC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;oBAChE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;iBACvE;qBAAM;oBACL,OAAO,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE;oBAC9D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBAC1B;gBACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;aAC/D;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC1C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;aACzE;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC1D,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;wBAChE,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAC1B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CACtC,CAAC,CAAC,CAAC;qBACL;yBAAM;wBACL,OAAO,GAAG;4BACR,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;4BAC1B,IAAI,EAAE,IAAI,CAAC,SAAS;yBACrB;wBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;qBAC1B;oBACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;iBAC/D;YACH,CAAC,CAAC;SACH;QAED,IAAI,OAAO,EAAE;YACX,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAE;oBAC3C,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAC1C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE,CAC1D,CAAC,CAAC,CAAC;oBACJ,IAAI,YAAY,EAAE;wBAChB,eAAe,GAAG,YAAY;qBAC/B;yBAAM;wBACL,eAAe,GAAG;4BAChB,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC;4BACjC,IAAI,EAAE,IAAI,CAAC,SAAS;4BACpB,MAAM,EAAE,OAAO,CAAC,EAAE;yBACnB;wBACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC;qBACzC;oBACD,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO;yBAC7B,GAAG,CAAC,cAAc,CAAC;yBACnB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC;SACH;QAED,IAAI,OAAO,EAAE;YACX,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACzC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;oBACpC,IACE,IAAI,CAAC,OAAO,CAAC,MAAM,CACjB,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE,CAC/D,CAAC,CAAC,CAAC,EACJ;wBACA,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAC7B,CAAC,MAAM,EAAE,EAAE,CACT,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE,CAC/D,CAAC,CAAC,CAAC;qBACL;yBAAM;wBACL,SAAS,GAAG;4BACV,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;4BAC3B,IAAI,EAAE,IAAI,CAAC,SAAS;4BACpB,MAAM,EAAE,OAAO,CAAC,EAAE;4BAClB,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;yBAC5D;wBACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;qBAC7B;oBACD,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;oBAChC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;iBACrE;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,8DAA8D;IACvD,aAAa;QAClB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YACxC,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACnB,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC;QACJ,CAAC,CAAC;QACF,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;IAC3B,CAAC;IAED,yDAAyD;IAClD,WAAW;QAChB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;SACX,CAAC;IACJ,CAAC;IACM,QAAQ;QACb,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAc;QACxE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IACjC,CAAC;IACM,WAAW,CAAC,KAAK;QACtB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAc;QACxE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;IACxB,CAAC;IAEM,UAAU;QACf,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;SACZ,CAAC;IACJ,CAAC;IACM,OAAO;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAc;QACtE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAC;IACM,UAAU,CAAC,KAAK;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAc;QACtE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;IACvB,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;SACZ,CAAC;IACJ,CAAC;IACM,UAAU;QACf,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CACjD,oBAAoB,CACR;QACd,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IACrC,CAAC;IACM,aAAa,CAAC,KAAK;QACxB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CACjD,oBAAoB,CACR;QACd,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC1B,CAAC;CACF;;YAjiBQ,2DAAU;YAIjB,uDAAW;YAKJ,qDAAa;YAV6B,kDAAM;YAmBhD,0EAAa;YAFb,0FAAqB;YAfrB,4DAAc;YAgBd,4EAAc;;;gCASpB,qDAAS,SAAC,mBAAmB;kCAC7B,qDAAS,SAAC,qBAAqB;;AAFrB,qBAAqB;IALjC,yDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAwgBjC;AAxgBiC;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BgB;AACkB;AACZ;AACP;AACiB;IAQrD,qBAAqB,SAArB,qBAAqB;IAIhC,YAAmB,SAAgD,EAAQ,cAA6B,EAAS,WAAwB,EAAQ,UAAqB;QAAnJ,cAAS,GAAT,SAAS,CAAuC;QAAQ,mBAAc,GAAd,cAAc,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAQ,eAAU,GAAV,UAAU,CAAW;QAD/J,qBAAgB,GAAG,EAAE,CAAC;IAC8I,CAAC;IAE5K,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,GAAG,EAAE,CAAC,EAAE,EAAC,+DAAmB,CAAC;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;IAChE,CAAC;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,MAAM;QACJ,IAAI,KAAK,GAAC,CAAC,EAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC;QACvC,MAAM,MAAM,GAAG,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACC,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;CAEF;;YAtCQ,kEAAY;YAEZ,4EAAc;YAHH,uDAAW;YAEtB,2DAAU;;AASN,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA4BjC;AA5BiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ2B;AACR;AACM;AACV;AACY;AAEZ;AAEiB;AAEc;IAOnE,mBAAmB,SAAnB,mBAAmB;IAO9B,YAAmB,UAAqB,EAAQ,cAA6B,EAAQ,MAAiB;QAAnF,eAAU,GAAV,UAAU,CAAW;QAAQ,mBAAc,GAAd,cAAc,CAAe;QAAQ,WAAM,GAAN,MAAM,CAAW;QALtG,qBAAgB,GAAa,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAIjD,SAAI,GAAW,CAAC,SAAS,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAe5C,SAAI,GAAU,EAAE,CAAC;IAdyF,CAAC;IAE3G,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QAEtB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAM,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QAER,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;YACf;;gBAEI;SACJ,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,wBAAwB;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IAEL,CAAC;IACM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAW;QAExB,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,iBAAiB,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAChD,IAAG,YAAY,EAAC;oBACX,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACxD,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACN;YACF,CAAC,CAAC,CAAC;SACD;IACH,CAAC;IAGM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;CAEF;;YAnGQ,2DAAU;YAEV,4EAAc;YAPd,+DAAS;;;wBAoBf,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AALvB,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,+KAA0C;;KAE3C,CAAC;GACW,mBAAmB,CAwF/B;AAxF+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB6B;AACZ;AAEU;AACV;AACY;IAOhD,kBAAkB,SAAlB,kBAAkB;IAM7B,YAAmB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;QALxC,qBAAgB,GAAa,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAE,CAAC;IAKtB,CAAC;IAE7C,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,QAAiB;QAC7B,MAAM,KAAK,GAAW,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAClC;IACH,CAAC;IAEM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;CACF;;YAzCQ,2DAAU;;;wBAchB,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AAJvB,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8KAAyC;;KAE1C,CAAC;GACW,kBAAkB,CA8B9B;AA9B8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ8B;AACZ;AAEU;AACV;AACY;AACmB;IAOnE,kBAAkB,SAAlB,kBAAkB;IAQ7B,YAAmB,UAAqB,EAAQ,mBAAyC;QAAtE,eAAU,GAAV,UAAU,CAAW;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAsB;QANzF,qBAAgB,GAAa,CAAC,MAAM,EAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,CAAC,CAAC;QACjE,WAAM,GAAa,CAAC,WAAW,EAAC,2BAA2B,EAAC,QAAQ,CAAC,CAAC;QAmBtE,SAAI,GAAU,EAAE,CAAC;IAd4E,CAAC;IAE9F,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,EAAC,IAAI,EAAC,GAAG,EAAC,cAAc,EAAC,KAAK,EAAC,UAAU,EAAC,EAAE,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3G,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YAED,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAW;QAExB,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,iBAAiB,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAChD,IAAG,YAAY,EAAC;oBACX,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACnE,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACN;YACF,CAAC,CAAC,CAAC;SACD;IACH,CAAC;IACM,aAAa,CAAC,OAAW;QAE9B,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,uBAAuB,CAAC;YACxC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACjE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAC/C,IAAG,YAAY,EAAC;oBACf,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACF,UAAU,CAAC,CAAM;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE;IACzB,CAAC;IAEM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;CACF;;YA3GQ,2DAAU;YAKV,0FAAqB;;;wBAY3B,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AANvB,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8KAAyC;;KAE1C,CAAC;GACW,kBAAkB,CA+F9B;AA/F8B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb8B;AACZ;AAEU;AACV;AACY;AACmB;IAOnE,qBAAqB,SAArB,qBAAqB;IAQhC,YAAmB,UAAqB,EAAQ,mBAAyC;QAAtE,eAAU,GAAV,UAAU,CAAW;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAsB;QANzF,qBAAgB,GAAa,CAAC,MAAM,EAAC,OAAO,EAAC,QAAQ,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QACzE,WAAM,GAAa,CAAC,wBAAwB,EAAC,2BAA2B,EAAC,QAAQ,CAAC,CAAC;QAmBnF,SAAI,GAAU,EAAE,CAAC;IAd4E,CAAC;IAE9F,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChE,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAM,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAW;QAExB,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,iBAAiB,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAChD,IAAG,YAAY,EAAC;oBACX,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACnE,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACN;YACF,CAAC,CAAC,CAAC;SACD;IACH,CAAC;IACM,aAAa,CAAC,OAAW;QAE9B,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,uBAAuB,CAAC;YACxC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACjE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAC/C,IAAG,YAAY,EAAC;oBACf,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,OAAO,EAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBAC3E,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACF,UAAU,CAAC,CAAM;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAE;IACzB,CAAC;IAEM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;CACF;;YA1GQ,2DAAU;YAKV,0FAAqB;;;wBAY3B,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AANvB,qBAAqB;IALjC,wDAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kLAA6C;;KAE9C,CAAC;GACW,qBAAqB,CA8FjC;AA9FiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACkB;AAEV;AACT;AACa;IAOjD,gBAAgB,SAAhB,gBAAgB;IAI3B,YAAmB,WAAwB,EAAS,QAAqB,EAAQ,WAAwB,EAAQ,UAAqB;QAAnH,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAQ,eAAU,GAAV,UAAU,CAAW;IAAI,CAAC;IAErI,QAAQ;;YACZ,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;YAChE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrC,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClG,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACjG,CAAC,CAAC;QAEL,CAAC;KAAA;IAGD,MAAM;QACJ,MAAM,MAAM,GAAG,EAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,CAAC;QAChH,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uCAAuC,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACtI;;gBAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAtCQ,uDAAW;YAEX,oEAAW;YAEX,wEAAY;YADZ,2DAAU;;AAQN,gBAAgB;IAL5B,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,4KAAuC;;KAExC,CAAC;GACW,gBAAgB,CA2B5B;AA3B4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb6B;AAEU;AACK;AACf;AACT;AACa;IAOjD,kBAAkB,SAAlB,kBAAkB;IAK7B,YAAmB,WAAwB,EAAS,QAAqB,EAAQ,WAAwB,EAAQ,UAAqB,EACpG,IAAS,EACjC,SAA2C;QAFlC,gBAAW,GAAX,WAAW,CAAa;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAQ,eAAU,GAAV,UAAU,CAAW;QACpG,SAAI,GAAJ,IAAI,CAAK;QACjC,cAAS,GAAT,SAAS,CAAkC;IAAI,CAAC;IAEpD,QAAQ;;YACZ,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;YACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrC,SAAS,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClG,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAEjG,CAAC,CAAC;QAEL,CAAC;KAAA;IACD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAGD,MAAM;QACJ,MAAM,MAAM,GAAG,EAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,SAAS,EAAC,IAAI,EAAC,KAAK,EAAC,mBAAmB,EAAC,cAAc,EAAC,EAAE,EAAC,CAAC;QAC5K,OAAO,CAAC,GAAG,CAAC,WAAW,EAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;CAIF;;YA7CQ,uDAAW;YAEX,oEAAW;YAEX,wEAAY;YADZ,2DAAU;4CAcd,iDAAM,SAAC,qEAAe;YAhBlB,kEAAY;;AAUR,kBAAkB;IAL9B,wDAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,+KAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAkC9B;AAlC8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbwC;AACV;AACR;AACM;AACV;AACY;AAEZ;AAGa;IAQjD,cAAc,SAAd,cAAc;IAQzB,YAAmB,UAAqB,EAAQ,WAAwB,EAAQ,MAAiB;QAA9E,eAAU,GAAV,UAAU,CAAW;QAAQ,gBAAW,GAAX,WAAW,CAAa;QAAQ,WAAM,GAAN,MAAM,CAAW;QALjG,qBAAgB,GAAa,CAAC,OAAO,EAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAIzD,SAAI,GAAW,CAAC,SAAS,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAe5C,SAAI,GAAU,EAAE,CAAC;IAdoF,CAAC;IAEtG,QAAQ;QACP;;kBAEU;QACX,eAAe;QACf,wBAAwB;QAEtB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IACD,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC7C,IAAG,CAAC,GAAG,EAAC;gBACN,OAAO;aACR;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAM,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU,CAAC,EAAE;QAEX,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAkB,EAAE;YACrD,KAAK,EAAE,OAAO;YACd,IAAI,EAAC;gBACH,EAAE,EAAC,EAAE;aACN;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACzC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,wBAAwB;YACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;IAEL,CAAC;IACM,cAAc,CAAC,IAAQ;QAG5B,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAW,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,OAAW;QAExB,sEAAsE;QACrE,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;YAElB,MAAM,OAAO,GAAG,iBAAiB,CAAC;YAClC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;gBAChD,IAAG,YAAY,EAAC;oBACX,wCAAwC;oBACxC,8CAA8C;oBAC7C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;wBACpD,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAClB,CAAC,CACA;iBACN;YACF,CAAC,CAAC,CAAC;SACD;IACH,CAAC;IAGM,WAAW,CAAC,WAAmB;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IACD,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC/C,kEAAkE;IACpE,CAAC;CAEF;;YArGQ,2DAAU;YAGV,wEAAY;YARZ,+DAAS;;;wBAqBf,oDAAS,SAAC,qEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;mBACtC,oDAAS,SAAC,2DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AANvB,cAAc;IAL1B,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,0KAAqC;;KAEtC,CAAC;GACW,cAAc,CA0F1B;AA1F0B;;;;;;;;;;;;;;;;;;;;;AClBwC;AACjB;AACP;AACS;IAMvC,mBAAmB,SAAnB,mBAAmB;IAG9B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAF1B,QAAG,GAAW,wEAAuB,GAAC,mBAAmB,CAAC;IAE5B,CAAC;IAGxC,gBAAgB,CAAC,kBAAkB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,yEAAW,CAAC,CAAC;IAEjD,CAAC;IAEC,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAExC,CAAC;IACD,cAAc,CAAC,EAAE;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,cAAc,CAAC,EAAE,EAAC,iBAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC;IAC/D,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,eAAe,CAAC,iBAAiB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;IAErD,CAAC;IACD,4BAA4B,CAAC,EAAE,EAAC,GAAG;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,GAAC,kBAAkB,GAAC,GAAG,CAAC,CAAC;IAC/D,CAAC;CAEA;;YA3CQ,4DAAU;;AAQN,mBAAmB;IAH/B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAmC/B;AAnC+B;;;;;;;;;;;;;;;ACThC,iEAAe,0xBAA0xB,MAAM,2TAA2T,WAAW,kIAAkI,WAAW,mEAAmE,YAAY,w0BAAw0B;;;;;;;;;;;;;;ACAzpE,iEAAe,+BAA+B;;;;;;;;;;;;;;ACA9C,iEAAe,6lBAA6lB,0CAA0C,uUAAuU,4CAA4C,+TAA+T,cAAc,mVAAmV,mCAAmC,26BAA26B,0BAA0B,kSAAkS;;;;;;;;;;;;;;ACAn7F,iEAAe,oiCAAoiC,qBAAqB,sjEAAsjE,goBAAgoB;;;;;;;;;;;;;;ACA9vH,iEAAe,0DAA0D,slBAAslB,cAAc,0YAA0Y,eAAe,oUAAoU,6BAA6B,4oBAA4oB,0BAA0B,kSAAkS;;;;;;;;;;;;;;ACA/2E,iEAAe,uCAAuC;;;;;;;;;;;;;;ACAtD,iEAAe,onFAAonF,WAAW,q4CAAq4C,mBAAmB,glBAAglB,2IAA2I,6DAA6D,aAAa,oxIAAoxI,yKAAyK,mBAAmB,qxEAAqxE,cAAc,+HAA+H,KAAK,ulEAAulE,cAAc,oIAAoI,KAAK,gkHAAgkH,cAAc,+HAA+H,KAAK,2pEAA2pE,UAAU,IAAI,SAAS,gnDAAgnD,iDAAiD,2lBAA2lB;;;;;;;;;;;;;;ACAhjsB,iEAAe,wxCAAwxC,8nBAA8nB;;;;;;;;;;;;;;ACAr6D,iEAAe,0DAA0D,glBAAglB,cAAc,oYAAoY,cAAc,4pBAA4pB,0BAA0B,kSAAkS;;;;;;;;;;;;;;ACAjhE,iEAAe,ygBAAygB,cAAc,6nBAA6nB,gBAAgB,omBAAomB,0BAA0B,0OAA0O;;;;;;;;;;;;;;ACA3hE,iEAAe,8hBAA8hB,cAAc,kqBAAkqB,4BAA4B,yTAAyT,eAAe,mUAAmU,4BAA4B,uRAAuR,8CAA8C,iQAAiQ,iBAAiB,qkCAAqkC,0BAA0B,kSAAkS;;;;;;;;;;;;;;ACAx3H,iEAAe,4gBAA4gB,cAAc,g0BAAg0B,4BAA4B,0UAA0U,4BAA4B,iTAAiT,eAAe,gTAAgT,sBAAsB,8QAA8Q,8CAA8C,qPAAqP,iBAAiB,k9BAAk9B,0BAA0B,wRAAwR;;;;;;;;;;;;;;ACAvrI,iEAAe,2jDAA2jD;;;;;;;;;;;;;;ACA1kD,iEAAe,2jDAA2jD;;;;;;;;;;;;;;ACA1kD,iEAAe,0iBAA0iB,cAAc,oXAAoX,sBAAsB,kBAAkB,4OAA4O,eAAe,g0BAAg0B,0BAA0B,kSAAkS","sources":["./src/app/models/CustomField/custom-field.ts","./src/app/pages/account/account.component.ts","./src/app/pages/account/account.module.ts","./src/app/pages/account/bookings/add-comment/add-comment.component.ts","./src/app/pages/account/bookings/bookings.component.ts","./src/app/pages/account/custom-fields/add-custom-field/add-custom-field.component.ts","./src/app/pages/account/custom-fields/custom-fields.component.ts","./src/app/pages/account/dashboard/dashboard.component.ts","./src/app/pages/account/edit-property/edit-property.component.ts","./src/app/pages/account/equipments/add-equipment/add-equipment.component.ts","./src/app/pages/account/equipments/equipments.component.ts","./src/app/pages/account/favorites/favorites.component.ts","./src/app/pages/account/logements/logements.component.ts","./src/app/pages/account/my-properties/my-properties.component.ts","./src/app/pages/account/profile/profile.component.ts","./src/app/pages/account/users/edit-users/edit-users.component.ts","./src/app/pages/account/users/users.component.ts","./src/app/services/custom-fields.service.ts","./src/app/pages/account/account.component.html","./src/app/pages/account/bookings/add-comment/add-comment.component.html","./src/app/pages/account/bookings/bookings.component.html","./src/app/pages/account/custom-fields/add-custom-field/add-custom-field.component.html","./src/app/pages/account/custom-fields/custom-fields.component.html","./src/app/pages/account/dashboard/dashboard.component.html","./src/app/pages/account/edit-property/edit-property.component.html","./src/app/pages/account/equipments/add-equipment/add-equipment.component.html","./src/app/pages/account/equipments/equipments.component.html","./src/app/pages/account/favorites/favorites.component.html","./src/app/pages/account/logements/logements.component.html","./src/app/pages/account/my-properties/my-properties.component.html","./src/app/pages/account/profile/profile.component.html","./src/app/pages/account/users/edit-users/edit-users.component.html","./src/app/pages/account/users/users.component.html"],"sourcesContent":["import { CustomFieldKind } from \"../custom-field-kind\";\r\nimport { AccommodationFieldValue } from \"../AccommodationFieldValue/accommodation-field-value\";\r\nexport class CustomField {\r\n    customFieldValue : number;\r\n    id : number;\r\n    label : string;\r\n    description : string;\r\n    value : number;\r\n    materialIconName : string;\r\n    customFieldKinds : CustomFieldKind[];\r\n    accommodationFieldValues : AccommodationFieldValue[];\r\n}\r\n\r\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.scss']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  public psConfig: PerfectScrollbarConfigInterface = {\r\n    wheelPropagation:true\r\n  };\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public sidenavOpen:boolean = true;\r\n  public links = [  ]; \r\n  constructor(public router:Router,public UserService:UsersService) { }\r\n  public name = \"\";\r\n  async ngOnInit() {\r\n    if(window.innerWidth < 960){\r\n      this.sidenavOpen = false;\r\n    };\r\n\r\n    this.links.push({ name: 'Profil', href: 'profile', icon: 'person' });\r\n    this.links.push({ name: 'Mes reservations', href: 'bookings', icon: 'book' });\r\n   if(localStorage.getItem('isadmin') == 'true') this.links.push({ name: 'Logements', href: 'logements', icon: 'home' });\r\n   if(localStorage.getItem('isadmin') == 'true') this.links.push({ name: 'Paramètres', href: 'custom', icon: 'settings' });\r\n    this.links.push({ name: 'Mes logements', href: 'my-properties', icon: 'view_list' });\r\n    if(localStorage.getItem('isadmin') == 'true') this.links.push({ name: 'Gérer les équipements', href: 'equipment', icon: 'fitbit' });\r\n    this.links.push({ name: 'Ajouter un logement', href: '/submit-property', icon: 'add_circle' });\r\n    if(localStorage.getItem('isadmin') == 'true') this.links.push({ name: 'Gérer les comptes', href: 'users', icon: 'group'});\r\n    this.links.push({ name: 'Se déconecter', href: '/login', icon: 'power_settings_new' });\r\n    var data = await this.UserService.getUsersprofile().toPromise();\r\n    this.name = data['firstName']+' '+data['lastName'];\r\n  }\r\n \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth < 960) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {  \r\n        if(window.innerWidth < 960){\r\n          this.sidenav.close(); \r\n        }\r\n      }                \r\n    });\r\n  } \r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { InputFileModule } from 'ngx-input-file';\r\nimport { AgmCoreModule } from '@agm/core';  \r\nimport { AccountComponent } from './account.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component'; \r\nimport { MyPropertiesComponent } from './my-properties/my-properties.component';\r\nimport { FavoritesComponent } from './favorites/favorites.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { EditPropertyComponent } from './edit-property/edit-property.component';\r\nimport { LogementsComponent } from './logements/logements.component';\r\nimport { CustomFieldsComponent } from './custom-fields/custom-fields.component';\r\nimport { AddCustomFieldComponent } from './custom-fields/add-custom-field/add-custom-field.component';\r\nimport { EquipmentsComponent } from './equipments/equipments.component';\r\nimport { AddEquipmentComponent } from './equipments/add-equipment/add-equipment.component';\r\nimport { BookingsComponent } from './bookings/bookings.component';\r\nimport { AddCommentComponent } from './bookings/add-comment/add-comment.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { EditUsersComponent } from './users/edit-users/edit-users.component';\r\nimport { UploadTaskComponent } from 'src/app/shared/upload-manager/upload-task/upload-task.component';\r\nimport { UploadManagerComponent } from 'src/app/shared/upload-manager/upload-manager/upload-manager.component';\r\n\r\nexport const routes = [\r\n  { \r\n    path: '', \r\n    component: AccountComponent, children: [\r\n      { path: '', redirectTo: 'profile', pathMatch: 'full' }, \r\n      { path: 'my-properties', component: MyPropertiesComponent },\r\n      { path: 'my-properties/:id', component: EditPropertyComponent },\r\n      { path: 'profile', component: ProfileComponent },\r\n      { path: 'logements', component: LogementsComponent },\r\n      { path: 'equipment', component: EquipmentsComponent },\r\n      { path: 'custom', component: CustomFieldsComponent },\r\n      { path: 'bookings', component: BookingsComponent },\r\n      { path:  'users' , component: UsersComponent},\r\n\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,UploadManagerComponent,\r\n    AccountComponent,  \r\n    MyPropertiesComponent, \r\n    FavoritesComponent, \r\n    ProfileComponent, \r\n    EditPropertyComponent,UploadTaskComponent, LogementsComponent, CustomFieldsComponent, AddCustomFieldComponent, EquipmentsComponent, AddEquipmentComponent, BookingsComponent, AddCommentComponent, UsersComponent, EditUsersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedModule,\r\n    InputFileModule,\r\n    AgmCoreModule\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\npublic id =0;\n  ngOnInit(): void {\n    this.id = this.data.id;\n    localStorage.setItem('accomodattionId',this.id.toString())\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Property } from 'src/app/app.models';\nimport { AppService } from 'src/app/app.service';\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\nimport { UsersService } from 'src/app/services/users.service';\nimport { AddCommentComponent } from './add-comment/add-comment.component';\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.scss']\n})\nexport class BookingsComponent implements OnInit {\n\n  displayedColumns: string[] = ['Arrive','Departure','Price','Status','actions'];\n  satuts: string[] = ['En attente','Annulé','Validé'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  data :any[];\n  constructor(public appService:AppService,public usersservice:UsersService,public dialog: MatDialog) { }\n\n  ngOnInit() {\n   /* this.appService.getProperties().subscribe(res => {\n      this.initDataSource(res);\n    });    */\n  //  var event ;\n  //  event.pageIndex = 0;\n    this.data = this.appService.getPropertyStatuses();\n    this.loaddata(0);\n  }\n  propertyType(data){\n    return this.data[parseInt(data)].name;\n  }\n  list: any[] = [];\n  loaddata(val:any){ \n    this.usersservice.getUsersbookings({page:val,order:'desc'}).subscribe(res => {\n      if(!res){\n        return;\n      }\n      \n      this.dataSource = new MatTableDataSource(res['items']);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  \n  public initDataSource(data:any){\n\n\n    this.dataSource = new MatTableDataSource<Property>(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  } \n  \n  \n  \n  getstatuts(a: any){\n    return this.satuts[a] ;\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onPaginateChange(event){\n    this.loaddata(JSON.stringify(event.pageIndex));\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\n  }\n  openDialog(id): void {\n    localStorage.setItem('propertyId',id)\n    const dialogRef = this.dialog.open(AddCommentComponent, {\n      width: '800px',\n      data :{\n          id:id\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.libelle = result;\n      this.ngOnInit();\n    });\n\n  }\n  compare(date){\n    var date1 = new Date(date);\n    if(date1 <= new Date()){\n      return true\n    }\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AppService } from 'src/app/app.service';\nimport { CustomFieldsService } from 'src/app/services/custom-fields.service';\n\n@Component({\n  selector: 'app-add-custom-field',\n  templateUrl: './add-custom-field.component.html',\n  styleUrls: ['./add-custom-field.component.scss']\n})\nexport class AddCustomFieldComponent implements OnInit {\n  form: FormGroup;\n  public propertyStatuses = [];\n  constructor(public dialogRef: MatDialogRef<AddCustomFieldComponent>,public customfieldsservice:CustomFieldsService,private formBuilder: FormBuilder,public appService:AppService ) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      type: ['',Validators.required],\n      nom: ['',Validators.required],\n      valeur : ['',Validators.required],\n      desc : ['',Validators.required]\n    }); \n    this.propertyStatuses = this.appService.getPropertyStatuses();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  } \n  submit(){\n    var kinds=[{kind:this.form.value.type}]\n    const values = {value: this.form.value.valeur, label: this.form.value.nom ,customFieldKinds : kinds,description:this.form.value.desc };\n    console.log('Ajouter :',values);\n    this.customfieldsservice.postCustomField(values).subscribe(res => {\n      console.log('Ajouter : ', res);\n      this.onNoClick();\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { Property } from 'src/app/app.models';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\nimport { CustomFieldsService } from 'src/app/services/custom-fields.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCustomFieldComponent } from './add-custom-field/add-custom-field.component';\n\n@Component({\n  selector: 'app-custom-fields',\n  templateUrl: './custom-fields.component.html',\n  styleUrls: ['./custom-fields.component.scss']\n})\nexport class CustomFieldsComponent implements OnInit {\n\n  displayedColumns: string[] = ['Title','Value','actions'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  data :string[]=['Booleen','Texte','Nombre'];\n  constructor(public appService:AppService,public customfieldsservice:CustomFieldsService,public dialog: MatDialog) { }\n\n  ngOnInit() {\n   /* this.appService.getProperties().subscribe(res => {\n      this.initDataSource(res);\n    });    */\n  //  var event ;\n  //  event.pageIndex = 0;\n    \n    this.loaddata(0);\n  }\n  propertyType(data){\n    return this.data[parseInt(data)];\n  }\n  list: any[] = [];\n  loaddata(val:any){\n    this.customfieldsservice.getCustomFields().subscribe(res => {\n      if(!res){\n        return;\n      }   \n      this.dataSource = new MatTableDataSource<any>(res);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(AddCustomFieldComponent, {\n      width: '800px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      //this.libelle = result;\n      this.ngOnInit();\n    });\n\n  }\n  public initDataSource(data:any){\n\n\n    this.dataSource = new MatTableDataSource<Property>(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  } \n  \n  public remove(element:any) {\n    \n   // const index: number = this.dataSource.data.indexOf(element.id);    \n    if (element !== -1) {\n      \n      const message = 'Etes Vous sur ?';\n      let dialogRef = this.appService.openConfirmDialog(null, message); \n\t\t\tdialogRef.afterClosed().subscribe(dialogResult => {\n\t\t\t\tif(dialogResult){ \n         // this.dataSource.data.splice(index,1);\n         // this.initDataSource(this.dataSource.data); \n          this.customfieldsservice.deleteCustomField(element).subscribe(res => {\n            this.ngOnInit();\n          }\n          )\n\t\t\t\t}\n\t\t\t});   \n    } \n  } \n\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onPaginateChange(event){\n    this.loaddata(JSON.stringify(event.pageIndex));\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core'\r\nimport { AppService } from 'src/app/app.service'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  FormArray,\r\n  FormControl,\r\n} from '@angular/forms'\r\nimport { MapsAPILoader } from '@agm/core'\r\nimport { Property } from 'src/app/app.models'\r\nimport { MatSnackBar } from '@angular/material/snack-bar'\r\nimport { MatStepper } from '@angular/material/stepper'\r\nimport { MatTableDataSource } from '@angular/material/table'\r\nimport { AccommodationCreate } from 'src/app/models/Accommodation/accommodation-create'\r\nimport { Adress } from 'src/app/models/adress'\r\nimport { AccommodationsService } from 'src/app/services/accommodations.service'\r\nimport { DevicesService } from 'src/app/services/devices.service'\r\nimport { UploadService } from 'src/app/services/upload.service'\r\n\r\n@Component({\r\n  selector: 'app-edit-property',\r\n  templateUrl: './edit-property.component.html',\r\n  styleUrls: ['./edit-property.component.scss'],\r\n})\r\nexport class EditPropertyComponent implements OnInit {\r\n  @ViewChild('horizontalStepper') horizontalStepper: MatStepper\r\n  @ViewChild('addressAutocomplete') addressAutocomplete: ElementRef\r\n  dataSource: MatTableDataSource<any>\r\n  public submitForm: FormGroup\r\n  public features = []\r\n  public donne = []\r\n  public propertyTypes = []\r\n  public propertyStatuses = []\r\n  public cities = []\r\n  public options = this.features\r\n  public neighborhoods = []\r\n  public streets = []\r\n  public feature = []\r\n  public data = []\r\n  public lat: number = 40.678178\r\n  public lng: number = -73.944158\r\n  public zoom: number = 12\r\n  public id: number = 0\r\n  public sub\r\n  fileData: File = null\r\n  previewUrl: any = null\r\n  files: File[] = []\r\n  public acomodationcreate: AccommodationCreate = new AccommodationCreate()\r\n  public adress: Adress = new Adress()\r\n  constructor(\r\n    public appService: AppService,\r\n    private fb: FormBuilder,\r\n    private mapsAPILoader: MapsAPILoader,\r\n    private ngZone: NgZone,\r\n    private globalservice: UploadService,\r\n    public accomodationservice: AccommodationsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    public devicesservice: DevicesService,\r\n  ) {}\r\n\r\n  onChange(event) {\r\n    // this.feature = <any>this.submitForm.get('additional.features').value as any;\r\n\r\n    if (event.checked) {\r\n      this.feature.push({ deviceId: event.source.value })\r\n    } else {\r\n      const i = this.feature.findIndex((x) => x.value === event.source.value)\r\n      this.feature.splice(i)\r\n    }\r\n  }\r\n  submitstep1() {\r\n    console.log(this.submitForm.get('basic.propertyType').value)\r\n\r\n    this.acomodationcreate.kind = this.submitForm.get(\r\n      'basic.propertyType',\r\n    ).value\r\n    this.acomodationcreate.size = this.submitForm.get(\r\n      'basic.propertyStatus',\r\n    ).value\r\n    this.acomodationcreate.step = 2\r\n    this.sub = this.activatedRoute.params.subscribe((params) => {\r\n      this.id = params['id']\r\n    })\r\n\r\n    this.submitstep6()\r\n  }\r\n  submitstep2() {\r\n    console.log(this.submitForm.get('address.city').value)\r\n    this.adress.city = this.submitForm.get('address.city').value\r\n    this.adress.postalCode = this.submitForm.get('address.zipCode').value\r\n    this.adress.street = this.submitForm.get('address.street').value\r\n    this.adress.addressComplement = this.submitForm.get(\r\n      'address.neighborhood',\r\n    ).value\r\n    this.adress.step = 3\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, { address: this.adress, step: 3 })\r\n      .subscribe((res) => {})\r\n  }\r\n  submitstep3() {\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, {\r\n        bathrooms: Number(this.submitForm.get('additional.bathrooms').value),\r\n        bedrooms: Number(this.submitForm.get('additional.bathrooms').value),\r\n        beds: Number(this.submitForm.get('additional.area').value),\r\n        travelers: Number(this.submitForm.get('additional.garages').value),\r\n        step: 4,\r\n      })\r\n      .subscribe((res) => {})\r\n    this.submitstep4()\r\n  }\r\n  submitstep4() {\r\n    var json = Object.assign({}, this.feature)\r\n\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, { equipments: this.feature, step: 5 })\r\n      .subscribe((res) => {})\r\n    this.globalservice.clear()\r\n  }\r\n  submitstep5() {\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, {\r\n        photos: this.globalservice.getMyGV(),\r\n        step: 6,\r\n      })\r\n      .subscribe((res) => {\r\n        this.submitstep8()\r\n      })\r\n    this.globalservice.clear()\r\n  }\r\n  public upload(event: any): void {\r\n    this.fileData = event.addedFiles[0]\r\n    this.files.push(...event.addedFiles)\r\n    console.log('Event: ', event.addedFiles)\r\n    console.log('FileName: ', this.fileData.name)\r\n    this.preview()\r\n  }\r\n  submitstep6() {\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, {\r\n        title: this.submitForm.get('basic.title').value,\r\n        description: this.submitForm.get('basic.desc').value,\r\n        step: 7,\r\n      })\r\n      .subscribe((res) => {\r\n        this.submitstep7()\r\n      })\r\n  }\r\n  submitstep7() {\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, {\r\n        price: this.submitForm.get('basic.priceEuro').value,\r\n        step: 8,\r\n      })\r\n      .subscribe((res) => {})\r\n  }\r\n  submitstep8() {\r\n    this.accomodationservice\r\n      .putAcommodation(this.id, { stauts: 1, step: 9 })\r\n      .subscribe((res) => {})\r\n  }\r\n\r\n  preview() {\r\n    const mimeType = this.fileData.type\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return\r\n    }\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(this.fileData)\r\n    reader.onload = (event) => {\r\n      this.previewUrl = reader.result\r\n      console.log('Result: ', reader.result)\r\n      console.log('Reader: ', this.previewUrl)\r\n    }\r\n  }\r\n\r\n  onRemove(event) {\r\n    console.log(event)\r\n    this.files.splice(this.files.indexOf(event), 1)\r\n    this.previewUrl = null\r\n  }\r\n  public formArray: FormArray\r\n  onCheckChange(event) {\r\n    this.formArray = this.submitForm.get('additional.features') as FormArray\r\n    /* Selected */\r\n    if (event.target.checked) {\r\n      // Add a new control in the arrayForm\r\n      this.formArray.push(new FormControl(event.target.i.value))\r\n    } else {\r\n    /* unselected */\r\n      // find the unselected element\r\n      let i: number = 0\r\n\r\n      this.formArray.controls.forEach((ctrl: FormControl) => {\r\n        if (ctrl.value == event.target.value) {\r\n          // Remove the unselected element from the arrayForm\r\n          this.formArray.removeAt(i)\r\n          return\r\n        }\r\n\r\n        i++\r\n      })\r\n    }\r\n  }\r\n\r\n  public async loaddata() {\r\n    const data = await this.devicesservice.getDevices().toPromise()\r\n    this.features = data\r\n  }\r\n  public async setfeatures(id, name) {\r\n    this.features.push({ id: id, name: name })\r\n  }\r\n\r\n  public async load() {\r\n    const data = await this.accomodationservice.getAccommodation(this.id).toPromise()\r\n    this.donne = data\r\n    console.log('donne', this.donne)\r\n  }\r\n  public async ngOnInit() {\r\n    // this.features = JSON.a;\r\n    this.sub = this.activatedRoute.params.subscribe(params => {   \r\n      this.id = params['id'];\r\n    });\r\n    await this.loaddata()\r\n    await this.load()\r\n    console.log('donne', this.donne)\r\n    console.log('hna:', this.features)\r\n \r\n    this.propertyTypes = this.appService.getPropertyTypes()\r\n    this.propertyStatuses = this.appService.getPropertyStatuses()\r\n    this.cities = this.appService.getCities()\r\n    this.neighborhoods = this.appService.getNeighborhoods()\r\n    this.streets = this.appService.getStreets()\r\n    \r\n    this.submitForm = this.fb.group({\r\n      basic: this.fb.group({\r\n        propertyType: [null, Validators.required],\r\n        propertyStatus: null,\r\n        title: [null, Validators.required],\r\n        desc: null,\r\n        priceEuro: null,\r\n        //    gallery: null\r\n      }),\r\n      address: this.fb.group({\r\n        location: ['', Validators.required],\r\n        city: [this.donne['address'].city, Validators.required],\r\n        zipCode: this.donne['address'].postalCode,\r\n        neighborhood: '',\r\n        street: this.donne['address'].street,\r\n      }),\r\n      additional: this.fb.group({\r\n        bedrooms: this.donne['bedrooms'],\r\n        bathrooms: this.donne['bathrooms'],\r\n        garages: this.donne['travelers'] ,\r\n        area: this.donne['beds'],\r\n        yearBuilt: '',\r\n        features: this.buildFeatures(),\r\n      }),\r\n      media: this.fb.group({\r\n        videos: this.fb.array([this.createVideo()]),\r\n        plans: this.fb.array([this.createPlan()]),\r\n        additionalFeatures: this.fb.array([this.createFeature()]),\r\n        featured: false,\r\n      }),\r\n    })\r\n\r\n    this.setCurrentPosition()\r\n    this.placesAutocomplete()\r\n  }\r\n\r\n  public onSelectionChange(e: any) {\r\n    if (e.selectedIndex == 4) {\r\n      this.horizontalStepper._steps.forEach((step) => (step.editable = false))\r\n      console.log(this.submitForm.value)\r\n    }\r\n  }\r\n  public reset() {\r\n    this.horizontalStepper.reset()\r\n\r\n    const videos = <FormArray>this.submitForm.controls.media.get('videos')\r\n    while (videos.length > 1) {\r\n      videos.removeAt(0)\r\n    }\r\n    const plans = <FormArray>this.submitForm.controls.media.get('plans')\r\n    while (plans.length > 1) {\r\n      plans.removeAt(0)\r\n    }\r\n    const additionalFeatures = <FormArray>(\r\n      this.submitForm.controls.media.get('additionalFeatures')\r\n    )\r\n    while (additionalFeatures.length > 1) {\r\n      additionalFeatures.removeAt(0)\r\n    }\r\n\r\n    this.submitForm.reset({\r\n      additional: {\r\n        features: this.features,\r\n      },\r\n      media: {\r\n        featured: false,\r\n      },\r\n    })\r\n  }\r\n\r\n  // -------------------- Address ---------------------------\r\n  public onSelectCity() {\r\n    this.submitForm.controls.address\r\n      .get('neighborhood')\r\n      .setValue(null, { emitEvent: false })\r\n    this.submitForm.controls.address\r\n      .get('street')\r\n      .setValue(null, { emitEvent: false })\r\n  }\r\n  public onSelectNeighborhood() {\r\n    this.submitForm.controls.address\r\n      .get('street')\r\n      .setValue(null, { emitEvent: false })\r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.lat = position.coords.latitude\r\n        this.lng = position.coords.longitude\r\n      })\r\n    }\r\n  }\r\n  private placesAutocomplete() {\r\n    this.mapsAPILoader.load().then(() => {\r\n      let autocomplete = new google.maps.places.Autocomplete(\r\n        this.addressAutocomplete.nativeElement,\r\n        {\r\n          types: ['address'],\r\n        },\r\n      )\r\n      autocomplete.addListener('place_changed', () => {\r\n        this.ngZone.run(() => {\r\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace()\r\n          if (place.geometry === undefined || place.geometry === null) {\r\n            return\r\n          }\r\n          this.lat = place.geometry.location.lat()\r\n          this.lng = place.geometry.location.lng()\r\n          this.getAddress()\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  // public getAddress(){\r\n  //   this.mapsAPILoader.load().then(() => {\r\n  //     let geocoder = new google.maps.Geocoder();\r\n  //     let latlng = new google.maps.LatLng(this.lat, this.lng);\r\n  //     geocoder.geocode({'location': latlng}, (results, status) => {\r\n  //       if(status === google.maps.GeocoderStatus.OK) {\r\n  //         console.log(results);\r\n  //         //this.addresstext.nativeElement.focus();\r\n  //         let address = results[0].formatted_address;\r\n  //         this.submitForm.controls.location.setValue(address);\r\n  //         this.setAddresses(results[0]);\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n  public getAddress() {\r\n    this.appService.getAddress(this.lat, this.lng).subscribe((response) => {\r\n      console.log(response)\r\n      if (response['results'].length) {\r\n        let address = response['results'][0].formatted_address\r\n        this.submitForm.controls.address.get('location').setValue(address)\r\n        this.setAddresses(response['results'][0])\r\n      }\r\n    })\r\n  }\r\n  public onMapClick(e: any) {\r\n    this.lat = e.coords.lat\r\n    this.lng = e.coords.lng\r\n    this.getAddress()\r\n  }\r\n  public onMarkerClick(e: any) {\r\n    console.log(e)\r\n  }\r\n\r\n  public setAddresses(result) {\r\n    this.submitForm.controls.address.get('city').setValue(null)\r\n    this.submitForm.controls.address.get('zipCode').setValue(null)\r\n    this.submitForm.controls.address.get('street').setValue(null)\r\n\r\n    var newCity, newStreet, newNeighborhood\r\n\r\n    result.address_components.forEach((item) => {\r\n      if (item.types.indexOf('locality') > -1) {\r\n        if (this.cities.filter((city) => city.name == item.long_name)[0]) {\r\n          newCity = this.cities.filter((city) => city.name == item.long_name)[0]\r\n        } else {\r\n          newCity = { id: this.cities.length + 1, name: item.long_name }\r\n          this.cities.push(newCity)\r\n        }\r\n        this.submitForm.controls.address.get('city').setValue(newCity)\r\n      }\r\n      if (item.types.indexOf('postal_code') > -1) {\r\n        this.submitForm.controls.address.get('zipCode').setValue(item.long_name)\r\n      }\r\n    })\r\n\r\n    if (!newCity) {\r\n      result.address_components.forEach((item) => {\r\n        if (item.types.indexOf('administrative_area_level_1') > -1) {\r\n          if (this.cities.filter((city) => city.name == item.long_name)[0]) {\r\n            newCity = this.cities.filter(\r\n              (city) => city.name == item.long_name,\r\n            )[0]\r\n          } else {\r\n            newCity = {\r\n              id: this.cities.length + 1,\r\n              name: item.long_name,\r\n            }\r\n            this.cities.push(newCity)\r\n          }\r\n          this.submitForm.controls.address.get('city').setValue(newCity)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (newCity) {\r\n      result.address_components.forEach((item) => {\r\n        if (item.types.indexOf('neighborhood') > -1) {\r\n          let neighborhood = this.neighborhoods.filter(\r\n            (n) => n.name == item.long_name && n.cityId == newCity.id,\r\n          )[0]\r\n          if (neighborhood) {\r\n            newNeighborhood = neighborhood\r\n          } else {\r\n            newNeighborhood = {\r\n              id: this.neighborhoods.length + 1,\r\n              name: item.long_name,\r\n              cityId: newCity.id,\r\n            }\r\n            this.neighborhoods.push(newNeighborhood)\r\n          }\r\n          this.neighborhoods = [...this.neighborhoods]\r\n          this.submitForm.controls.address\r\n            .get('neighborhood')\r\n            .setValue([newNeighborhood])\r\n        }\r\n      })\r\n    }\r\n\r\n    if (newCity) {\r\n      result.address_components.forEach((item) => {\r\n        if (item.types.indexOf('route') > -1) {\r\n          if (\r\n            this.streets.filter(\r\n              (street) =>\r\n                street.name == item.long_name && street.cityId == newCity.id,\r\n            )[0]\r\n          ) {\r\n            newStreet = this.streets.filter(\r\n              (street) =>\r\n                street.name == item.long_name && street.cityId == newCity.id,\r\n            )[0]\r\n          } else {\r\n            newStreet = {\r\n              id: this.streets.length + 1,\r\n              name: item.long_name,\r\n              cityId: newCity.id,\r\n              neighborhoodId: newNeighborhood ? newNeighborhood.id : null,\r\n            }\r\n            this.streets.push(newStreet)\r\n          }\r\n          this.streets = [...this.streets]\r\n          this.submitForm.controls.address.get('street').setValue([newStreet])\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // -------------------- Additional ---------------------------\r\n  public buildFeatures() {\r\n    const arr = this.features.map((feature) => {\r\n      return this.fb.group({\r\n        id: feature.id,\r\n        name: feature.name,\r\n      })\r\n    })\r\n    return this.fb.array(arr)\r\n  }\r\n\r\n  // -------------------- Media ---------------------------\r\n  public createVideo(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      link: null,\r\n    })\r\n  }\r\n  public addVideo(): void {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray\r\n    videos.push(this.createVideo())\r\n  }\r\n  public deleteVideo(index) {\r\n    const videos = this.submitForm.controls.media.get('videos') as FormArray\r\n    videos.removeAt(index)\r\n  }\r\n\r\n  public createPlan(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      desc: null,\r\n      area: null,\r\n      rooms: null,\r\n      baths: null,\r\n      image: null,\r\n    })\r\n  }\r\n  public addPlan(): void {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray\r\n    plans.push(this.createPlan())\r\n  }\r\n  public deletePlan(index) {\r\n    const plans = this.submitForm.controls.media.get('plans') as FormArray\r\n    plans.removeAt(index)\r\n  }\r\n\r\n  public createFeature(): FormGroup {\r\n    return this.fb.group({\r\n      id: null,\r\n      name: null,\r\n      value: null,\r\n    })\r\n  }\r\n  public addFeature(): void {\r\n    const features = this.submitForm.controls.media.get(\r\n      'additionalFeatures',\r\n    ) as FormArray\r\n    features.push(this.createFeature())\r\n  }\r\n  public deleteFeature(index) {\r\n    const features = this.submitForm.controls.media.get(\r\n      'additionalFeatures',\r\n    ) as FormArray\r\n    features.removeAt(index)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { AppService } from 'src/app/app.service';\nimport { DevicesService } from 'src/app/services/devices.service';\nimport { AddCustomFieldComponent } from '../../custom-fields/add-custom-field/add-custom-field.component';\n\n@Component({\n  selector: 'app-add-equipment',\n  templateUrl: './add-equipment.component.html',\n  styleUrls: ['./add-equipment.component.scss']\n})\nexport class AddEquipmentComponent implements OnInit {\n\n  form: FormGroup;\n  public propertyStatuses = [];\n  constructor(public dialogRef: MatDialogRef<AddCustomFieldComponent>,public devicesservice:DevicesService,private formBuilder: FormBuilder,public appService:AppService ) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      nom: ['',Validators.required],\n    }); \n    this.propertyStatuses = this.appService.getPropertyStatuses();\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  } \n  submit(){\n    var kinds=[{kind:this.form.value.type}]\n    const values = {category: 0, name: this.form.value.nom };\n    console.log('Ajouter :',values);\n    this.devicesservice.postDevices(values).subscribe(res => {\n      console.log('Ajouter : ', res);\n      this.onNoClick();\n    },\n      err => {\n        console.log(err);\n      });\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Property } from 'src/app/app.models';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { CustomFieldsService } from 'src/app/services/custom-fields.service';\r\nimport { DevicesService } from 'src/app/services/devices.service';\r\nimport { AddCustomFieldComponent } from '../custom-fields/add-custom-field/add-custom-field.component';\r\nimport { AddEquipmentComponent } from './add-equipment/add-equipment.component';\r\n\r\n@Component({\r\n  selector: 'app-equipments',\r\n  templateUrl: './equipments.component.html',\r\n  styleUrls: ['./equipments.component.scss']\r\n})\r\nexport class EquipmentsComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['Title','actions'];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  data :string[]=['Booleen','Texte','Nombre'];\r\n  constructor(public appService:AppService,public devicesservice:DevicesService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n   /* this.appService.getProperties().subscribe(res => {\r\n      this.initDataSource(res);\r\n    });    */\r\n  //  var event ;\r\n  //  event.pageIndex = 0;\r\n    \r\n    this.loaddata(0);\r\n  }\r\n  propertyType(data){\r\n    return this.data[parseInt(data)];\r\n  }\r\n  list: any[] = [];\r\n  loaddata(val:any){\r\n    this.devicesservice.getDevices().subscribe(res => {\r\n      if(!res){\r\n        return;\r\n      }   \r\n      this.dataSource = new MatTableDataSource<any>(res);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  openDialog(): void {\r\n\r\n    const dialogRef = this.dialog.open(AddEquipmentComponent, {\r\n      width: '800px',\r\n     /* data:{\r\n        id:\r\n      }*/\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      //this.libelle = result;\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n  public initDataSource(data:any){\r\n\r\n\r\n    this.dataSource = new MatTableDataSource<Property>(data);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  } \r\n  \r\n  public remove(element:any) {\r\n    \r\n   // const index: number = this.dataSource.data.indexOf(element.id);    \r\n    if (element !== -1) {\r\n      \r\n      const message = 'Etes Vous sur ?';\r\n      let dialogRef = this.appService.openConfirmDialog(null, message); \r\n\t\t\tdialogRef.afterClosed().subscribe(dialogResult => {\r\n\t\t\t\tif(dialogResult){ \r\n         // this.dataSource.data.splice(index,1);\r\n         // this.initDataSource(this.dataSource.data); \r\n          this.devicesservice.deleteDevice(element).subscribe(res => {\r\n            this.ngOnInit();\r\n          }\r\n          )\r\n\t\t\t\t}\r\n\t\t\t});   \r\n    } \r\n  } \r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  onPaginateChange(event){\r\n    this.loaddata(JSON.stringify(event.pageIndex));\r\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  displayedColumns: string[] = ['id', 'image', 'title', 'actions' ];\r\n  dataSource: MatTableDataSource<Property>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  \r\n  constructor(public appService:AppService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.appService.Data.favorites);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public remove(property:Property) {\r\n    const index: number = this.dataSource.data.indexOf(property);    \r\n    if (index !== -1) {\r\n      this.dataSource.data.splice(index,1);\r\n      this.dataSource = new MatTableDataSource<Property>(this.dataSource.data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    } \r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { Property } from 'src/app/app.models';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\n\n@Component({\n  selector: 'app-logements',\n  templateUrl: './logements.component.html',\n  styleUrls: ['./logements.component.scss']\n})\nexport class LogementsComponent implements OnInit {\n\n  displayedColumns: string[] = ['Type','Title','Status','actions'];\n  satuts: string[] = ['Brouillon','\tEn attente de validation','Validé'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  data :any[];\n  constructor(public appService:AppService,public accomodationservice:AccommodationsService) { }\n\n  ngOnInit() {\n   /* this.appService.getProperties().subscribe(res => {\n      this.initDataSource(res);\n    });    */\n  //  var event ;\n  //  event.pageIndex = 0;\n    this.data = this.appService.getPropertyStatuses();\n    this.loaddata(0);\n  }\n  propertyType(data){\n    return this.data[parseInt(data)].name;\n  }\n  list: any[] = [];\n  loaddata(val:any){\n    this.accomodationservice.getAccommodationsAll({page:val,toValidateOnly:false,searchTerm:''}).subscribe(res => {\n      if(!res){\n        return;\n      }\n      \n      this.dataSource = new MatTableDataSource(res['items']);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  \n  public initDataSource(data:any){\n\n\n    this.dataSource = new MatTableDataSource<Property>(data);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  } \n  \n  public remove(element:any) {\n    \n   // const index: number = this.dataSource.data.indexOf(element.id);    \n    if (element !== -1) {\n      \n      const message = 'Etes Vous sur ?';\n      let dialogRef = this.appService.openConfirmDialog(null, message); \n\t\t\tdialogRef.afterClosed().subscribe(dialogResult => {\n\t\t\t\tif(dialogResult){ \n         // this.dataSource.data.splice(index,1);\n         // this.initDataSource(this.dataSource.data); \n          this.accomodationservice.deleteAcommodation(element).subscribe(res => {\n            this.ngOnInit();\n          }\n          )\n\t\t\t\t}\n\t\t\t});   \n    } \n  } \n  public updatestatuts(element:any) {\n    \n    // const index: number = this.dataSource.data.indexOf(element.id);    \n     if (element !== -1) {\n       \n       const message = 'Publier ce logement ?';\n       let dialogRef = this.appService.openConfirmDialog(null, message); \n       dialogRef.afterClosed().subscribe(dialogResult => {\n         if(dialogResult){ \n          // this.dataSource.data.splice(index,1);\n          // this.initDataSource(this.dataSource.data); \n           this.accomodationservice.putAcommodation(element,{status:2}).subscribe(res => {\n             this.ngOnInit();\n           }\n           )\n         }\n       });   \n     } \n   } \n  getstatuts(a: any){\n    return this.satuts[a] ;\n  }\n\n  public applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  onPaginateChange(event){\n    this.loaddata(JSON.stringify(event.pageIndex));\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { Property } from 'src/app/app.models';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AccommodationsService } from 'src/app/services/accommodations.service';\r\n\r\n@Component({\r\n  selector: 'app-my-properties',\r\n  templateUrl: './my-properties.component.html',\r\n  styleUrls: ['./my-properties.component.scss']\r\n})\r\nexport class MyPropertiesComponent implements OnInit {\r\n \r\n  displayedColumns: string[] = ['Type','Title','Status','image','actions'];\r\n  satuts: string[] = ['Poursuivre la création','\tEn attente de validation','Publié'];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  data :any[];\r\n  constructor(public appService:AppService,public accomodationservice:AccommodationsService) { }\r\n\r\n  ngOnInit() {\r\n   /* this.appService.getProperties().subscribe(res => {\r\n      this.initDataSource(res);\r\n    });    */\r\n  //  var event ;\r\n  //  event.pageIndex = 0;\r\n    this.data = this.appService.getPropertyStatuses();\r\n    this.loaddata(0);\r\n  }\r\n  propertyType(data){\r\n    return this.data[parseInt(data)].name;\r\n  }\r\n  list: any[] = [];\r\n  loaddata(val:any){\r\n    this.accomodationservice.getAccommodationsHosts().subscribe(res => {\r\n      if(!res){\r\n        return;\r\n      }   \r\n      this.dataSource = new MatTableDataSource<any>(res);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n  \r\n  public initDataSource(data:any){\r\n\r\n\r\n    this.dataSource = new MatTableDataSource<Property>(data);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  } \r\n  \r\n  public remove(element:any) {\r\n    \r\n   // const index: number = this.dataSource.data.indexOf(element.id);    \r\n    if (element !== -1) {\r\n      \r\n      const message = 'Etes Vous sur ?';\r\n      let dialogRef = this.appService.openConfirmDialog(null, message); \r\n\t\t\tdialogRef.afterClosed().subscribe(dialogResult => {\r\n\t\t\t\tif(dialogResult){ \r\n         // this.dataSource.data.splice(index,1);\r\n         // this.initDataSource(this.dataSource.data); \r\n          this.accomodationservice.deleteAcommodation(element).subscribe(res => {\r\n            this.ngOnInit();\r\n          }\r\n          )\r\n\t\t\t\t}\r\n\t\t\t});   \r\n    } \r\n  } \r\n  public updatestatuts(element:any) {\r\n    \r\n    // const index: number = this.dataSource.data.indexOf(element.id);    \r\n     if (element !== -1) {\r\n       \r\n       const message = 'Publier ce logement ?';\r\n       let dialogRef = this.appService.openConfirmDialog(null, message); \r\n       dialogRef.afterClosed().subscribe(dialogResult => {\r\n         if(dialogResult){ \r\n          // this.dataSource.data.splice(index,1);\r\n          // this.initDataSource(this.dataSource.data); \r\n           this.accomodationservice.putAcommodation(element,{status:2}).subscribe(res => {\r\n             this.ngOnInit();\r\n           }\r\n           )\r\n         }\r\n       });   \r\n     } \r\n   } \r\n  getstatuts(a: any){\r\n    return this.satuts[a] ;\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  onPaginateChange(event){\r\n    this.loaddata(JSON.stringify(event.pageIndex));\r\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\r\n  }\r\n}","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { emailValidator, matchingPasswords } from 'src/app/theme/utils/app-validators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  public infoForm:FormGroup;\r\n  public passwordForm:FormGroup;\r\n  form: any;\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar,public UserService:UsersService,public appService:AppService) { }\r\n\r\n  async ngOnInit() {\r\n    var data = await this.UserService.getUsersprofile().toPromise();\r\n    this.infoForm = this.formBuilder.group({\r\n      firstname: [data['firstName'], Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      lastname: [data['lastName'], Validators.compose([Validators.required, Validators.minLength(3)])],\r\n    });\r\n  \r\n  }\r\n\r\n\r\n  submit(){\r\n    const values = {firstName: this.infoForm.get('firstname').value, lastName: this.infoForm.get('lastname').value};\r\n    console.log('Ajouter :',values);\r\n    this.UserService.putUsers(values).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.open(\"Vous avez bien modifier votre profil!\", '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 }); \r\n      }\r\n      else\r\n      this.snackBar.open('Erreur', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });   \r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { TestBed } from '@angular/core/testing';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-users',\r\n  templateUrl: './edit-users.component.html',\r\n  styleUrls: ['./edit-users.component.scss']\r\n})\r\nexport class EditUsersComponent implements OnInit {\r\n\r\n  public infoForm:FormGroup;\r\n  public passwordForm:FormGroup;\r\n  form: any;\r\n  constructor(public formBuilder: FormBuilder, public snackBar: MatSnackBar,public UserService:UsersService,public appService:AppService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private dialogRef: MatDialogRef<EditUsersComponent>) { }\r\n\r\n  async ngOnInit() {\r\n    var data = await this.UserService.getUsersid(this.data.id).toPromise();\r\n    this.infoForm = this.formBuilder.group({\r\n      firstname: [data['firstName'], Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      lastname: [data['lastName'], Validators.compose([Validators.required, Validators.minLength(3)])],\r\n     \r\n    });\r\n  \r\n  }\r\n  onNoclick(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  submit(){\r\n    const values = {FirstName: this.infoForm.get('firstname').value, LastName: this.infoForm.get('lastname').value, Certified:true,Email:'test@TestBed.test',ProfilePicture:''};\r\n    console.log('Ajouter :',values);\r\n    this.UserService.putUsersnoid(this.data.id,values).subscribe(res => {\r\n      console.log('Ajouter : ', res);\r\n      this.onNoclick();\r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","import { EditUsersComponent } from './edit-users/edit-users.component';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Property } from 'src/app/app.models';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { DevicesService } from 'src/app/services/devices.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { AddEquipmentComponent } from '../equipments/add-equipment/add-equipment.component';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n\r\n  displayedColumns: string[] = ['Title','Email','actions'];\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  data :string[]=['Booleen','Texte','Nombre'];\r\n  constructor(public appService:AppService,public userservice:UsersService,public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n   /* this.appService.getProperties().subscribe(res => {\r\n      this.initDataSource(res);\r\n    });    */\r\n  //  var event ;\r\n  //  event.pageIndex = 0;\r\n    \r\n    this.loaddata(0);\r\n  }\r\n  propertyType(data){\r\n    return this.data[parseInt(data)];\r\n  }\r\n  list: any[] = [];\r\n  loaddata(val:any){\r\n    this.userservice.getAllUsers().subscribe(res => {\r\n      if(!res){\r\n        return;\r\n      }   \r\n      this.dataSource = new MatTableDataSource<any>(res);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      console.log(this.dataSource);\r\n    });\r\n  }\r\n  openDialog(id): void {\r\n\r\n    const dialogRef = this.dialog.open(EditUsersComponent, {\r\n      width: '800px',\r\n      data:{\r\n        id:id\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      //this.libelle = result;\r\n      this.ngOnInit();\r\n    });\r\n\r\n  }\r\n  public initDataSource(data:any){\r\n\r\n\r\n    this.dataSource = new MatTableDataSource<Property>(data);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  } \r\n  \r\n  public remove(element:any) {\r\n    \r\n   // const index: number = this.dataSource.data.indexOf(element.id);    \r\n    if (element !== -1) {\r\n      \r\n      const message = 'Etes Vous sur ?';\r\n      let dialogRef = this.appService.openConfirmDialog(null, message); \r\n\t\t\tdialogRef.afterClosed().subscribe(dialogResult => {\r\n\t\t\t\tif(dialogResult){ \r\n         // this.dataSource.data.splice(index,1);\r\n         // this.initDataSource(this.dataSource.data); \r\n          this.userservice.deleteUsers(element).subscribe(res => {\r\n            this.ngOnInit();\r\n          }\r\n          )\r\n\t\t\t\t}\r\n\t\t\t});   \r\n    } \r\n  } \r\n\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  onPaginateChange(event){\r\n    this.loaddata(JSON.stringify(event.pageIndex));\r\n    //alert(JSON.stringify(\"Current page index: \" + event.pageIndex));\r\n  }\r\n\r\n}\r\n","import { CustomField } from './../models/CustomField/custom-field';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { constantURL } from '../shared/constantURL';\r\nimport { Observable } from 'rxjs';\r\nimport { CustomFieldCreate  } from './../models/CustomField/custom-field-create';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomFieldsService {\r\n  readonly url: string = constantURL.apiEndpoint+'/api/CustomFields';\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  \r\n  postCustomFields(CustomFieldsCreate){\r\n    return this.http.post(this.url, CustomField);\r\n\r\n}\r\n\r\n  getCustomFields(): Observable<any[]>{\r\n    return this.http.get<any[]>(this.url);\r\n\r\n  }\r\n  getCustomField(id){\r\n    return this.http.get(this.url+\"/\"+id);\r\n}\r\n\r\nputCustomField(id,customfieldUpdate) {\r\n  return this.http.put(`${this.url}/${id}`, customfieldUpdate);\r\n}\r\n\r\ndeleteCustomField(id) {\r\n  return this.http.delete(this.url+'/'+id);\r\n}\r\n\r\npostCustomField(CustomFieldCreate){\r\n  return this.http.post(this.url, CustomFieldCreate);\r\n\r\n}\r\ngetCustomFieldacommonadation(id,id2){\r\n  return this.http.get(this.url+\"/\"+id+\"/accommondation/\"+id2);\r\n}\r\n\r\n}\r\n","export default \"<div class=\\\"p-3\\\">\\r\\n    <div class=\\\"theme-container\\\">\\r\\n\\r\\n        <mat-sidenav-container class=\\\"account\\\">\\r\\n            <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"account-sidenav\\\">\\r\\n                <mat-card [perfectScrollbar]=\\\"psConfig\\\"> \\r\\n                    <button fxHide=\\\"false\\\" fxHide.gt-sm mat-mini-fab color=\\\"warn\\\" class=\\\"close\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <mat-icon>close</mat-icon>\\r\\n                    </button>\\r\\n                    <mat-card-header fxLayoutAlign=\\\"start center\\\">                       \\r\\n                        <img mat-card-avatar src=\\\"assets/images/others/user.jpg\\\" alt=\\\"\\\">\\r\\n                        <mat-card-title class=\\\"text-muted mb-0\\\">{{name}}</mat-card-title> \\r\\n                    </mat-card-header>\\r\\n                    <div class=\\\"divider my-3\\\"></div>\\r\\n                    <div *ngFor=\\\"let link of links\\\">\\r\\n                        <a matLine [routerLink]=\\\"link.href\\\" routerLinkActive=\\\"horizontal-active-link\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-3\\\">\\r\\n                            <mat-icon class=\\\"text-muted\\\">{{link.icon}}</mat-icon>\\r\\n                            <span class=\\\"mx-2\\\">{{ link.name }}</span>\\r\\n                        </a>\\r\\n                    </div>                      \\r\\n                  </mat-card>  \\r\\n            </mat-sidenav>\\r\\n            <mat-sidenav-content ngClass.gt-sm=\\\"distance\\\">\\r\\n              <mat-card *ngIf=\\\"!sidenavOpen\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"text-muted mb-3\\\">\\r\\n                  <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                      <mat-icon>more_vert</mat-icon>\\r\\n                  </button>\\r\\n                  <h3>Mon compte</h3>\\r\\n              </mat-card>              \\r\\n              <mat-card class=\\\"account-wrapper\\\">\\r\\n                  <router-outlet></router-outlet>\\r\\n              </mat-card>  \\r\\n            </mat-sidenav-content>\\r\\n        </mat-sidenav-container>\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<app-comments></app-comments>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"table-wrapper\\\"> \\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Arrive\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date d'arrivée </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.accommodationId ]\\\" class=\\\"property-name\\\">{{element.dateArrival | date: 'dd/MM/yyyy'}}</a></td>\\r\\n        </ng-container> \\r\\n\\r\\n        <ng-container matColumnDef=\\\"Departure\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date de départ </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.accommodationId ]\\\" class=\\\"property-name\\\">{{element.dateDeparture | date: 'dd/MM/yyyy'}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <ng-container matColumnDef=\\\"Price\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Payé</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.accommodationId ]\\\" class=\\\"property-name\\\">{{element.paid}}€</a></td>\\r\\n        </ng-container> \\r\\n\\r\\n        <ng-container matColumnDef=\\\"Status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut de la réservation </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.accommodationId ]\\\" class=\\\"property-name\\\">{{getstatuts(element.bookingStatus)}}</a></td>\\r\\n          </ng-container> \\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n              <button mat-icon-button color=\\\"warn\\\" [routerLink]=\\\"['/properties', element.accommodationId ]\\\" matTooltip=\\\"Parcourire\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>zoom_in</mat-icon>\\r\\n              </button> \\r\\n             <button *ngIf=\\\"compare(element.dateArrival)  && element.bookingStatus==2\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"openDialog(element.accommodationId)\\\" matTooltip=\\\"Laisser un avis\\\" class=\\\"remove\\\">\\r\\n              <mat-icon>rate_review</mat-icon>\\r\\n          </button> \\r\\n\\r\\n          </td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table> \\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div class=\\\"col-xl-12 order-xl-1\\\">\\n    <div class=\\\"card bg-secondary shadow\\\">\\n      <div class=\\\"card-header bg-white border-0\\\">\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col-8\\\">\\n            <h3 class=\\\"mb-0\\\">Ajouter un champ personnalisé</h3>\\n          </div>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n          <h6 class=\\\"heading-small text-muted mb-4\\\">Information du champ</h6>\\n          <div class=\\\"pl-lg-4\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                        <mat-label>Type de logement</mat-label>\\n                        <mat-select placeholder=\\\"Type de logement\\\" formControlName=\\\"type\\\" >\\n                            <mat-option *ngFor=\\\"let propertyStatus of propertyStatuses\\\" [value]=\\\"propertyStatus.id\\\">\\n                                {{propertyStatus.name}}\\n                            </mat-option>\\n                        </mat-select>                             \\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                        <mat-label>Nom du champ pérsonalisé</mat-label>\\n                        <input matInput placeholder=\\\"Nom\\\" formControlName=\\\"nom\\\" autocomplete=\\\"off\\\"> \\n                    </mat-form-field>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                        <mat-label>Type de valeur attendu</mat-label>\\n                        <mat-select placeholder=\\\"Type de logement\\\" formControlName=\\\"valeur\\\" >\\n                            <mat-option  [value]=\\\"0\\\">\\n                                Booléen\\n                            </mat-option>\\n                            <mat-option  [value]=\\\"1\\\">\\n                                Texte\\n                            </mat-option>\\n                            <mat-option  [value]=\\\"2\\\">\\n                                Nombre\\n                            </mat-option>\\n                        </mat-select>                             \\n                    </mat-form-field> \\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                        <mat-label>Déscription</mat-label>\\n                        <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\"> \\n                    </mat-form-field>\\n                  </div>\\n              </div>\\n            </div>\\n           \\n          </div>\\n          <hr class=\\\"my-4\\\" />\\n       \\n  \\n  \\n          <div class=\\\"col-12 text-right\\\">\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: grey;\\\" (click)=\\\"onNoClick()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                <mat-icon>cancel</mat-icon>\\n                <span class=\\\"mx-1 uppercase\\\">Annuler</span>  \\n              </button>\\n\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"submit()\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                <span class=\\\"mx-1 uppercase\\\">Ajouter </span>                    \\n                <mat-icon>add_circle</mat-icon>\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\";","export default \"<a mat-raised-button color=\\\"primary\\\" style=\\\"margin:1%;\\\" (click)=\\\"openDialog()\\\">Ajouter</a>\\r\\n<br>\\r\\n<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filtrer les proprietées\\\" autocomplete=\\\"off\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"table-wrapper\\\"> \\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n    \\r\\n        <!-- ID Column -->\\r\\n       <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n        </ng-container>  \\r\\n  \\r\\n        <!-- Image Column -->\\r\\n\\r\\n        <!-- Title Column -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom du champ personnalisé </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.label}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n       <ng-container matColumnDef=\\\"Value\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Type de valeur attendu</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{propertyType(element.value)}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n\\r\\n       <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(element.id)\\\" matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n              </button> \\r\\n          </td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table> \\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";","export default \"<p>\\r\\n  dashboard works!\\r\\n</p>\\r\\n\";","export default \"<div class=\\\"p-3\\\">\\r\\n  <div class=\\\"theme-container\\\">\\r\\n\\r\\n    <mat-card ngClass.lt-lg=\\\"p-0\\\" [formGroup]=\\\"submitForm\\\">\\r\\n\\r\\n      <mat-horizontal-stepper #horizontalStepper linear=\\\"false\\\" class=\\\"submit-property\\\" (selectionChange)=\\\"onSelectionChange($event)\\\">          \\r\\n          <mat-step [stepControl]=\\\"submitForm.get('address')\\\" label=\\\"Address\\\">\\r\\n            <div class=\\\"step-content\\\">\\r\\n                <form formGroupName=\\\"address\\\" fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                      <h1 class=\\\"fw-500 text-center\\\">Addresse</h1>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-icon matPrefix class=\\\"mr-1 text-muted\\\">location_on</mat-icon>\\r\\n                          <mat-label>Location</mat-label>\\r\\n                          <input matInput placeholder=\\\"Enter a location\\\" formControlName=\\\"location\\\" autocomplete=\\\"off\\\" #addressAutocomplete> \\r\\n                          <button *ngIf=\\\"submitForm.get('address')['controls'].location.value\\\" mat-button matSuffix mat-icon-button (click)=\\\"submitForm.get('address')['controls'].location.setValue(null)\\\" type=\\\"button\\\">\\r\\n                            <mat-icon>Fermer</mat-icon>\\r\\n                          </button>\\r\\n                          <mat-error *ngIf=\\\"submitForm.get('address')['controls'].location.errors?.required\\\">La localisation est obligatoire</mat-error>   \\r\\n                      </mat-form-field>\\r\\n                    </div> \\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"px-2 mb-4\\\">\\r\\n                        <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [mapTypeControl]=\\\"true\\\" [fullscreenControl]=\\\"true\\\" (mapClick)=\\\"onMapClick($event)\\\">\\r\\n                            <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [markerDraggable]=\\\"true\\\" (markerClick)=\\\"onMarkerClick($event)\\\"></agm-marker>\\r\\n                        </agm-map>\\r\\n                    </div>\\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Ville</mat-label>\\r\\n                          <mat-select placeholder=\\\"Select City...\\\" formControlName=\\\"city\\\" (selectionChange)=\\\"onSelectCity()\\\" required> \\r\\n                            <mat-option *ngFor=\\\"let city of cities\\\" [value]=\\\"city.name\\\">\\r\\n                              {{city.name}}\\r\\n                            </mat-option>\\r\\n                          </mat-select> \\r\\n                          <mat-error *ngIf=\\\"submitForm.get('address')['controls'].city.errors?.required\\\">City is required</mat-error>                    \\r\\n                      </mat-form-field>\\r\\n                    </div> \\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Code postale</mat-label>\\r\\n                          <input matInput placeholder=\\\"Code postale\\\" autocomplete=\\\"off\\\" formControlName=\\\"zipCode\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Quatier</mat-label>\\r\\n                        <mat-select placeholder=\\\"Select Neighborhood...\\\" formControlName=\\\"neighborhood\\\"  (selectionChange)=\\\"onSelectNeighborhood()\\\">\\r\\n                          <mat-option *ngFor=\\\"let neighborhood of neighborhoods | filterNeighborhoods: submitForm.get('address')['controls'].city.value?.id\\\" [value]=\\\"neighborhood.name\\\">\\r\\n                            {{neighborhood.name}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>   \\r\\n                      </mat-form-field>\\r\\n                    </div> \\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Rue</mat-label>\\r\\n                        <mat-select placeholder=\\\"Select Street...\\\" formControlName=\\\"street\\\" > \\r\\n                          <mat-option *ngFor=\\\"let street of streets | filterStreets : { neighborhoods: submitForm.get('address')['controls'].neighborhood.value?.id, cityId:submitForm.get('address')['controls'].city.value?.id } \\\" [value]=\\\"street.name\\\">\\r\\n                            {{street.name}}\\r\\n                          </mat-option>\\r\\n                        </mat-select>  \\r\\n                      </mat-form-field>\\r\\n                    </div> \\r\\n                  \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                      <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                        <mat-icon>navigate_before</mat-icon>\\r\\n                        <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                      </button>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" matStepperNext (click)= \\\"submitstep2()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                        <span class=\\\"mx-1 uppercase\\\">Suivant</span>                    \\r\\n                        <mat-icon>navigate_next</mat-icon>\\r\\n                      </button> \\r\\n                    </div>  \\r\\n                  \\r\\n                </form>\\r\\n              \\r\\n            </div> \\r\\n          </mat-step>\\r\\n\\r\\n          <mat-step [stepControl]=\\\"submitForm.get('additional')\\\" label=\\\"Additional\\\">\\r\\n            <div class=\\\"step-content\\\">\\r\\n\\r\\n                <form formGroupName=\\\"additional\\\" fxLayout=\\\"row wrap\\\">\\r\\n  \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                      <h1 class=\\\"fw-500 text-center\\\">Supplémentaire</h1>\\r\\n                    </div>\\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Chambres</mat-label>\\r\\n                          <input matInput placeholder=\\\"bedrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bedrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Salles de bains</mat-label>\\r\\n                          <input matInput placeholder=\\\"bathrooms\\\" autocomplete=\\\"off\\\" formControlName=\\\"bathrooms\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Nombre de voyageur</mat-label>\\r\\n                          <input matInput placeholder=\\\"Garages\\\" autocomplete=\\\"off\\\" formControlName=\\\"garages\\\" onlyNumber maxlength=\\\"2\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Nombre de lits</mat-label>\\r\\n                          <input matInput placeholder=\\\"Area\\\" autocomplete=\\\"off\\\" formControlName=\\\"area\\\" onlyNumber>                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                 <!--   \\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"px-2\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                          <mat-label>Année de construction</mat-label>\\r\\n                          <input matInput placeholder=\\\"Year Built\\\" autocomplete=\\\"off\\\" formControlName=\\\"yearBuilt\\\" onlyNumber  maxlength=\\\"4\\\">                  \\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                  -->\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mb-2\\\"> \\r\\n                        <p class=\\\"uppercase m-2 fw-500\\\">Caractéristiques</p> \\r\\n                        <div formArrayName=\\\"features\\\" fxLayout=\\\"row wrap\\\">\\r\\n                            <div [formGroupName]=\\\"i\\\" *ngFor=\\\"let control of submitForm.get('additional')['controls'].features['controls']; index as i\\\"   class=\\\"p-2\\\">\\r\\n                                <mat-checkbox formControlName=\\\"selected\\\" (change)=\\\"onChange($event)\\\"  [value]=\\\"features[i].id \\\">{{features[i].name }}</mat-checkbox>                         \\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                \\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                      <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                        <mat-icon>navigate_before</mat-icon>\\r\\n                        <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                      </button>\\r\\n                      <button mat-raised-button color=\\\"primary\\\" matStepperNext (click)= \\\"submitstep3()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                        <span class=\\\"mx-1 uppercase\\\">Suivant</span>                    \\r\\n                        <mat-icon>navigate_next</mat-icon>\\r\\n                      </button> \\r\\n                    </div>        \\r\\n                </form>\\r\\n                \\r\\n              \\r\\n            </div> \\r\\n          </mat-step>\\r\\n\\r\\n          <mat-step [stepControl]=\\\"submitForm.get('media')\\\" label=\\\"Media\\\">\\r\\n            <div class=\\\"step-content\\\">\\r\\n\\r\\n                <form formGroupName=\\\"media\\\" fxLayout=\\\"row wrap\\\">    \\r\\n                 \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"p-3\\\">\\r\\n                      <h1 class=\\\"fw-500 text-center\\\">Media</h1>\\r\\n                    </div>\\r\\n                <!--\\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                        <p class=\\\"mb-0\\\"><span class=\\\"uppercase fw-500\\\">Videos</span><span class=\\\"text-muted mx-3\\\">(video link to .mp4)</span></p>                            \\r\\n                        <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addVideo()\\\" matTooltip=\\\"Add New Video\\\" matTooltipPosition=\\\"after\\\">\\r\\n                            <mat-icon>add_circle</mat-icon>\\r\\n                        </button>\\r\\n                    </div> \\r\\n                    <div formArrayName=\\\"videos\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                        <div *ngFor=\\\"let item of submitForm.get('media')['controls'].videos['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                            <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                            <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Nom</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Video name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Lien</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Link to video\\\" formControlName=\\\"link\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field>                                                 \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteVideo(i)\\\" matTooltip=\\\"Delete Video\\\">\\r\\n                                    <mat-icon>Annuler</mat-icon>\\r\\n                                </button>\\r\\n                            </div>                            \\r\\n                        </div>        \\r\\n                    </div>\\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                        <p class=\\\"uppercase fw-500 mb-0\\\">Plans</p>                            \\r\\n                        <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addPlan()\\\" matTooltip=\\\"Add New Plan\\\" matTooltipPosition=\\\"after\\\" class=\\\"mx-3\\\">\\r\\n                            <mat-icon>add_circle</mat-icon>\\r\\n                        </button>\\r\\n                    </div> \\r\\n                    <div formArrayName=\\\"plans\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                        <div *ngFor=\\\"let item of submitForm.get('media')['controls'].plans['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section pb-2\\\">\\r\\n                            <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                            <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Nom</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Plan name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Description</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Description\\\" formControlName=\\\"desc\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field> \\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Supérficie (ft²)</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Area\\\" formControlName=\\\"area\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Chambres</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Rooms\\\" formControlName=\\\"rooms\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"33.3\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Salles de bains</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Baths\\\" formControlName=\\\"baths\\\" autocomplete=\\\"off\\\" onlyNumber>     \\r\\n                                </mat-form-field>\\r\\n                                <div fxFlex=\\\"100\\\" class=\\\"px-2\\\">  \\r\\n                                    <input-file placeholder=\\\"Image (or link to image)\\\" formControlName=\\\"image\\\" fileLimit=\\\"1\\\" fileAccept=\\\"image/*\\\" [linkEnabled]=\\\"true\\\"></input-file>  \\r\\n                                </div>                \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deletePlan(i)\\\" matTooltip=\\\"Delete Plan\\\">\\r\\n                                    <mat-icon>Annuler</mat-icon>\\r\\n                                </button>\\r\\n                            </div>  \\r\\n                        </div>        \\r\\n                    </div> \\r\\n                \\r\\n                    \\r\\n                    <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"my-3 px-2\\\"> \\r\\n                        <p class=\\\"mb-0 uppercase fw-500\\\">Caractéristiques supplémentaires</p>                            \\r\\n                        <button type=\\\"button\\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"addFeature()\\\" matTooltip=\\\"Add New Feature\\\" matTooltipPosition=\\\"after\\\">\\r\\n                            <mat-icon>add_circle</mat-icon>\\r\\n                        </button>\\r\\n                    </div> \\r\\n                    <div formArrayName=\\\"additionalFeatures\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row wrap\\\">  \\r\\n                        <div *ngFor=\\\"let item of submitForm.get('media')['controls'].additionalFeatures['controls']; let i = index;\\\" fxFlex=\\\"100\\\" class=\\\"step-section\\\">\\r\\n                            <div fxFlex=\\\"4\\\" class=\\\"fw-500 text-center pt-3\\\">{{i+1}}.</div>\\r\\n                            <div [formGroupName]=\\\"i\\\" fxFlex=\\\"90\\\" fxLayout=\\\"row wrap\\\">\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Nom</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Feature name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field>\\r\\n                                <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\" class=\\\"px-2\\\">\\r\\n                                    <mat-label>Valeur</mat-label>\\r\\n                                    <input matInput placeholder=\\\"Feature value\\\" formControlName=\\\"value\\\" autocomplete=\\\"off\\\">     \\r\\n                                </mat-form-field>                                                 \\r\\n                            </div>\\r\\n                            <div fxFlex=\\\"6\\\" class=\\\"text-center pt-2\\\">\\r\\n                                <button mat-icon-button color=\\\"warn\\\" (click)=\\\"deleteFeature(i)\\\" matTooltip=\\\"Delete Feature\\\">\\r\\n                                    <mat-icon>Annuler</mat-icon>\\r\\n                                </button>\\r\\n                            </div>                            \\r\\n                        </div>        \\r\\n                    </div>\\r\\n                \\r\\n                \\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"py-3\\\">\\r\\n                        <mat-slide-toggle formControlName=\\\"featured\\\">Featured</mat-slide-toggle>\\r\\n                    </div>\\r\\n                 \\r\\n\\r\\n                  <ngx-dropzone   class=\\\"custom-dropzone\\\" ngx-dropzone [multiple]=\\\"true\\\" [accept]=\\\"'image/jpeg,image/jpg,image/png,image/gif'\\\"\\r\\n                  (change)=\\\"upload($event)\\\">\\r\\n                    <ngx-dropzone-label>ajouter une image</ngx-dropzone-label>\\r\\n                  \\r\\n                    <ngx-dropzone-image-preview ngProjectAs=\\\"ngx-dropzone-preview\\\" *ngFor=\\\"let f of files\\\" [file]=\\\"f\\\" [removable]=\\\"true\\\" (removed)=\\\"onRemove(f)\\\" >\\r\\n                      <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\\r\\n                    </ngx-dropzone-image-preview>\\r\\n                </ngx-dropzone>\\r\\n              -->\\r\\n              <app-upload-manager></app-upload-manager>\\r\\n                    <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <button mat-raised-button color=\\\"primary\\\" matStepperPrevious fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                            <mat-icon>navigate_before</mat-icon>\\r\\n                            <span class=\\\"mx-1 uppercase\\\">Précédent</span>  \\r\\n                        </button>\\r\\n                        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submitstep5()\\\" matStepperNext fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\r\\n                            <span class=\\\"mx-1 uppercase\\\">Soumettre</span>                    \\r\\n                            <mat-icon>navigate_next</mat-icon>\\r\\n                        </button> \\r\\n                    </div> \\r\\n                 \\r\\n                \\r\\n                </form>\\r\\n              \\r\\n            </div> \\r\\n          </mat-step>\\r\\n\\r\\n          <mat-step label=\\\"Confirmation\\\">\\r\\n            <div class=\\\"step-content\\\">\\r\\n              \\r\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-5 text-center\\\"> \\r\\n                  <button mat-fab color=\\\"primary\\\"><mat-icon>check</mat-icon></button>\\r\\n                  <h2 class=\\\"mt-3 uppercase\\\">Félicitation!</h2>\\r\\n              <!--    <h2 class=\\\"my-3\\\">Votre bien <span class=\\\"primary-color\\\">\\\"{{submitForm.get('basic')['controls'].title.value}}\\\"</span> has been submitted</h2>-->\\r\\n                  <p class=\\\"text-muted\\\">Votre logement a bien été ajouté et est en attente de validation.</p>\\r\\n                </div>\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-3\\\">  \\r\\n                  <button mat-raised-button color=\\\"accent\\\" (click)=\\\"reset()\\\" type=\\\"button\\\">Retourner pour soumettre une nouvelle propriété</button>       \\r\\n                </div>\\r\\n\\r\\n            </div> \\r\\n          </mat-step>\\r\\n\\r\\n      </mat-horizontal-stepper>\\r\\n\\r\\n    </mat-card>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-xl-12 order-xl-1\\\">\\n    <div class=\\\"card bg-secondary shadow\\\">\\n      <div class=\\\"card-header bg-white border-0\\\">\\n        <div class=\\\"row align-items-center\\\">\\n          <div class=\\\"col-8\\\">\\n            <h3 class=\\\"mb-0\\\">Ajouter un equipement</h3>\\n          </div>\\n  \\n        </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n          <h6 class=\\\"heading-small text-muted mb-4\\\">Information du champ pérsonalisé</h6>\\n          <div class=\\\"pl-lg-4\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\n                        <mat-label>Nom de l'equipement</mat-label>\\n                        <input matInput placeholder=\\\"Nom\\\" formControlName=\\\"nom\\\" autocomplete=\\\"off\\\"> \\n                    </mat-form-field>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n          <hr class=\\\"my-4\\\" />\\n          <div class=\\\"col-12 text-right\\\">\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-3 p-2\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <button mat-raised-button color=\\\"primary\\\" style=\\\"background-color: grey;\\\" (click)=\\\"onNoClick()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                <mat-icon>cancel</mat-icon>\\n                <span class=\\\"mx-1 uppercase\\\">Annuler</span>  \\n              </button>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"submit()\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" type=\\\"button\\\">\\n                <span class=\\\"mx-1 uppercase\\\">Ajouter </span>                    \\n                <mat-icon>add_circle</mat-icon>\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\";","export default \"<a mat-raised-button color=\\\"primary\\\" style=\\\"margin:1%;\\\" (click)=\\\"openDialog()\\\">Ajouter</a>\\r\\n<br>\\r\\n<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"table-wrapper\\\"> \\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n    \\r\\n        <!-- ID Column -->\\r\\n       <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n        </ng-container>  \\r\\n  \\r\\n        <!-- Image Column -->\\r\\n\\r\\n        <!-- Title Column -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom de l'equipement </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.name}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n\\r\\n        \\r\\n\\r\\n       <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(element.id)\\\" matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n              </button> \\r\\n          </td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table> \\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field> \\r\\n<div class=\\\"table-wrapper\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Image Column -->\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Photo </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Titre </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"><a [routerLink]=\\\"['/properties', property.id ]\\\" class=\\\"property-name\\\">{{property.title}}</a></td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Supprimé </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> \\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(property)\\\" matTooltip=\\\"Remove\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>Supprimmer</mat-icon>\\r\\n            </button> \\r\\n        </td>\\r\\n      </ng-container> \\r\\n  \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table> \\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"table-wrapper\\\"> \\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n    \\r\\n        <!-- ID Column -->\\r\\n       <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n        </ng-container>  \\r\\n  \\r\\n        <!-- Image Column -->\\r\\n       <!-- <ng-container matColumnDef=\\\"image\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"><img [src]=\\\"property.gallery[0].small\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n        </ng-container> \\r\\n    \\r\\n        <!-- Title Column -->\\r\\n        <ng-container matColumnDef=\\\"Type\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Type de logement </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{propertyType(element.kind)}}</a></td>\\r\\n        </ng-container> \\r\\n\\r\\n        <ng-container matColumnDef=\\\"Title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Titre du logement </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.title}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <ng-container matColumnDef=\\\"Status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut de logement </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{getstatuts(element.status)}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <!-- Published Column \\r\\n        <ng-container matColumnDef=\\\"published\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd MMMM, yyyy\\\"}} </td>\\r\\n        </ng-container> \\r\\n  \\r\\n        <!-- Views Column \\r\\n        <ng-container matColumnDef=\\\"views\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\r\\n        </ng-container> \\r\\n      \\r\\n        Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n              <a [routerLink]=\\\"['/account/my-properties', element.id]\\\"mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Modifier\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n              </a>\\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(element.id)\\\" matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n              </button> \\r\\n              <button *ngIf=\\\"element.status==1  \\\" mat-icon-button color=\\\"primary\\\" (click)=\\\"updatestatuts(element.id)\\\" matTooltip=\\\"Publier\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>done outline icon</mat-icon>\\r\\n            </button> \\r\\n          </td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table> \\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";","export default \"<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n</mat-form-field>\\r\\n<div class=\\\"table-wrapper\\\"> \\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n  \\r\\n      <!-- ID Column -->\\r\\n     <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n      </ng-container>  \\r\\n\\r\\n      <!-- Image Column -->\\r\\n      <ng-container matColumnDef=\\\"image\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"><img *ngIf=\\\"element.photos.length > 01\\\" [src]=\\\"element.photos[0].name\\\" [style.width.px]=\\\"100\\\" class=\\\"d-block\\\"></td>\\r\\n      </ng-container> \\r\\n\\r\\n      <ng-container matColumnDef=\\\"Status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Statut de logement </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/account/my-properties', element.id ]\\\" mat-raised-button color=\\\"primary\\\" *ngIf=\\\"element.status == 0\\\">Poursuivre la création</a><a *ngIf=\\\"element.status != 0\\\" [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{getstatuts(element.status)}}</a></td>\\r\\n      </ng-container> \\r\\n      <!-- Title Column -->\\r\\n      <ng-container matColumnDef=\\\"Type\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Type de logement </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{propertyType(element.kind)}}</a></td>\\r\\n      </ng-container> \\r\\n\\r\\n      <ng-container matColumnDef=\\\"Title\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Titre du logement </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.title}}</a></td>\\r\\n      </ng-container> \\r\\n      \\r\\n    <!--  <ng-container matColumnDef=\\\"Status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Ville </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.address.city}}</a></td>\\r\\n      </ng-container> -->\\r\\n      \\r\\n      <!-- Published Column \\r\\n      <ng-container matColumnDef=\\\"published\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Published </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.published | date:\\\"dd MMMM, yyyy\\\"}} </td>\\r\\n      </ng-container> \\r\\n\\r\\n      <!-- Views Column \\r\\n      <ng-container matColumnDef=\\\"views\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Views </th>\\r\\n        <td mat-cell *matCellDef=\\\"let property\\\"> {{property.views}} </td>\\r\\n      </ng-container> \\r\\n    \\r\\n      Actions Column -->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n          <a [routerLink]=\\\"['/host', element.id]\\\"mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Gérer\\\">\\r\\n            <mat-icon>settings</mat-icon>\\r\\n        </a>\\r\\n            <a [routerLink]=\\\"['/account/my-properties', element.id]\\\"mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Modifier\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n            </a>\\r\\n            <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(element.id)\\\" matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n            </button> \\r\\n        </td>\\r\\n      </ng-container> \\r\\n      \\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table> \\r\\n    <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n</div>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Détails du compte</h2>\\r\\n        <form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"submit()\\\" *ngIf=\\\"infoForm\\\"> \\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Prénom</mat-label>\\r\\n                <input matInput placeholder=\\\"Prénom\\\" formControlName=\\\"firstname\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstname.errors?.required\\\">Le prénom est requis</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstname.hasError('minlength')\\\">Le nom doit contenir 3 caractères minimum</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput placeholder=\\\"Nom\\\" formControlName=\\\"lastname\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastname.errors?.required\\\">Le nom est requis</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastname.hasError('minlength')\\\">Le nom doit contenir 3 caractères minimum</mat-error>\\r\\n            </mat-form-field>\\r\\n           \\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Mettre à jour le profil</button>\\r\\n            </div> \\r\\n        </form>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</div> \\r\\n\";","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-3\\\">\\r\\n        <h2 class=\\\"text-muted text-center fw-600 mb-3\\\">Détails du compte</h2>\\r\\n        <form [formGroup]=\\\"infoForm\\\" (ngSubmit)=\\\"submit()\\\" *ngIf=\\\"infoForm\\\"> \\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Prénom</mat-label>\\r\\n                <input matInput placeholder=\\\"Prénom\\\" formControlName=\\\"firstname\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstname.errors?.required\\\">Le prénom est requis</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.firstname.hasError('minlength')\\\">Le nom doit contenir 3 caractères minimum</mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                <mat-label>Nom</mat-label>\\r\\n                <input matInput placeholder=\\\"Nom\\\" formControlName=\\\"lastname\\\" required autocomplete=\\\"off\\\">\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastname.errors?.required\\\">Le nom est requis</mat-error>\\r\\n                <mat-error *ngIf=\\\"infoForm.controls.lastname.hasError('minlength')\\\">Le nom doit contenir 3 caractères minimum</mat-error>\\r\\n            </mat-form-field>\\r\\n           \\r\\n            <div class=\\\"text-center mt-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"uppercase\\\">Mettre à jour le profil</button>\\r\\n            </div> \\r\\n        </form>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n</div> \\r\\n\";","export default \"\\r\\n<br>\\r\\n<mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter properties\\\" autocomplete=\\\"off\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"table-wrapper\\\"> \\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n    \\r\\n        <!-- ID Column -->\\r\\n       <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let property\\\"> {{property.id}} </td>\\r\\n        </ng-container>  \\r\\n  \\r\\n        <!-- Image Column -->\\r\\n\\r\\n        <!-- Title Column -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Title\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\"><a [routerLink]=\\\"['/properties', element.id ]\\\" class=\\\"property-name\\\">{{element.firstName}} {{element.lastName}}</a></td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <ng-container matColumnDef=\\\"Email\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element \\\">{{element.email}}</td>\\r\\n        </ng-container> \\r\\n        \\r\\n\\r\\n       <!-- Actions Column -->\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">  \\r\\n              <a  (click)=\\\"openDialog(element.id)\\\" mat-icon-button color=\\\"primary\\\" matTooltip=\\\"Modifier\\\">\\r\\n                  <mat-icon>edit</mat-icon>\\r\\n              </a>\\r\\n              <button mat-icon-button color=\\\"warn\\\" (click)=\\\"remove(element.id)\\\" matTooltip=\\\"Supprimer\\\" class=\\\"remove\\\">\\r\\n                  <mat-icon>delete</mat-icon>\\r\\n              </button> \\r\\n          </td>\\r\\n        </ng-container> \\r\\n        \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let property; columns: displayedColumns;\\\">\\r\\n        </tr>\\r\\n      </table> \\r\\n      <p *ngIf=\\\"dataSource?.data.length === 0\\\" class=\\\"py-5 mb-0 text-center\\\">Pas de données disponibles</p> \\r\\n  </div>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[20]\\\"  (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\";"],"names":[],"sourceRoot":"webpack:///"}